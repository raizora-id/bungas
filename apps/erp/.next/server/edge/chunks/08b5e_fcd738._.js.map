{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/compiled/@opentelemetry/api/index.js"],"sourcesContent":["(()=>{\"use strict\";var e={491:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ContextAPI=void 0;const n=r(223);const a=r(172);const o=r(930);const i=\"context\";const c=new n.NoopContextManager;class ContextAPI{constructor(){}static getInstance(){if(!this._instance){this._instance=new ContextAPI}return this._instance}setGlobalContextManager(e){return(0,a.registerGlobal)(i,e,o.DiagAPI.instance())}active(){return this._getContextManager().active()}with(e,t,r,...n){return this._getContextManager().with(e,t,r,...n)}bind(e,t){return this._getContextManager().bind(e,t)}_getContextManager(){return(0,a.getGlobal)(i)||c}disable(){this._getContextManager().disable();(0,a.unregisterGlobal)(i,o.DiagAPI.instance())}}t.ContextAPI=ContextAPI},930:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagAPI=void 0;const n=r(56);const a=r(912);const o=r(957);const i=r(172);const c=\"diag\";class DiagAPI{constructor(){function _logProxy(e){return function(...t){const r=(0,i.getGlobal)(\"diag\");if(!r)return;return r[e](...t)}}const e=this;const setLogger=(t,r={logLevel:o.DiagLogLevel.INFO})=>{var n,c,s;if(t===e){const t=new Error(\"Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation\");e.error((n=t.stack)!==null&&n!==void 0?n:t.message);return false}if(typeof r===\"number\"){r={logLevel:r}}const u=(0,i.getGlobal)(\"diag\");const l=(0,a.createLogLevelDiagLogger)((c=r.logLevel)!==null&&c!==void 0?c:o.DiagLogLevel.INFO,t);if(u&&!r.suppressOverrideMessage){const e=(s=(new Error).stack)!==null&&s!==void 0?s:\"<failed to generate stacktrace>\";u.warn(`Current logger will be overwritten from ${e}`);l.warn(`Current logger will overwrite one already registered from ${e}`)}return(0,i.registerGlobal)(\"diag\",l,e,true)};e.setLogger=setLogger;e.disable=()=>{(0,i.unregisterGlobal)(c,e)};e.createComponentLogger=e=>new n.DiagComponentLogger(e);e.verbose=_logProxy(\"verbose\");e.debug=_logProxy(\"debug\");e.info=_logProxy(\"info\");e.warn=_logProxy(\"warn\");e.error=_logProxy(\"error\")}static instance(){if(!this._instance){this._instance=new DiagAPI}return this._instance}}t.DiagAPI=DiagAPI},653:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.MetricsAPI=void 0;const n=r(660);const a=r(172);const o=r(930);const i=\"metrics\";class MetricsAPI{constructor(){}static getInstance(){if(!this._instance){this._instance=new MetricsAPI}return this._instance}setGlobalMeterProvider(e){return(0,a.registerGlobal)(i,e,o.DiagAPI.instance())}getMeterProvider(){return(0,a.getGlobal)(i)||n.NOOP_METER_PROVIDER}getMeter(e,t,r){return this.getMeterProvider().getMeter(e,t,r)}disable(){(0,a.unregisterGlobal)(i,o.DiagAPI.instance())}}t.MetricsAPI=MetricsAPI},181:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.PropagationAPI=void 0;const n=r(172);const a=r(874);const o=r(194);const i=r(277);const c=r(369);const s=r(930);const u=\"propagation\";const l=new a.NoopTextMapPropagator;class PropagationAPI{constructor(){this.createBaggage=c.createBaggage;this.getBaggage=i.getBaggage;this.getActiveBaggage=i.getActiveBaggage;this.setBaggage=i.setBaggage;this.deleteBaggage=i.deleteBaggage}static getInstance(){if(!this._instance){this._instance=new PropagationAPI}return this._instance}setGlobalPropagator(e){return(0,n.registerGlobal)(u,e,s.DiagAPI.instance())}inject(e,t,r=o.defaultTextMapSetter){return this._getGlobalPropagator().inject(e,t,r)}extract(e,t,r=o.defaultTextMapGetter){return this._getGlobalPropagator().extract(e,t,r)}fields(){return this._getGlobalPropagator().fields()}disable(){(0,n.unregisterGlobal)(u,s.DiagAPI.instance())}_getGlobalPropagator(){return(0,n.getGlobal)(u)||l}}t.PropagationAPI=PropagationAPI},997:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceAPI=void 0;const n=r(172);const a=r(846);const o=r(139);const i=r(607);const c=r(930);const s=\"trace\";class TraceAPI{constructor(){this._proxyTracerProvider=new a.ProxyTracerProvider;this.wrapSpanContext=o.wrapSpanContext;this.isSpanContextValid=o.isSpanContextValid;this.deleteSpan=i.deleteSpan;this.getSpan=i.getSpan;this.getActiveSpan=i.getActiveSpan;this.getSpanContext=i.getSpanContext;this.setSpan=i.setSpan;this.setSpanContext=i.setSpanContext}static getInstance(){if(!this._instance){this._instance=new TraceAPI}return this._instance}setGlobalTracerProvider(e){const t=(0,n.registerGlobal)(s,this._proxyTracerProvider,c.DiagAPI.instance());if(t){this._proxyTracerProvider.setDelegate(e)}return t}getTracerProvider(){return(0,n.getGlobal)(s)||this._proxyTracerProvider}getTracer(e,t){return this.getTracerProvider().getTracer(e,t)}disable(){(0,n.unregisterGlobal)(s,c.DiagAPI.instance());this._proxyTracerProvider=new a.ProxyTracerProvider}}t.TraceAPI=TraceAPI},277:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.deleteBaggage=t.setBaggage=t.getActiveBaggage=t.getBaggage=void 0;const n=r(491);const a=r(780);const o=(0,a.createContextKey)(\"OpenTelemetry Baggage Key\");function getBaggage(e){return e.getValue(o)||undefined}t.getBaggage=getBaggage;function getActiveBaggage(){return getBaggage(n.ContextAPI.getInstance().active())}t.getActiveBaggage=getActiveBaggage;function setBaggage(e,t){return e.setValue(o,t)}t.setBaggage=setBaggage;function deleteBaggage(e){return e.deleteValue(o)}t.deleteBaggage=deleteBaggage},993:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.BaggageImpl=void 0;class BaggageImpl{constructor(e){this._entries=e?new Map(e):new Map}getEntry(e){const t=this._entries.get(e);if(!t){return undefined}return Object.assign({},t)}getAllEntries(){return Array.from(this._entries.entries()).map((([e,t])=>[e,t]))}setEntry(e,t){const r=new BaggageImpl(this._entries);r._entries.set(e,t);return r}removeEntry(e){const t=new BaggageImpl(this._entries);t._entries.delete(e);return t}removeEntries(...e){const t=new BaggageImpl(this._entries);for(const r of e){t._entries.delete(r)}return t}clear(){return new BaggageImpl}}t.BaggageImpl=BaggageImpl},830:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.baggageEntryMetadataSymbol=void 0;t.baggageEntryMetadataSymbol=Symbol(\"BaggageEntryMetadata\")},369:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.baggageEntryMetadataFromString=t.createBaggage=void 0;const n=r(930);const a=r(993);const o=r(830);const i=n.DiagAPI.instance();function createBaggage(e={}){return new a.BaggageImpl(new Map(Object.entries(e)))}t.createBaggage=createBaggage;function baggageEntryMetadataFromString(e){if(typeof e!==\"string\"){i.error(`Cannot create baggage metadata from unknown type: ${typeof e}`);e=\"\"}return{__TYPE__:o.baggageEntryMetadataSymbol,toString(){return e}}}t.baggageEntryMetadataFromString=baggageEntryMetadataFromString},67:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.context=void 0;const n=r(491);t.context=n.ContextAPI.getInstance()},223:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopContextManager=void 0;const n=r(780);class NoopContextManager{active(){return n.ROOT_CONTEXT}with(e,t,r,...n){return t.call(r,...n)}bind(e,t){return t}enable(){return this}disable(){return this}}t.NoopContextManager=NoopContextManager},780:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ROOT_CONTEXT=t.createContextKey=void 0;function createContextKey(e){return Symbol.for(e)}t.createContextKey=createContextKey;class BaseContext{constructor(e){const t=this;t._currentContext=e?new Map(e):new Map;t.getValue=e=>t._currentContext.get(e);t.setValue=(e,r)=>{const n=new BaseContext(t._currentContext);n._currentContext.set(e,r);return n};t.deleteValue=e=>{const r=new BaseContext(t._currentContext);r._currentContext.delete(e);return r}}}t.ROOT_CONTEXT=new BaseContext},506:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.diag=void 0;const n=r(930);t.diag=n.DiagAPI.instance()},56:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagComponentLogger=void 0;const n=r(172);class DiagComponentLogger{constructor(e){this._namespace=e.namespace||\"DiagComponentLogger\"}debug(...e){return logProxy(\"debug\",this._namespace,e)}error(...e){return logProxy(\"error\",this._namespace,e)}info(...e){return logProxy(\"info\",this._namespace,e)}warn(...e){return logProxy(\"warn\",this._namespace,e)}verbose(...e){return logProxy(\"verbose\",this._namespace,e)}}t.DiagComponentLogger=DiagComponentLogger;function logProxy(e,t,r){const a=(0,n.getGlobal)(\"diag\");if(!a){return}r.unshift(t);return a[e](...r)}},972:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagConsoleLogger=void 0;const r=[{n:\"error\",c:\"error\"},{n:\"warn\",c:\"warn\"},{n:\"info\",c:\"info\"},{n:\"debug\",c:\"debug\"},{n:\"verbose\",c:\"trace\"}];class DiagConsoleLogger{constructor(){function _consoleFunc(e){return function(...t){if(console){let r=console[e];if(typeof r!==\"function\"){r=console.log}if(typeof r===\"function\"){return r.apply(console,t)}}}}for(let e=0;e<r.length;e++){this[r[e].n]=_consoleFunc(r[e].c)}}}t.DiagConsoleLogger=DiagConsoleLogger},912:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createLogLevelDiagLogger=void 0;const n=r(957);function createLogLevelDiagLogger(e,t){if(e<n.DiagLogLevel.NONE){e=n.DiagLogLevel.NONE}else if(e>n.DiagLogLevel.ALL){e=n.DiagLogLevel.ALL}t=t||{};function _filterFunc(r,n){const a=t[r];if(typeof a===\"function\"&&e>=n){return a.bind(t)}return function(){}}return{error:_filterFunc(\"error\",n.DiagLogLevel.ERROR),warn:_filterFunc(\"warn\",n.DiagLogLevel.WARN),info:_filterFunc(\"info\",n.DiagLogLevel.INFO),debug:_filterFunc(\"debug\",n.DiagLogLevel.DEBUG),verbose:_filterFunc(\"verbose\",n.DiagLogLevel.VERBOSE)}}t.createLogLevelDiagLogger=createLogLevelDiagLogger},957:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagLogLevel=void 0;var r;(function(e){e[e[\"NONE\"]=0]=\"NONE\";e[e[\"ERROR\"]=30]=\"ERROR\";e[e[\"WARN\"]=50]=\"WARN\";e[e[\"INFO\"]=60]=\"INFO\";e[e[\"DEBUG\"]=70]=\"DEBUG\";e[e[\"VERBOSE\"]=80]=\"VERBOSE\";e[e[\"ALL\"]=9999]=\"ALL\"})(r=t.DiagLogLevel||(t.DiagLogLevel={}))},172:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.unregisterGlobal=t.getGlobal=t.registerGlobal=void 0;const n=r(200);const a=r(521);const o=r(130);const i=a.VERSION.split(\".\")[0];const c=Symbol.for(`opentelemetry.js.api.${i}`);const s=n._globalThis;function registerGlobal(e,t,r,n=false){var o;const i=s[c]=(o=s[c])!==null&&o!==void 0?o:{version:a.VERSION};if(!n&&i[e]){const t=new Error(`@opentelemetry/api: Attempted duplicate registration of API: ${e}`);r.error(t.stack||t.message);return false}if(i.version!==a.VERSION){const t=new Error(`@opentelemetry/api: Registration of version v${i.version} for ${e} does not match previously registered API v${a.VERSION}`);r.error(t.stack||t.message);return false}i[e]=t;r.debug(`@opentelemetry/api: Registered a global for ${e} v${a.VERSION}.`);return true}t.registerGlobal=registerGlobal;function getGlobal(e){var t,r;const n=(t=s[c])===null||t===void 0?void 0:t.version;if(!n||!(0,o.isCompatible)(n)){return}return(r=s[c])===null||r===void 0?void 0:r[e]}t.getGlobal=getGlobal;function unregisterGlobal(e,t){t.debug(`@opentelemetry/api: Unregistering a global for ${e} v${a.VERSION}.`);const r=s[c];if(r){delete r[e]}}t.unregisterGlobal=unregisterGlobal},130:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.isCompatible=t._makeCompatibilityCheck=void 0;const n=r(521);const a=/^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;function _makeCompatibilityCheck(e){const t=new Set([e]);const r=new Set;const n=e.match(a);if(!n){return()=>false}const o={major:+n[1],minor:+n[2],patch:+n[3],prerelease:n[4]};if(o.prerelease!=null){return function isExactmatch(t){return t===e}}function _reject(e){r.add(e);return false}function _accept(e){t.add(e);return true}return function isCompatible(e){if(t.has(e)){return true}if(r.has(e)){return false}const n=e.match(a);if(!n){return _reject(e)}const i={major:+n[1],minor:+n[2],patch:+n[3],prerelease:n[4]};if(i.prerelease!=null){return _reject(e)}if(o.major!==i.major){return _reject(e)}if(o.major===0){if(o.minor===i.minor&&o.patch<=i.patch){return _accept(e)}return _reject(e)}if(o.minor<=i.minor){return _accept(e)}return _reject(e)}}t._makeCompatibilityCheck=_makeCompatibilityCheck;t.isCompatible=_makeCompatibilityCheck(n.VERSION)},886:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.metrics=void 0;const n=r(653);t.metrics=n.MetricsAPI.getInstance()},901:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ValueType=void 0;var r;(function(e){e[e[\"INT\"]=0]=\"INT\";e[e[\"DOUBLE\"]=1]=\"DOUBLE\"})(r=t.ValueType||(t.ValueType={}))},102:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createNoopMeter=t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC=t.NOOP_OBSERVABLE_GAUGE_METRIC=t.NOOP_OBSERVABLE_COUNTER_METRIC=t.NOOP_UP_DOWN_COUNTER_METRIC=t.NOOP_HISTOGRAM_METRIC=t.NOOP_COUNTER_METRIC=t.NOOP_METER=t.NoopObservableUpDownCounterMetric=t.NoopObservableGaugeMetric=t.NoopObservableCounterMetric=t.NoopObservableMetric=t.NoopHistogramMetric=t.NoopUpDownCounterMetric=t.NoopCounterMetric=t.NoopMetric=t.NoopMeter=void 0;class NoopMeter{constructor(){}createHistogram(e,r){return t.NOOP_HISTOGRAM_METRIC}createCounter(e,r){return t.NOOP_COUNTER_METRIC}createUpDownCounter(e,r){return t.NOOP_UP_DOWN_COUNTER_METRIC}createObservableGauge(e,r){return t.NOOP_OBSERVABLE_GAUGE_METRIC}createObservableCounter(e,r){return t.NOOP_OBSERVABLE_COUNTER_METRIC}createObservableUpDownCounter(e,r){return t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC}addBatchObservableCallback(e,t){}removeBatchObservableCallback(e){}}t.NoopMeter=NoopMeter;class NoopMetric{}t.NoopMetric=NoopMetric;class NoopCounterMetric extends NoopMetric{add(e,t){}}t.NoopCounterMetric=NoopCounterMetric;class NoopUpDownCounterMetric extends NoopMetric{add(e,t){}}t.NoopUpDownCounterMetric=NoopUpDownCounterMetric;class NoopHistogramMetric extends NoopMetric{record(e,t){}}t.NoopHistogramMetric=NoopHistogramMetric;class NoopObservableMetric{addCallback(e){}removeCallback(e){}}t.NoopObservableMetric=NoopObservableMetric;class NoopObservableCounterMetric extends NoopObservableMetric{}t.NoopObservableCounterMetric=NoopObservableCounterMetric;class NoopObservableGaugeMetric extends NoopObservableMetric{}t.NoopObservableGaugeMetric=NoopObservableGaugeMetric;class NoopObservableUpDownCounterMetric extends NoopObservableMetric{}t.NoopObservableUpDownCounterMetric=NoopObservableUpDownCounterMetric;t.NOOP_METER=new NoopMeter;t.NOOP_COUNTER_METRIC=new NoopCounterMetric;t.NOOP_HISTOGRAM_METRIC=new NoopHistogramMetric;t.NOOP_UP_DOWN_COUNTER_METRIC=new NoopUpDownCounterMetric;t.NOOP_OBSERVABLE_COUNTER_METRIC=new NoopObservableCounterMetric;t.NOOP_OBSERVABLE_GAUGE_METRIC=new NoopObservableGaugeMetric;t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC=new NoopObservableUpDownCounterMetric;function createNoopMeter(){return t.NOOP_METER}t.createNoopMeter=createNoopMeter},660:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NOOP_METER_PROVIDER=t.NoopMeterProvider=void 0;const n=r(102);class NoopMeterProvider{getMeter(e,t,r){return n.NOOP_METER}}t.NoopMeterProvider=NoopMeterProvider;t.NOOP_METER_PROVIDER=new NoopMeterProvider},200:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){if(n===undefined)n=r;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,n){if(n===undefined)n=r;e[n]=t[r]});var a=this&&this.__exportStar||function(e,t){for(var r in e)if(r!==\"default\"&&!Object.prototype.hasOwnProperty.call(t,r))n(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:true});a(r(46),t)},651:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t._globalThis=void 0;t._globalThis=typeof globalThis===\"object\"?globalThis:global},46:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){if(n===undefined)n=r;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,n){if(n===undefined)n=r;e[n]=t[r]});var a=this&&this.__exportStar||function(e,t){for(var r in e)if(r!==\"default\"&&!Object.prototype.hasOwnProperty.call(t,r))n(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:true});a(r(651),t)},939:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.propagation=void 0;const n=r(181);t.propagation=n.PropagationAPI.getInstance()},874:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTextMapPropagator=void 0;class NoopTextMapPropagator{inject(e,t){}extract(e,t){return e}fields(){return[]}}t.NoopTextMapPropagator=NoopTextMapPropagator},194:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.defaultTextMapSetter=t.defaultTextMapGetter=void 0;t.defaultTextMapGetter={get(e,t){if(e==null){return undefined}return e[t]},keys(e){if(e==null){return[]}return Object.keys(e)}};t.defaultTextMapSetter={set(e,t,r){if(e==null){return}e[t]=r}}},845:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.trace=void 0;const n=r(997);t.trace=n.TraceAPI.getInstance()},403:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NonRecordingSpan=void 0;const n=r(476);class NonRecordingSpan{constructor(e=n.INVALID_SPAN_CONTEXT){this._spanContext=e}spanContext(){return this._spanContext}setAttribute(e,t){return this}setAttributes(e){return this}addEvent(e,t){return this}setStatus(e){return this}updateName(e){return this}end(e){}isRecording(){return false}recordException(e,t){}}t.NonRecordingSpan=NonRecordingSpan},614:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTracer=void 0;const n=r(491);const a=r(607);const o=r(403);const i=r(139);const c=n.ContextAPI.getInstance();class NoopTracer{startSpan(e,t,r=c.active()){const n=Boolean(t===null||t===void 0?void 0:t.root);if(n){return new o.NonRecordingSpan}const s=r&&(0,a.getSpanContext)(r);if(isSpanContext(s)&&(0,i.isSpanContextValid)(s)){return new o.NonRecordingSpan(s)}else{return new o.NonRecordingSpan}}startActiveSpan(e,t,r,n){let o;let i;let s;if(arguments.length<2){return}else if(arguments.length===2){s=t}else if(arguments.length===3){o=t;s=r}else{o=t;i=r;s=n}const u=i!==null&&i!==void 0?i:c.active();const l=this.startSpan(e,o,u);const g=(0,a.setSpan)(u,l);return c.with(g,s,undefined,l)}}t.NoopTracer=NoopTracer;function isSpanContext(e){return typeof e===\"object\"&&typeof e[\"spanId\"]===\"string\"&&typeof e[\"traceId\"]===\"string\"&&typeof e[\"traceFlags\"]===\"number\"}},124:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTracerProvider=void 0;const n=r(614);class NoopTracerProvider{getTracer(e,t,r){return new n.NoopTracer}}t.NoopTracerProvider=NoopTracerProvider},125:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ProxyTracer=void 0;const n=r(614);const a=new n.NoopTracer;class ProxyTracer{constructor(e,t,r,n){this._provider=e;this.name=t;this.version=r;this.options=n}startSpan(e,t,r){return this._getTracer().startSpan(e,t,r)}startActiveSpan(e,t,r,n){const a=this._getTracer();return Reflect.apply(a.startActiveSpan,a,arguments)}_getTracer(){if(this._delegate){return this._delegate}const e=this._provider.getDelegateTracer(this.name,this.version,this.options);if(!e){return a}this._delegate=e;return this._delegate}}t.ProxyTracer=ProxyTracer},846:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ProxyTracerProvider=void 0;const n=r(125);const a=r(124);const o=new a.NoopTracerProvider;class ProxyTracerProvider{getTracer(e,t,r){var a;return(a=this.getDelegateTracer(e,t,r))!==null&&a!==void 0?a:new n.ProxyTracer(this,e,t,r)}getDelegate(){var e;return(e=this._delegate)!==null&&e!==void 0?e:o}setDelegate(e){this._delegate=e}getDelegateTracer(e,t,r){var n;return(n=this._delegate)===null||n===void 0?void 0:n.getTracer(e,t,r)}}t.ProxyTracerProvider=ProxyTracerProvider},996:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SamplingDecision=void 0;var r;(function(e){e[e[\"NOT_RECORD\"]=0]=\"NOT_RECORD\";e[e[\"RECORD\"]=1]=\"RECORD\";e[e[\"RECORD_AND_SAMPLED\"]=2]=\"RECORD_AND_SAMPLED\"})(r=t.SamplingDecision||(t.SamplingDecision={}))},607:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.getSpanContext=t.setSpanContext=t.deleteSpan=t.setSpan=t.getActiveSpan=t.getSpan=void 0;const n=r(780);const a=r(403);const o=r(491);const i=(0,n.createContextKey)(\"OpenTelemetry Context Key SPAN\");function getSpan(e){return e.getValue(i)||undefined}t.getSpan=getSpan;function getActiveSpan(){return getSpan(o.ContextAPI.getInstance().active())}t.getActiveSpan=getActiveSpan;function setSpan(e,t){return e.setValue(i,t)}t.setSpan=setSpan;function deleteSpan(e){return e.deleteValue(i)}t.deleteSpan=deleteSpan;function setSpanContext(e,t){return setSpan(e,new a.NonRecordingSpan(t))}t.setSpanContext=setSpanContext;function getSpanContext(e){var t;return(t=getSpan(e))===null||t===void 0?void 0:t.spanContext()}t.getSpanContext=getSpanContext},325:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceStateImpl=void 0;const n=r(564);const a=32;const o=512;const i=\",\";const c=\"=\";class TraceStateImpl{constructor(e){this._internalState=new Map;if(e)this._parse(e)}set(e,t){const r=this._clone();if(r._internalState.has(e)){r._internalState.delete(e)}r._internalState.set(e,t);return r}unset(e){const t=this._clone();t._internalState.delete(e);return t}get(e){return this._internalState.get(e)}serialize(){return this._keys().reduce(((e,t)=>{e.push(t+c+this.get(t));return e}),[]).join(i)}_parse(e){if(e.length>o)return;this._internalState=e.split(i).reverse().reduce(((e,t)=>{const r=t.trim();const a=r.indexOf(c);if(a!==-1){const o=r.slice(0,a);const i=r.slice(a+1,t.length);if((0,n.validateKey)(o)&&(0,n.validateValue)(i)){e.set(o,i)}else{}}return e}),new Map);if(this._internalState.size>a){this._internalState=new Map(Array.from(this._internalState.entries()).reverse().slice(0,a))}}_keys(){return Array.from(this._internalState.keys()).reverse()}_clone(){const e=new TraceStateImpl;e._internalState=new Map(this._internalState);return e}}t.TraceStateImpl=TraceStateImpl},564:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.validateValue=t.validateKey=void 0;const r=\"[_0-9a-z-*/]\";const n=`[a-z]${r}{0,255}`;const a=`[a-z0-9]${r}{0,240}@[a-z]${r}{0,13}`;const o=new RegExp(`^(?:${n}|${a})$`);const i=/^[ -~]{0,255}[!-~]$/;const c=/,|=/;function validateKey(e){return o.test(e)}t.validateKey=validateKey;function validateValue(e){return i.test(e)&&!c.test(e)}t.validateValue=validateValue},98:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createTraceState=void 0;const n=r(325);function createTraceState(e){return new n.TraceStateImpl(e)}t.createTraceState=createTraceState},476:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.INVALID_SPAN_CONTEXT=t.INVALID_TRACEID=t.INVALID_SPANID=void 0;const n=r(475);t.INVALID_SPANID=\"0000000000000000\";t.INVALID_TRACEID=\"00000000000000000000000000000000\";t.INVALID_SPAN_CONTEXT={traceId:t.INVALID_TRACEID,spanId:t.INVALID_SPANID,traceFlags:n.TraceFlags.NONE}},357:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SpanKind=void 0;var r;(function(e){e[e[\"INTERNAL\"]=0]=\"INTERNAL\";e[e[\"SERVER\"]=1]=\"SERVER\";e[e[\"CLIENT\"]=2]=\"CLIENT\";e[e[\"PRODUCER\"]=3]=\"PRODUCER\";e[e[\"CONSUMER\"]=4]=\"CONSUMER\"})(r=t.SpanKind||(t.SpanKind={}))},139:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.wrapSpanContext=t.isSpanContextValid=t.isValidSpanId=t.isValidTraceId=void 0;const n=r(476);const a=r(403);const o=/^([0-9a-f]{32})$/i;const i=/^[0-9a-f]{16}$/i;function isValidTraceId(e){return o.test(e)&&e!==n.INVALID_TRACEID}t.isValidTraceId=isValidTraceId;function isValidSpanId(e){return i.test(e)&&e!==n.INVALID_SPANID}t.isValidSpanId=isValidSpanId;function isSpanContextValid(e){return isValidTraceId(e.traceId)&&isValidSpanId(e.spanId)}t.isSpanContextValid=isSpanContextValid;function wrapSpanContext(e){return new a.NonRecordingSpan(e)}t.wrapSpanContext=wrapSpanContext},847:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SpanStatusCode=void 0;var r;(function(e){e[e[\"UNSET\"]=0]=\"UNSET\";e[e[\"OK\"]=1]=\"OK\";e[e[\"ERROR\"]=2]=\"ERROR\"})(r=t.SpanStatusCode||(t.SpanStatusCode={}))},475:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceFlags=void 0;var r;(function(e){e[e[\"NONE\"]=0]=\"NONE\";e[e[\"SAMPLED\"]=1]=\"SAMPLED\"})(r=t.TraceFlags||(t.TraceFlags={}))},521:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.VERSION=void 0;t.VERSION=\"1.6.0\"}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var a=t[r]={exports:{}};var o=true;try{e[r].call(a.exports,a,a.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return a.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r={};(()=>{var e=r;Object.defineProperty(e,\"__esModule\",{value:true});e.trace=e.propagation=e.metrics=e.diag=e.context=e.INVALID_SPAN_CONTEXT=e.INVALID_TRACEID=e.INVALID_SPANID=e.isValidSpanId=e.isValidTraceId=e.isSpanContextValid=e.createTraceState=e.TraceFlags=e.SpanStatusCode=e.SpanKind=e.SamplingDecision=e.ProxyTracerProvider=e.ProxyTracer=e.defaultTextMapSetter=e.defaultTextMapGetter=e.ValueType=e.createNoopMeter=e.DiagLogLevel=e.DiagConsoleLogger=e.ROOT_CONTEXT=e.createContextKey=e.baggageEntryMetadataFromString=void 0;var t=__nccwpck_require__(369);Object.defineProperty(e,\"baggageEntryMetadataFromString\",{enumerable:true,get:function(){return t.baggageEntryMetadataFromString}});var n=__nccwpck_require__(780);Object.defineProperty(e,\"createContextKey\",{enumerable:true,get:function(){return n.createContextKey}});Object.defineProperty(e,\"ROOT_CONTEXT\",{enumerable:true,get:function(){return n.ROOT_CONTEXT}});var a=__nccwpck_require__(972);Object.defineProperty(e,\"DiagConsoleLogger\",{enumerable:true,get:function(){return a.DiagConsoleLogger}});var o=__nccwpck_require__(957);Object.defineProperty(e,\"DiagLogLevel\",{enumerable:true,get:function(){return o.DiagLogLevel}});var i=__nccwpck_require__(102);Object.defineProperty(e,\"createNoopMeter\",{enumerable:true,get:function(){return i.createNoopMeter}});var c=__nccwpck_require__(901);Object.defineProperty(e,\"ValueType\",{enumerable:true,get:function(){return c.ValueType}});var s=__nccwpck_require__(194);Object.defineProperty(e,\"defaultTextMapGetter\",{enumerable:true,get:function(){return s.defaultTextMapGetter}});Object.defineProperty(e,\"defaultTextMapSetter\",{enumerable:true,get:function(){return s.defaultTextMapSetter}});var u=__nccwpck_require__(125);Object.defineProperty(e,\"ProxyTracer\",{enumerable:true,get:function(){return u.ProxyTracer}});var l=__nccwpck_require__(846);Object.defineProperty(e,\"ProxyTracerProvider\",{enumerable:true,get:function(){return l.ProxyTracerProvider}});var g=__nccwpck_require__(996);Object.defineProperty(e,\"SamplingDecision\",{enumerable:true,get:function(){return g.SamplingDecision}});var p=__nccwpck_require__(357);Object.defineProperty(e,\"SpanKind\",{enumerable:true,get:function(){return p.SpanKind}});var d=__nccwpck_require__(847);Object.defineProperty(e,\"SpanStatusCode\",{enumerable:true,get:function(){return d.SpanStatusCode}});var _=__nccwpck_require__(475);Object.defineProperty(e,\"TraceFlags\",{enumerable:true,get:function(){return _.TraceFlags}});var f=__nccwpck_require__(98);Object.defineProperty(e,\"createTraceState\",{enumerable:true,get:function(){return f.createTraceState}});var b=__nccwpck_require__(139);Object.defineProperty(e,\"isSpanContextValid\",{enumerable:true,get:function(){return b.isSpanContextValid}});Object.defineProperty(e,\"isValidTraceId\",{enumerable:true,get:function(){return b.isValidTraceId}});Object.defineProperty(e,\"isValidSpanId\",{enumerable:true,get:function(){return b.isValidSpanId}});var v=__nccwpck_require__(476);Object.defineProperty(e,\"INVALID_SPANID\",{enumerable:true,get:function(){return v.INVALID_SPANID}});Object.defineProperty(e,\"INVALID_TRACEID\",{enumerable:true,get:function(){return v.INVALID_TRACEID}});Object.defineProperty(e,\"INVALID_SPAN_CONTEXT\",{enumerable:true,get:function(){return v.INVALID_SPAN_CONTEXT}});const O=__nccwpck_require__(67);Object.defineProperty(e,\"context\",{enumerable:true,get:function(){return O.context}});const P=__nccwpck_require__(506);Object.defineProperty(e,\"diag\",{enumerable:true,get:function(){return P.diag}});const N=__nccwpck_require__(886);Object.defineProperty(e,\"metrics\",{enumerable:true,get:function(){return N.metrics}});const S=__nccwpck_require__(939);Object.defineProperty(e,\"propagation\",{enumerable:true,get:function(){return S.propagation}});const C=__nccwpck_require__(845);Object.defineProperty(e,\"trace\",{enumerable:true,get:function(){return C.trace}});e[\"default\"]={context:O.context,diag:P.diag,metrics:N.metrics,propagation:S.propagation,trace:C.trace}})();module.exports=r})();"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1488, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1494, "column": 0}, "map": {"version":3,"file":"globalThis.js","sources":["turbopack://[project]/node_modules/@vercel/otel/node_modules/@opentelemetry/api-logs/src/platform/browser/globalThis.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Updates to this file should also be replicated to @opentelemetry/api and\n// @opentelemetry/core too.\n\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport const _globalThis: typeof globalThis =\n  typeof globalThis === 'object'\n    ? globalThis\n    : typeof self === 'object'\n    ? self\n    : typeof window === 'object'\n    ? window\n    : typeof global === 'object'\n    ? global\n    : ({} as typeof globalThis);\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG,CAEH,2EAA2E;AAC3E,2BAA2B;AAE3B;;;;;;GAMG,CAEH,8DAAA,EAAgE,CAChE,8EAA8E;;;;AACvE,IAAM,WAAW,GACtB,OAAO,UAAU,KAAK,QAAQ,GAC1B,UAAU,GACV,OAAO,IAAI,KAAK,QAAQ,GACxB,IAAI,GACJ,OAAO,MAAM,KAAK,QAAQ,mDAE1B,OAAO,MAAM,KAAK,QAAQ,GAC1B,MAAM,GACL,CAAA,CAAwB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1521, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1527, "column": 0}, "map": {"version":3,"file":"global-utils.js","sources":["turbopack://[project]/node_modules/@vercel/otel/node_modules/@opentelemetry/api-logs/src/internal/global-utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LoggerProvider } from '../types/LoggerProvider';\nimport { _globalThis } from '../platform';\n\nexport const GLOBAL_LOGS_API_KEY = Symbol.for('io.opentelemetry.js.api.logs');\n\ntype Get<T> = (version: number) => T;\ntype OtelGlobal = Partial<{\n  [GLOBAL_LOGS_API_KEY]: Get<LoggerProvider>;\n}>;\n\nexport const _global = _globalThis as OtelGlobal;\n\n/**\n * Make a function which accepts a version integer and returns the instance of an API if the version\n * is compatible, or a fallback version (usually NOOP) if it is not.\n *\n * @param requiredVersion Backwards compatibility version which is required to return the instance\n * @param instance Instance which should be returned if the required version is compatible\n * @param fallback Fallback instance, usually NOOP, which will be returned if the required version is not compatible\n */\nexport function makeGetter<T>(\n  requiredVersion: number,\n  instance: T,\n  fallback: T\n): Get<T> {\n  return (version: number): T =>\n    version === requiredVersion ? instance : fallback;\n}\n\n/**\n * A number which should be incremented each time a backwards incompatible\n * change is made to the API. This number is used when an API package\n * attempts to access the global API to ensure it is getting a compatible\n * version. If the global API is not compatible with the API package\n * attempting to get it, a NOOP API implementation will be returned.\n */\nexport const API_BACKWARDS_COMPATIBILITY_VERSION = 1;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;;;;AAGH,OAAO,EAAE,WAAW,EAAE,MAAM,aAAa,CAAC;;AAEnC,IAAM,mBAAmB,GAAG,MAAM,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;AAOvE,IAAM,OAAO,gPAAG,cAAyB,CAAC;AAU3C,SAAU,UAAU,CACxB,eAAuB,EACvB,QAAW,EACX,QAAW;IAEX,OAAO,SAAC,OAAe;QACrB,OAAA,OAAO,KAAK,eAAe,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ;IAAjD,CAAiD,CAAC;AACtD,CAAC;AASM,IAAM,mCAAmC,GAAG,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1557, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1563, "column": 0}, "map": {"version":3,"file":"NoopLogger.js","sources":["turbopack://[project]/node_modules/@vercel/otel/node_modules/@opentelemetry/api-logs/src/NoopLogger.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from './types/Logger';\nimport { LogRecord } from './types/LogRecord';\n\nexport class NoopLogger implements Logger {\n  emit(_logRecord: LogRecord): void {}\n}\n\nexport const NOOP_LOGGER = new NoopLogger();\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;;AAKH,IAAA,aAAA;IAAA,SAAA,cAEA,CAAC;IADC,WAAA,SAAA,CAAA,IAAI,GAAJ,SAAK,UAAqB,GAAS,CAAC;IACtC,OAAA,UAAC;AAAD,CAAC,AAFD,IAEC;;AAEM,IAAM,WAAW,GAAG,IAAI,UAAU,EAAE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1588, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1594, "column": 0}, "map": {"version":3,"file":"NoopLoggerProvider.js","sources":["turbopack://[project]/node_modules/@vercel/otel/node_modules/@opentelemetry/api-logs/src/NoopLoggerProvider.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LoggerProvider } from './types/LoggerProvider';\nimport { Logger } from './types/Logger';\nimport { LoggerOptions } from './types/LoggerOptions';\nimport { NoopLogger } from './NoopLogger';\n\nexport class NoopLoggerProvider implements LoggerProvider {\n  getLogger(\n    _name: string,\n    _version?: string | undefined,\n    _options?: LoggerOptions | undefined\n  ): Logger {\n    return new NoopLogger();\n  }\n}\n\nexport const NOOP_LOGGER_PROVIDER = new NoopLoggerProvider();\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;;AAKH,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;;AAE1C,IAAA,qBAAA;IAAA,SAAA,sBAQA,CAAC;IAPC,mBAAA,SAAA,CAAA,SAAS,GAAT,SACE,KAAa,EACb,QAA6B,EAC7B,QAAoC;QAEpC,OAAO,0NAAI,aAAU,EAAE,CAAC;IAC1B,CAAC;IACH,OAAA,kBAAC;AAAD,CAAC,AARD,IAQC;;AAEM,IAAM,oBAAoB,GAAG,IAAI,kBAAkB,EAAE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1623, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1629, "column": 0}, "map": {"version":3,"file":"logs.js","sources":["turbopack://[project]/node_modules/@vercel/otel/node_modules/@opentelemetry/api-logs/src/api/logs.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  API_BACKWARDS_COMPATIBILITY_VERSION,\n  GLOBAL_LOGS_API_KEY,\n  _global,\n  makeGetter,\n} from '../internal/global-utils';\nimport { LoggerProvider } from '../types/LoggerProvider';\nimport { NOOP_LOGGER_PROVIDER } from '../NoopLoggerProvider';\nimport { Logger } from '../types/Logger';\nimport { LoggerOptions } from '../types/LoggerOptions';\n\nexport class LogsAPI {\n  private static _instance?: LogsAPI;\n\n  private constructor() {}\n\n  public static getInstance(): LogsAPI {\n    if (!this._instance) {\n      this._instance = new LogsAPI();\n    }\n\n    return this._instance;\n  }\n\n  public setGlobalLoggerProvider(provider: LoggerProvider): LoggerProvider {\n    if (_global[GLOBAL_LOGS_API_KEY]) {\n      return this.getLoggerProvider();\n    }\n\n    _global[GLOBAL_LOGS_API_KEY] = makeGetter<LoggerProvider>(\n      API_BACKWARDS_COMPATIBILITY_VERSION,\n      provider,\n      NOOP_LOGGER_PROVIDER\n    );\n\n    return provider;\n  }\n\n  /**\n   * Returns the global logger provider.\n   *\n   * @returns LoggerProvider\n   */\n  public getLoggerProvider(): LoggerProvider {\n    return (\n      _global[GLOBAL_LOGS_API_KEY]?.(API_BACKWARDS_COMPATIBILITY_VERSION) ??\n      NOOP_LOGGER_PROVIDER\n    );\n  }\n\n  /**\n   * Returns a logger from the global logger provider.\n   *\n   * @returns Logger\n   */\n  public getLogger(\n    name: string,\n    version?: string,\n    options?: LoggerOptions\n  ): Logger {\n    return this.getLoggerProvider().getLogger(name, version, options);\n  }\n\n  /** Remove the global logger provider */\n  public disable(): void {\n    delete _global[GLOBAL_LOGS_API_KEY];\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAEH,OAAO,EACL,mCAAmC,EACnC,mBAAmB,EACnB,OAAO,EACP,UAAU,GACX,MAAM,0BAA0B,CAAC;AAElC,OAAO,EAAE,oBAAoB,EAAE,MAAM,uBAAuB,CAAC;;;AAI7D,IAAA,UAAA;IAGE,SAAA,WAAuB,CAAC;IAEV,QAAA,WAAW,GAAzB;QACE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,SAAS,GAAG,IAAI,OAAO,EAAE,CAAC;SAChC;QAED,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAEM,QAAA,SAAA,CAAA,uBAAuB,GAA9B,SAA+B,QAAwB;QACrD,2OAAI,UAAO,wOAAC,sBAAmB,CAAC,EAAE;YAChC,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC;SACjC;+OAED,UAAO,wOAAC,sBAAmB,CAAC,8OAAG,aAAA,AAAU,wOACvC,uCAAmC,EACnC,QAAQ,gOACR,uBAAoB,CACrB,CAAC;QAEF,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED;;;;OAIG,CACI,QAAA,SAAA,CAAA,iBAAiB,GAAxB;;QACE,OAAO,AACL,CAAA,KAAA,CAAA,4OAAA,UAAO,wOAAC,sBAAmB,CAAC,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAA,IAAA,wOAA5B,UAAO,EAAwB,6QAAmC,CAAC,MAAA,QAAA,OAAA,KAAA,IAAA,mOACnE,uBAAoB,CACrB,CAAC;IACJ,CAAC;IAED;;;;OAIG,CACI,QAAA,SAAA,CAAA,SAAS,GAAhB,SACE,IAAY,EACZ,OAAgB,EAChB,OAAuB;QAEvB,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IACpE,CAAC;IAED,sCAAA,EAAwC,CACjC,QAAA,SAAA,CAAA,OAAO,GAAd;QACE,8OAAO,UAAO,wOAAC,sBAAmB,CAAC,CAAC;IACtC,CAAC;IACH,OAAA,OAAC;AAAD,CAAC,AAxDD,IAwDC","ignoreList":[0]}},
    {"offset": {"line": 1687, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1693, "column": 0}, "map": {"version":3,"file":"index.js","sources":["turbopack://[project]/node_modules/@vercel/otel/node_modules/@opentelemetry/api-logs/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './types/Logger';\nexport * from './types/LoggerProvider';\nexport * from './types/LogRecord';\nexport * from './types/LoggerOptions';\nexport * from './NoopLogger';\nexport * from './NoopLoggerProvider';\n\nimport { LogsAPI } from './api/logs';\nexport const logs = LogsAPI.getInstance();\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AASH,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;;;;;;;;AAC9B,IAAM,IAAI,0NAAG,UAAO,CAAC,WAAW,EAAE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1719, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1733, "column": 0}, "map": {"version":3,"file":"Logger.js","sources":["turbopack://[project]/node_modules/@vercel/otel/node_modules/@opentelemetry/api-logs/src/types/Logger.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LogRecord } from './LogRecord';\n\nexport interface Logger {\n  /**\n   * Emit a log record. This method should only be used by log appenders.\n   *\n   * @param logRecord\n   */\n  emit(logRecord: LogRecord): void;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0]}},
    {"offset": {"line": 1750, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1756, "column": 0}, "map": {"version":3,"file":"LoggerProvider.js","sources":["turbopack://[project]/node_modules/@vercel/otel/node_modules/@opentelemetry/api-logs/src/types/LoggerProvider.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from './Logger';\nimport { LoggerOptions } from './LoggerOptions';\n\n/**\n * A registry for creating named {@link Logger}s.\n */\nexport interface LoggerProvider {\n  /**\n   * Returns a Logger, creating one if one with the given name, version, and\n   * schemaUrl pair is not already created.\n   *\n   * @param name The name of the logger or instrumentation library.\n   * @param version The version of the logger or instrumentation library.\n   * @param options The options of the logger or instrumentation library.\n   * @returns Logger A Logger with the given name and version\n   */\n  getLogger(name: string, version?: string, options?: LoggerOptions): Logger;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0]}},
    {"offset": {"line": 1773, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1779, "column": 0}, "map": {"version":3,"file":"LogRecord.js","sources":["turbopack://[project]/node_modules/@vercel/otel/node_modules/@opentelemetry/api-logs/src/types/LogRecord.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Attributes, Context } from '@opentelemetry/api';\n\nexport enum SeverityNumber {\n  UNSPECIFIED = 0,\n  TRACE = 1,\n  TRACE2 = 2,\n  TRACE3 = 3,\n  TRACE4 = 4,\n  DEBUG = 5,\n  DEBUG2 = 6,\n  DEBUG3 = 7,\n  DEBUG4 = 8,\n  INFO = 9,\n  INFO2 = 10,\n  INFO3 = 11,\n  INFO4 = 12,\n  WARN = 13,\n  WARN2 = 14,\n  WARN3 = 15,\n  WARN4 = 16,\n  ERROR = 17,\n  ERROR2 = 18,\n  ERROR3 = 19,\n  ERROR4 = 20,\n  FATAL = 21,\n  FATAL2 = 22,\n  FATAL3 = 23,\n  FATAL4 = 24,\n}\n\nexport interface LogRecord {\n  /**\n   * The time when the log record occurred as UNIX Epoch time in nanoseconds.\n   */\n  timestamp?: number;\n\n  /**\n   * Numerical value of the severity.\n   */\n  severityNumber?: SeverityNumber;\n\n  /**\n   * The severity text.\n   */\n  severityText?: string;\n\n  /**\n   * A value containing the body of the log record.\n   */\n  body?: string;\n\n  /**\n   * Attributes that define the log record.\n   */\n  attributes?: Attributes;\n\n  /**\n   * The Context associated with the LogRecord.\n   */\n  context?: Context;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAIH,IAAY,cA0BX;AA1BD,CAAA,SAAY,cAAc;IACxB,cAAA,CAAA,cAAA,CAAA,cAAA,GAAA,EAAA,GAAA,aAAe,CAAA;IACf,cAAA,CAAA,cAAA,CAAA,QAAA,GAAA,EAAA,GAAA,OAAS,CAAA;IACT,cAAA,CAAA,cAAA,CAAA,SAAA,GAAA,EAAA,GAAA,QAAU,CAAA;IACV,cAAA,CAAA,cAAA,CAAA,SAAA,GAAA,EAAA,GAAA,QAAU,CAAA;IACV,cAAA,CAAA,cAAA,CAAA,SAAA,GAAA,EAAA,GAAA,QAAU,CAAA;IACV,cAAA,CAAA,cAAA,CAAA,QAAA,GAAA,EAAA,GAAA,OAAS,CAAA;IACT,cAAA,CAAA,cAAA,CAAA,SAAA,GAAA,EAAA,GAAA,QAAU,CAAA;IACV,cAAA,CAAA,cAAA,CAAA,SAAA,GAAA,EAAA,GAAA,QAAU,CAAA;IACV,cAAA,CAAA,cAAA,CAAA,SAAA,GAAA,EAAA,GAAA,QAAU,CAAA;IACV,cAAA,CAAA,cAAA,CAAA,OAAA,GAAA,EAAA,GAAA,MAAQ,CAAA;IACR,cAAA,CAAA,cAAA,CAAA,QAAA,GAAA,GAAA,GAAA,OAAU,CAAA;IACV,cAAA,CAAA,cAAA,CAAA,QAAA,GAAA,GAAA,GAAA,OAAU,CAAA;IACV,cAAA,CAAA,cAAA,CAAA,QAAA,GAAA,GAAA,GAAA,OAAU,CAAA;IACV,cAAA,CAAA,cAAA,CAAA,OAAA,GAAA,GAAA,GAAA,MAAS,CAAA;IACT,cAAA,CAAA,cAAA,CAAA,QAAA,GAAA,GAAA,GAAA,OAAU,CAAA;IACV,cAAA,CAAA,cAAA,CAAA,QAAA,GAAA,GAAA,GAAA,OAAU,CAAA;IACV,cAAA,CAAA,cAAA,CAAA,QAAA,GAAA,GAAA,GAAA,OAAU,CAAA;IACV,cAAA,CAAA,cAAA,CAAA,QAAA,GAAA,GAAA,GAAA,OAAU,CAAA;IACV,cAAA,CAAA,cAAA,CAAA,SAAA,GAAA,GAAA,GAAA,QAAW,CAAA;IACX,cAAA,CAAA,cAAA,CAAA,SAAA,GAAA,GAAA,GAAA,QAAW,CAAA;IACX,cAAA,CAAA,cAAA,CAAA,SAAA,GAAA,GAAA,GAAA,QAAW,CAAA;IACX,cAAA,CAAA,cAAA,CAAA,QAAA,GAAA,GAAA,GAAA,OAAU,CAAA;IACV,cAAA,CAAA,cAAA,CAAA,SAAA,GAAA,GAAA,GAAA,QAAW,CAAA;IACX,cAAA,CAAA,cAAA,CAAA,SAAA,GAAA,GAAA,GAAA,QAAW,CAAA;IACX,cAAA,CAAA,cAAA,CAAA,SAAA,GAAA,GAAA,GAAA,QAAW,CAAA;AACb,CAAC,EA1BW,cAAc,IAAA,CAAd,cAAc,GAAA,CAAA,CAAA,GA0BzB","ignoreList":[0]}},
    {"offset": {"line": 1824, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1830, "column": 0}, "map": {"version":3,"file":"LoggerOptions.js","sources":["turbopack://[project]/node_modules/@vercel/otel/node_modules/@opentelemetry/api-logs/src/types/LoggerOptions.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Attributes } from '@opentelemetry/api';\n\nexport interface LoggerOptions {\n  /**\n   * The schemaUrl of the tracer or instrumentation library\n   * @default ''\n   */\n  schemaUrl?: string;\n\n  /**\n   * The instrumentation scope attributes to associate with emitted telemetry\n   */\n  scopeAttributes?: Attributes;\n\n  /**\n   * Specifies whether the Trace Context should automatically be passed on to the LogRecords emitted by the Logger.\n   * @default true\n   */\n  includeTraceContext?: boolean;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0]}},
    {"offset": {"line": 1847, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1890, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@vercel/otel/dist/edge/external:@opentelemetry/api","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/trace/suppress-tracing.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/baggage/constants.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/baggage/utils.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/baggage/propagation/W3CBaggagePropagator.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/common/anchored-clock.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/common/attributes.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/common/logging-error-handler.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/common/global-error-handler.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/utils/sampling.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/platform/browser/globalThis.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/utils/environment.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/platform/browser/environment.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/platform/browser/hex-to-base64.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/platform/browser/RandomIdGenerator.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/platform/browser/performance.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/version.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+semantic-conventions@1.19.0/node_modules/@opentelemetry/semantic-conventions/src/trace/SemanticAttributes.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+semantic-conventions@1.19.0/node_modules/@opentelemetry/semantic-conventions/src/trace/index.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+semantic-conventions@1.19.0/node_modules/@opentelemetry/semantic-conventions/src/resource/SemanticResourceAttributes.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+semantic-conventions@1.19.0/node_modules/@opentelemetry/semantic-conventions/src/resource/index.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+semantic-conventions@1.19.0/node_modules/@opentelemetry/semantic-conventions/src/index.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/platform/browser/sdk-info.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/platform/browser/timer-util.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/platform/browser/index.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/common/time.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/ExportResult.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/propagation/composite.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/internal/validators.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/trace/TraceState.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/trace/W3CTraceContextPropagator.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/trace/rpc-metadata.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/trace/sampler/AlwaysOffSampler.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/trace/sampler/AlwaysOnSampler.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/trace/sampler/ParentBasedSampler.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/trace/sampler/TraceIdRatioBasedSampler.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/utils/lodash.merge.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/utils/merge.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/utils/timeout.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/utils/url.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/utils/wrap.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/utils/promise.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/utils/callback.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/internal/exporter.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+core@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/core/src/index.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+instrumentation@0.46.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/instrumentation/src/autoLoaderUtils.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+instrumentation@0.46.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/instrumentation/src/autoLoader.ts","turbopack://[project]/node_modules/@vercel/otel/dist/edge/external:async_hooks","turbopack://[project]/node_modules/@vercel/otel/dist/edge/external:events","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+context-async-hooks@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/context-async-hooks/src/AbstractAsyncHooksContextManager.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+context-async-hooks@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/context-async-hooks/src/AsyncLocalStorageContextManager.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+otlp-transformer@0.46.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/otlp-transformer/src/common/internal.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+otlp-transformer@0.46.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/otlp-transformer/src/trace/internal.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+otlp-transformer@0.46.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/otlp-transformer/src/common/index.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+otlp-transformer@0.46.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/otlp-transformer/src/trace/index.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+otlp-exporter-base@0.46.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/otlp-exporter-base/src/util.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+otlp-exporter-base@0.46.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/otlp-exporter-base/src/OTLPExporterBase.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@protobufjs+aspromise@1.1.2/node_modules/@protobufjs/aspromise/index.js","turbopack://[project]/node_modules/node_modules/.pnpm/@protobufjs+base64@1.1.2/node_modules/@protobufjs/base64/index.js","turbopack://[project]/node_modules/node_modules/.pnpm/@protobufjs+eventemitter@1.1.0/node_modules/@protobufjs/eventemitter/index.js","turbopack://[project]/node_modules/node_modules/.pnpm/@protobufjs+float@1.0.2/node_modules/@protobufjs/float/index.js","turbopack://[project]/node_modules/node_modules/.pnpm/@protobufjs+inquire@1.1.0/node_modules/@protobufjs/inquire/index.js","turbopack://[project]/node_modules/node_modules/.pnpm/@protobufjs+utf8@1.1.0/node_modules/@protobufjs/utf8/index.js","turbopack://[project]/node_modules/node_modules/.pnpm/@protobufjs+pool@1.1.0/node_modules/@protobufjs/pool/index.js","turbopack://[project]/node_modules/node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/util/longbits.js","turbopack://[project]/node_modules/node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/util/minimal.js","turbopack://[project]/node_modules/node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/writer.js","turbopack://[project]/node_modules/node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/writer_buffer.js","turbopack://[project]/node_modules/node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/reader.js","turbopack://[project]/node_modules/node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/reader_buffer.js","turbopack://[project]/node_modules/node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/rpc/service.js","turbopack://[project]/node_modules/node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/rpc.js","turbopack://[project]/node_modules/node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/roots.js","turbopack://[project]/node_modules/node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/index-minimal.js","turbopack://[project]/node_modules/node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/minimal.js","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-trace-base@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-trace-base/src/Tracer.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-trace-base@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-trace-base/src/Span.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-trace-base@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-trace-base/src/enums.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-trace-base@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-trace-base/src/config.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-trace-base@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-trace-base/src/Sampler.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-trace-base@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-trace-base/src/sampler/AlwaysOffSampler.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-trace-base@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-trace-base/src/sampler/AlwaysOnSampler.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-trace-base@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-trace-base/src/sampler/ParentBasedSampler.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-trace-base@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-trace-base/src/sampler/TraceIdRatioBasedSampler.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-trace-base@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-trace-base/src/utility.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-trace-base@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-trace-base/src/export/BatchSpanProcessorBase.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-trace-base@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-trace-base/src/platform/browser/export/BatchSpanProcessor.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-trace-base@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-trace-base/src/platform/browser/RandomIdGenerator.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-trace-base@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-trace-base/src/BasicTracerProvider.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+resources@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/resources/src/Resource.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+resources@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/resources/src/platform/browser/default-service-name.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+resources@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/resources/src/detectors/EnvDetectorSync.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+resources@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/resources/src/detect-resources.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+resources@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/resources/src/utils.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-trace-base@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-trace-base/src/MultiSpanProcessor.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-trace-base@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-trace-base/src/export/NoopSpanProcessor.ts","turbopack://[project]/node_modules/@vercel/otel/src/sdk.ts","turbopack://[project]/node_modules/@vercel/otel/dist/edge/external:@opentelemetry/api-logs","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-logs@0.46.0_@opentelemetry+api-logs@0.46.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-logs/src/LoggerProvider.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-logs@0.46.0_@opentelemetry+api-logs@0.46.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-logs/src/Logger.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-logs@0.46.0_@opentelemetry+api-logs@0.46.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-logs/src/LogRecord.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-logs@0.46.0_@opentelemetry+api-logs@0.46.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-logs/src/config.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-logs@0.46.0_@opentelemetry+api-logs@0.46.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-logs/src/MultiLogRecordProcessor.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-logs@0.46.0_@opentelemetry+api-logs@0.46.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-logs/src/export/NoopLogRecordProcessor.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-logs@0.46.0_@opentelemetry+api-logs@0.46.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-logs/src/internal/LoggerProviderSharedState.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-metrics@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-metrics/src/export/AggregationTemporality.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-metrics@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-metrics/src/utils.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-metrics@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-metrics/src/InstrumentDescriptor.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-metrics@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-metrics/src/MeterProvider.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-metrics@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-metrics/src/view/ViewRegistry.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-metrics@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-metrics/src/Instruments.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-metrics@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-metrics/src/Meter.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-metrics@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-metrics/src/state/MetricStorage.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-metrics@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-metrics/src/state/HashMap.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-metrics@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-metrics/src/state/DeltaMetricProcessor.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-metrics@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-metrics/src/state/TemporalMetricProcessor.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-metrics@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-metrics/src/state/AsyncMetricStorage.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-metrics@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-metrics/src/state/MetricStorageRegistry.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-metrics@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-metrics/src/view/RegistrationConflicts.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-metrics@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-metrics/src/state/MultiWritableMetricStorage.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-metrics@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-metrics/src/state/ObservableRegistry.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-metrics@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-metrics/src/ObservableResult.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-metrics@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-metrics/src/state/SyncMetricStorage.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-metrics@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-metrics/src/view/AttributesProcessor.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-metrics@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-metrics/src/state/MeterSharedState.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-metrics@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-metrics/src/state/MeterProviderSharedState.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+sdk-metrics@1.19.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/sdk-metrics/src/state/MetricCollector.ts","turbopack://[project]/node_modules/@vercel/otel/src/processor/composite-span-processor.ts","turbopack://[project]/node_modules/@vercel/otel/src/vercel-request-context/api.ts","turbopack://[project]/node_modules/@vercel/otel/src/vercel-request-context/attributes.ts","turbopack://[project]/node_modules/@vercel/otel/src/util/attributes.ts","turbopack://[project]/node_modules/@vercel/otel/src/util/request-id.ts","turbopack://[project]/node_modules/@vercel/otel/src/util/sampled.ts","turbopack://[project]/node_modules/@vercel/otel/src/exporters/exporter-trace-otlp-http-fetch.ts","turbopack://[project]/node_modules/@vercel/otel/src/exporters/otlp-exporter-base.ts","turbopack://[project]/node_modules/@vercel/otel/src/exporters/trace-config.ts","turbopack://[project]/node_modules/@vercel/otel/src/exporters/exporter-trace-otlp-proto-fetch.ts","turbopack://[project]/node_modules/@vercel/otel/src/exporters/proto.ts","turbopack://[project]/node_modules/@vercel/otel/src/instrumentations/fetch.ts","turbopack://[project]/node_modules/@vercel/otel/src/util/template.ts","turbopack://[project]/node_modules/@vercel/otel/src/propagators/w3c-tracecontext-propagator.ts","turbopack://[project]/node_modules/@vercel/otel/src/vercel-request-context/propagator.ts","turbopack://[project]/node_modules/@vercel/otel/src/vercel-request-context/exporter.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+otlp-transformer@0.46.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/otlp-transformer/src/common/index.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+otlp-transformer@0.46.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/otlp-transformer/src/common/internal.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+otlp-transformer@0.46.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/otlp-transformer/src/trace/internal.ts","turbopack://[project]/node_modules/node_modules/.pnpm/@opentelemetry+otlp-transformer@0.46.0_@opentelemetry+api@1.7.0/node_modules/@opentelemetry/otlp-transformer/src/trace/index.ts","turbopack://[project]/node_modules/@vercel/otel/src/index.ts"],"sourcesContent":["export * from \"@opentelemetry/api\"","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, createContextKey } from '@opentelemetry/api';\n\nconst SUPPRESS_TRACING_KEY = createContextKey(\n  'OpenTelemetry SDK Context Key SUPPRESS_TRACING'\n);\n\nexport function suppressTracing(context: Context): Context {\n  return context.setValue(SUPPRESS_TRACING_KEY, true);\n}\n\nexport function unsuppressTracing(context: Context): Context {\n  return context.deleteValue(SUPPRESS_TRACING_KEY);\n}\n\nexport function isTracingSuppressed(context: Context): boolean {\n  return context.getValue(SUPPRESS_TRACING_KEY) === true;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const BAGGAGE_KEY_PAIR_SEPARATOR = '=';\nexport const BAGGAGE_PROPERTIES_SEPARATOR = ';';\nexport const BAGGAGE_ITEMS_SEPARATOR = ',';\n\n// Name of the http header used to propagate the baggage\nexport const BAGGAGE_HEADER = 'baggage';\n// Maximum number of name-value pairs allowed by w3c spec\nexport const BAGGAGE_MAX_NAME_VALUE_PAIRS = 180;\n// Maximum number of bytes per a single name-value pair allowed by w3c spec\nexport const BAGGAGE_MAX_PER_NAME_VALUE_PAIRS = 4096;\n// Maximum total length of all name-value pairs allowed by w3c spec\nexport const BAGGAGE_MAX_TOTAL_LENGTH = 8192;\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  Baggage,\n  BaggageEntryMetadata,\n  baggageEntryMetadataFromString,\n} from '@opentelemetry/api';\nimport {\n  BAGGAGE_ITEMS_SEPARATOR,\n  BAGGAGE_PROPERTIES_SEPARATOR,\n  BAGGAGE_KEY_PAIR_SEPARATOR,\n  BAGGAGE_MAX_TOTAL_LENGTH,\n} from './constants';\n\ntype ParsedBaggageKeyValue = {\n  key: string;\n  value: string;\n  metadata: BaggageEntryMetadata | undefined;\n};\n\nexport function serializeKeyPairs(keyPairs: string[]): string {\n  return keyPairs.reduce((hValue: string, current: string) => {\n    const value = `${hValue}${\n      hValue !== '' ? BAGGAGE_ITEMS_SEPARATOR : ''\n    }${current}`;\n    return value.length > BAGGAGE_MAX_TOTAL_LENGTH ? hValue : value;\n  }, '');\n}\n\nexport function getKeyPairs(baggage: Baggage): string[] {\n  return baggage.getAllEntries().map(([key, value]) => {\n    let entry = `${encodeURIComponent(key)}=${encodeURIComponent(value.value)}`;\n\n    // include opaque metadata if provided\n    // NOTE: we intentionally don't URI-encode the metadata - that responsibility falls on the metadata implementation\n    if (value.metadata !== undefined) {\n      entry += BAGGAGE_PROPERTIES_SEPARATOR + value.metadata.toString();\n    }\n\n    return entry;\n  });\n}\n\nexport function parsePairKeyValue(\n  entry: string\n): ParsedBaggageKeyValue | undefined {\n  const valueProps = entry.split(BAGGAGE_PROPERTIES_SEPARATOR);\n  if (valueProps.length <= 0) return;\n  const keyPairPart = valueProps.shift();\n  if (!keyPairPart) return;\n  const separatorIndex = keyPairPart.indexOf(BAGGAGE_KEY_PAIR_SEPARATOR);\n  if (separatorIndex <= 0) return;\n  const key = decodeURIComponent(\n    keyPairPart.substring(0, separatorIndex).trim()\n  );\n  const value = decodeURIComponent(\n    keyPairPart.substring(separatorIndex + 1).trim()\n  );\n  let metadata;\n  if (valueProps.length > 0) {\n    metadata = baggageEntryMetadataFromString(\n      valueProps.join(BAGGAGE_PROPERTIES_SEPARATOR)\n    );\n  }\n  return { key, value, metadata };\n}\n\n/**\n * Parse a string serialized in the baggage HTTP Format (without metadata):\n * https://github.com/w3c/baggage/blob/master/baggage/HTTP_HEADER_FORMAT.md\n */\nexport function parseKeyPairsIntoRecord(\n  value?: string\n): Record<string, string> {\n  if (typeof value !== 'string' || value.length === 0) return {};\n  return value\n    .split(BAGGAGE_ITEMS_SEPARATOR)\n    .map(entry => {\n      return parsePairKeyValue(entry);\n    })\n    .filter(keyPair => keyPair !== undefined && keyPair.value.length > 0)\n    .reduce<Record<string, string>>((headers, keyPair) => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      headers[keyPair!.key] = keyPair!.value;\n      return headers;\n    }, {});\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BaggageEntry,\n  Context,\n  propagation,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n} from '@opentelemetry/api';\n\nimport { isTracingSuppressed } from '../../trace/suppress-tracing';\nimport {\n  BAGGAGE_HEADER,\n  BAGGAGE_ITEMS_SEPARATOR,\n  BAGGAGE_MAX_NAME_VALUE_PAIRS,\n  BAGGAGE_MAX_PER_NAME_VALUE_PAIRS,\n} from '../constants';\nimport { getKeyPairs, parsePairKeyValue, serializeKeyPairs } from '../utils';\n\n/**\n * Propagates {@link Baggage} through Context format propagation.\n *\n * Based on the Baggage specification:\n * https://w3c.github.io/baggage/\n */\nexport class W3CBaggagePropagator implements TextMapPropagator {\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    const baggage = propagation.getBaggage(context);\n    if (!baggage || isTracingSuppressed(context)) return;\n    const keyPairs = getKeyPairs(baggage)\n      .filter((pair: string) => {\n        return pair.length <= BAGGAGE_MAX_PER_NAME_VALUE_PAIRS;\n      })\n      .slice(0, BAGGAGE_MAX_NAME_VALUE_PAIRS);\n    const headerValue = serializeKeyPairs(keyPairs);\n    if (headerValue.length > 0) {\n      setter.set(carrier, BAGGAGE_HEADER, headerValue);\n    }\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const headerValue = getter.get(carrier, BAGGAGE_HEADER);\n    const baggageString = Array.isArray(headerValue)\n      ? headerValue.join(BAGGAGE_ITEMS_SEPARATOR)\n      : headerValue;\n    if (!baggageString) return context;\n    const baggage: Record<string, BaggageEntry> = {};\n    if (baggageString.length === 0) {\n      return context;\n    }\n    const pairs = baggageString.split(BAGGAGE_ITEMS_SEPARATOR);\n    pairs.forEach(entry => {\n      const keyPair = parsePairKeyValue(entry);\n      if (keyPair) {\n        const baggageEntry: BaggageEntry = { value: keyPair.value };\n        if (keyPair.metadata) {\n          baggageEntry.metadata = keyPair.metadata;\n        }\n        baggage[keyPair.key] = baggageEntry;\n      }\n    });\n    if (Object.entries(baggage).length === 0) {\n      return context;\n    }\n    return propagation.setBaggage(context, propagation.createBaggage(baggage));\n  }\n\n  fields(): string[] {\n    return [BAGGAGE_HEADER];\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Clock {\n  /**\n   * Return the current time in milliseconds from some epoch such as the Unix epoch or process start\n   */\n  now(): number;\n}\n\n/**\n * A utility for returning wall times anchored to a given point in time. Wall time measurements will\n * not be taken from the system, but instead are computed by adding a monotonic clock time\n * to the anchor point.\n *\n * This is needed because the system time can change and result in unexpected situations like\n * spans ending before they are started. Creating an anchored clock for each local root span\n * ensures that span timings and durations are accurate while preventing span times from drifting\n * too far from the system clock.\n *\n * Only creating an anchored clock once per local trace ensures span times are correct relative\n * to each other. For example, a child span will never have a start time before its parent even\n * if the system clock is corrected during the local trace.\n *\n * Heavily inspired by the OTel Java anchored clock\n * https://github.com/open-telemetry/opentelemetry-java/blob/main/sdk/trace/src/main/java/io/opentelemetry/sdk/trace/AnchoredClock.java\n */\nexport class AnchoredClock implements Clock {\n  private _monotonicClock: Clock;\n  private _epochMillis: number;\n  private _performanceMillis: number;\n\n  /**\n   * Create a new AnchoredClock anchored to the current time returned by systemClock.\n   *\n   * @param systemClock should be a clock that returns the number of milliseconds since January 1 1970 such as Date\n   * @param monotonicClock should be a clock that counts milliseconds monotonically such as window.performance or perf_hooks.performance\n   */\n  public constructor(systemClock: Clock, monotonicClock: Clock) {\n    this._monotonicClock = monotonicClock;\n    this._epochMillis = systemClock.now();\n    this._performanceMillis = monotonicClock.now();\n  }\n\n  /**\n   * Returns the current time by adding the number of milliseconds since the\n   * AnchoredClock was created to the creation epoch time\n   */\n  public now(): number {\n    const delta = this._monotonicClock.now() - this._performanceMillis;\n    return this._epochMillis + delta;\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag, SpanAttributeValue, SpanAttributes } from '@opentelemetry/api';\n\nexport function sanitizeAttributes(attributes: unknown): SpanAttributes {\n  const out: SpanAttributes = {};\n\n  if (typeof attributes !== 'object' || attributes == null) {\n    return out;\n  }\n\n  for (const [key, val] of Object.entries(attributes)) {\n    if (!isAttributeKey(key)) {\n      diag.warn(`Invalid attribute key: ${key}`);\n      continue;\n    }\n    if (!isAttributeValue(val)) {\n      diag.warn(`Invalid attribute value set for key: ${key}`);\n      continue;\n    }\n    if (Array.isArray(val)) {\n      out[key] = val.slice();\n    } else {\n      out[key] = val;\n    }\n  }\n\n  return out;\n}\n\nexport function isAttributeKey(key: unknown): key is string {\n  return typeof key === 'string' && key.length > 0;\n}\n\nexport function isAttributeValue(val: unknown): val is SpanAttributeValue {\n  if (val == null) {\n    return true;\n  }\n\n  if (Array.isArray(val)) {\n    return isHomogeneousAttributeValueArray(val);\n  }\n\n  return isValidPrimitiveAttributeValue(val);\n}\n\nfunction isHomogeneousAttributeValueArray(arr: unknown[]): boolean {\n  let type: string | undefined;\n\n  for (const element of arr) {\n    // null/undefined elements are allowed\n    if (element == null) continue;\n\n    if (!type) {\n      if (isValidPrimitiveAttributeValue(element)) {\n        type = typeof element;\n        continue;\n      }\n      // encountered an invalid primitive\n      return false;\n    }\n\n    if (typeof element === type) {\n      continue;\n    }\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction isValidPrimitiveAttributeValue(val: unknown): boolean {\n  switch (typeof val) {\n    case 'number':\n    case 'boolean':\n    case 'string':\n      return true;\n  }\n\n  return false;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag, Exception } from '@opentelemetry/api';\nimport { ErrorHandler } from './types';\n\n/**\n * Returns a function that logs an error using the provided logger, or a\n * console logger if one was not provided.\n */\nexport function loggingErrorHandler(): ErrorHandler {\n  return (ex: Exception) => {\n    diag.error(stringifyException(ex));\n  };\n}\n\n/**\n * Converts an exception into a string representation\n * @param {Exception} ex\n */\nfunction stringifyException(ex: Exception | string): string {\n  if (typeof ex === 'string') {\n    return ex;\n  } else {\n    return JSON.stringify(flattenException(ex));\n  }\n}\n\n/**\n * Flattens an exception into key-value pairs by traversing the prototype chain\n * and coercing values to strings. Duplicate properties will not be overwritten;\n * the first insert wins.\n */\nfunction flattenException(ex: Exception): Record<string, string> {\n  const result = {} as Record<string, string>;\n  let current = ex;\n\n  while (current !== null) {\n    Object.getOwnPropertyNames(current).forEach(propertyName => {\n      if (result[propertyName]) return;\n      const value = current[propertyName as keyof typeof current];\n      if (value) {\n        result[propertyName] = String(value);\n      }\n    });\n    current = Object.getPrototypeOf(current);\n  }\n\n  return result;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Exception } from '@opentelemetry/api';\nimport { loggingErrorHandler } from './logging-error-handler';\nimport { ErrorHandler } from './types';\n\n/** The global error handler delegate */\nlet delegateHandler = loggingErrorHandler();\n\n/**\n * Set the global error handler\n * @param {ErrorHandler} handler\n */\nexport function setGlobalErrorHandler(handler: ErrorHandler): void {\n  delegateHandler = handler;\n}\n\n/**\n * Return the global error handler\n * @param {Exception} ex\n */\nexport function globalErrorHandler(ex: Exception): void {\n  try {\n    delegateHandler(ex);\n  } catch {} // eslint-disable-line no-empty\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum TracesSamplerValues {\n  AlwaysOff = 'always_off',\n  AlwaysOn = 'always_on',\n  ParentBasedAlwaysOff = 'parentbased_always_off',\n  ParentBasedAlwaysOn = 'parentbased_always_on',\n  ParentBasedTraceIdRatio = 'parentbased_traceidratio',\n  TraceIdRatio = 'traceidratio',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Updates to this file should also be replicated to @opentelemetry/api too.\n\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport const _globalThis: typeof globalThis =\n  typeof globalThis === 'object'\n    ? globalThis\n    : typeof self === 'object'\n    ? self\n    : typeof window === 'object'\n    ? window\n    : typeof global === 'object'\n    ? global\n    : ({} as typeof globalThis);\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagLogLevel } from '@opentelemetry/api';\nimport { TracesSamplerValues } from './sampling';\nimport { _globalThis } from '../platform/browser/globalThis';\n\nconst DEFAULT_LIST_SEPARATOR = ',';\n\n/**\n * Environment interface to define all names\n */\n\nconst ENVIRONMENT_BOOLEAN_KEYS = ['OTEL_SDK_DISABLED'] as const;\n\ntype ENVIRONMENT_BOOLEANS = {\n  [K in (typeof ENVIRONMENT_BOOLEAN_KEYS)[number]]?: boolean;\n};\n\nfunction isEnvVarABoolean(key: unknown): key is keyof ENVIRONMENT_BOOLEANS {\n  return (\n    ENVIRONMENT_BOOLEAN_KEYS.indexOf(key as keyof ENVIRONMENT_BOOLEANS) > -1\n  );\n}\n\nconst ENVIRONMENT_NUMBERS_KEYS = [\n  'OTEL_BSP_EXPORT_TIMEOUT',\n  'OTEL_BSP_MAX_EXPORT_BATCH_SIZE',\n  'OTEL_BSP_MAX_QUEUE_SIZE',\n  'OTEL_BSP_SCHEDULE_DELAY',\n  'OTEL_BLRP_EXPORT_TIMEOUT',\n  'OTEL_BLRP_MAX_EXPORT_BATCH_SIZE',\n  'OTEL_BLRP_MAX_QUEUE_SIZE',\n  'OTEL_BLRP_SCHEDULE_DELAY',\n  'OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n  'OTEL_ATTRIBUTE_COUNT_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT',\n  'OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n  'OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT',\n  'OTEL_SPAN_EVENT_COUNT_LIMIT',\n  'OTEL_SPAN_LINK_COUNT_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT',\n  'OTEL_EXPORTER_OTLP_TIMEOUT',\n  'OTEL_EXPORTER_OTLP_TRACES_TIMEOUT',\n  'OTEL_EXPORTER_OTLP_METRICS_TIMEOUT',\n  'OTEL_EXPORTER_OTLP_LOGS_TIMEOUT',\n  'OTEL_EXPORTER_JAEGER_AGENT_PORT',\n] as const;\n\ntype ENVIRONMENT_NUMBERS = {\n  [K in (typeof ENVIRONMENT_NUMBERS_KEYS)[number]]?: number;\n};\n\nfunction isEnvVarANumber(key: unknown): key is keyof ENVIRONMENT_NUMBERS {\n  return (\n    ENVIRONMENT_NUMBERS_KEYS.indexOf(key as keyof ENVIRONMENT_NUMBERS) > -1\n  );\n}\n\nconst ENVIRONMENT_LISTS_KEYS = [\n  'OTEL_NO_PATCH_MODULES',\n  'OTEL_PROPAGATORS',\n] as const;\n\ntype ENVIRONMENT_LISTS = {\n  [K in (typeof ENVIRONMENT_LISTS_KEYS)[number]]?: string[];\n};\n\nfunction isEnvVarAList(key: unknown): key is keyof ENVIRONMENT_LISTS {\n  return ENVIRONMENT_LISTS_KEYS.indexOf(key as keyof ENVIRONMENT_LISTS) > -1;\n}\n\nexport type ENVIRONMENT = {\n  CONTAINER_NAME?: string;\n  ECS_CONTAINER_METADATA_URI_V4?: string;\n  ECS_CONTAINER_METADATA_URI?: string;\n  HOSTNAME?: string;\n  KUBERNETES_SERVICE_HOST?: string;\n  NAMESPACE?: string;\n  OTEL_EXPORTER_JAEGER_AGENT_HOST?: string;\n  OTEL_EXPORTER_JAEGER_ENDPOINT?: string;\n  OTEL_EXPORTER_JAEGER_PASSWORD?: string;\n  OTEL_EXPORTER_JAEGER_USER?: string;\n  OTEL_EXPORTER_OTLP_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_TRACES_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_METRICS_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_LOGS_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_HEADERS?: string;\n  OTEL_EXPORTER_OTLP_TRACES_HEADERS?: string;\n  OTEL_EXPORTER_OTLP_METRICS_HEADERS?: string;\n  OTEL_EXPORTER_OTLP_LOGS_HEADERS?: string;\n  OTEL_EXPORTER_ZIPKIN_ENDPOINT?: string;\n  OTEL_LOG_LEVEL?: DiagLogLevel;\n  OTEL_RESOURCE_ATTRIBUTES?: string;\n  OTEL_SERVICE_NAME?: string;\n  OTEL_TRACES_EXPORTER?: string;\n  OTEL_TRACES_SAMPLER_ARG?: string;\n  OTEL_TRACES_SAMPLER?: string;\n  OTEL_LOGS_EXPORTER?: string;\n  OTEL_EXPORTER_OTLP_INSECURE?: string;\n  OTEL_EXPORTER_OTLP_TRACES_INSECURE?: string;\n  OTEL_EXPORTER_OTLP_METRICS_INSECURE?: string;\n  OTEL_EXPORTER_OTLP_LOGS_INSECURE?: string;\n  OTEL_EXPORTER_OTLP_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_LOGS_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_COMPRESSION?: string;\n  OTEL_EXPORTER_OTLP_TRACES_COMPRESSION?: string;\n  OTEL_EXPORTER_OTLP_METRICS_COMPRESSION?: string;\n  OTEL_EXPORTER_OTLP_LOGS_COMPRESSION?: string;\n  OTEL_EXPORTER_OTLP_CLIENT_KEY?: string;\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY?: string;\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY?: string;\n  OTEL_EXPORTER_OTLP_LOGS_CLIENT_KEY?: string;\n  OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_LOGS_CLIENT_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_PROTOCOL?: string;\n  OTEL_EXPORTER_OTLP_TRACES_PROTOCOL?: string;\n  OTEL_EXPORTER_OTLP_METRICS_PROTOCOL?: string;\n  OTEL_EXPORTER_OTLP_LOGS_PROTOCOL?: string;\n  OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE?: string;\n} & ENVIRONMENT_BOOLEANS &\n  ENVIRONMENT_NUMBERS &\n  ENVIRONMENT_LISTS;\n\nexport type RAW_ENVIRONMENT = {\n  [key: string]: string | number | undefined | string[];\n};\n\nexport const DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT = Infinity;\n\nexport const DEFAULT_ATTRIBUTE_COUNT_LIMIT = 128;\n\nexport const DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT = 128;\nexport const DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT = 128;\n\n/**\n * Default environment variables\n */\nexport const DEFAULT_ENVIRONMENT: Required<ENVIRONMENT> = {\n  OTEL_SDK_DISABLED: false,\n  CONTAINER_NAME: '',\n  ECS_CONTAINER_METADATA_URI_V4: '',\n  ECS_CONTAINER_METADATA_URI: '',\n  HOSTNAME: '',\n  KUBERNETES_SERVICE_HOST: '',\n  NAMESPACE: '',\n  OTEL_BSP_EXPORT_TIMEOUT: 30000,\n  OTEL_BSP_MAX_EXPORT_BATCH_SIZE: 512,\n  OTEL_BSP_MAX_QUEUE_SIZE: 2048,\n  OTEL_BSP_SCHEDULE_DELAY: 5000,\n  OTEL_BLRP_EXPORT_TIMEOUT: 30000,\n  OTEL_BLRP_MAX_EXPORT_BATCH_SIZE: 512,\n  OTEL_BLRP_MAX_QUEUE_SIZE: 2048,\n  OTEL_BLRP_SCHEDULE_DELAY: 5000,\n  OTEL_EXPORTER_JAEGER_AGENT_HOST: '',\n  OTEL_EXPORTER_JAEGER_AGENT_PORT: 6832,\n  OTEL_EXPORTER_JAEGER_ENDPOINT: '',\n  OTEL_EXPORTER_JAEGER_PASSWORD: '',\n  OTEL_EXPORTER_JAEGER_USER: '',\n  OTEL_EXPORTER_OTLP_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_LOGS_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_HEADERS: '',\n  OTEL_EXPORTER_OTLP_TRACES_HEADERS: '',\n  OTEL_EXPORTER_OTLP_METRICS_HEADERS: '',\n  OTEL_EXPORTER_OTLP_LOGS_HEADERS: '',\n  OTEL_EXPORTER_OTLP_TIMEOUT: 10000,\n  OTEL_EXPORTER_OTLP_TRACES_TIMEOUT: 10000,\n  OTEL_EXPORTER_OTLP_METRICS_TIMEOUT: 10000,\n  OTEL_EXPORTER_OTLP_LOGS_TIMEOUT: 10000,\n  OTEL_EXPORTER_ZIPKIN_ENDPOINT: 'http://localhost:9411/api/v2/spans',\n  OTEL_LOG_LEVEL: DiagLogLevel.INFO,\n  OTEL_NO_PATCH_MODULES: [],\n  OTEL_PROPAGATORS: ['tracecontext', 'baggage'],\n  OTEL_RESOURCE_ATTRIBUTES: '',\n  OTEL_SERVICE_NAME: '',\n  OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  OTEL_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT:\n    DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  OTEL_SPAN_EVENT_COUNT_LIMIT: 128,\n  OTEL_SPAN_LINK_COUNT_LIMIT: 128,\n  OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT:\n    DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT,\n  OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT:\n    DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT,\n  OTEL_TRACES_EXPORTER: '',\n  OTEL_TRACES_SAMPLER: TracesSamplerValues.ParentBasedAlwaysOn,\n  OTEL_TRACES_SAMPLER_ARG: '',\n  OTEL_LOGS_EXPORTER: '',\n  OTEL_EXPORTER_OTLP_INSECURE: '',\n  OTEL_EXPORTER_OTLP_TRACES_INSECURE: '',\n  OTEL_EXPORTER_OTLP_METRICS_INSECURE: '',\n  OTEL_EXPORTER_OTLP_LOGS_INSECURE: '',\n  OTEL_EXPORTER_OTLP_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_LOGS_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_TRACES_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_METRICS_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_LOGS_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_LOGS_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_LOGS_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_PROTOCOL: 'http/protobuf',\n  OTEL_EXPORTER_OTLP_TRACES_PROTOCOL: 'http/protobuf',\n  OTEL_EXPORTER_OTLP_METRICS_PROTOCOL: 'http/protobuf',\n  OTEL_EXPORTER_OTLP_LOGS_PROTOCOL: 'http/protobuf',\n  OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE: 'cumulative',\n};\n\n/**\n * @param key\n * @param environment\n * @param values\n */\nfunction parseBoolean(\n  key: keyof ENVIRONMENT_BOOLEANS,\n  environment: ENVIRONMENT,\n  values: RAW_ENVIRONMENT\n) {\n  if (typeof values[key] === 'undefined') {\n    return;\n  }\n\n  const value = String(values[key]);\n  // support case-insensitive \"true\"\n  environment[key] = value.toLowerCase() === 'true';\n}\n\n/**\n * Parses a variable as number with number validation\n * @param name\n * @param environment\n * @param values\n * @param min\n * @param max\n */\nfunction parseNumber(\n  name: keyof ENVIRONMENT_NUMBERS,\n  environment: ENVIRONMENT,\n  values: RAW_ENVIRONMENT,\n  min = -Infinity,\n  max = Infinity\n) {\n  if (typeof values[name] !== 'undefined') {\n    const value = Number(values[name] as string);\n    if (!isNaN(value)) {\n      if (value < min) {\n        environment[name] = min;\n      } else if (value > max) {\n        environment[name] = max;\n      } else {\n        environment[name] = value;\n      }\n    }\n  }\n}\n\n/**\n * Parses list-like strings from input into output.\n * @param name\n * @param environment\n * @param values\n * @param separator\n */\nfunction parseStringList(\n  name: keyof ENVIRONMENT_LISTS,\n  output: ENVIRONMENT,\n  input: RAW_ENVIRONMENT,\n  separator = DEFAULT_LIST_SEPARATOR\n) {\n  const givenValue = input[name];\n  if (typeof givenValue === 'string') {\n    output[name] = givenValue.split(separator).map(v => v.trim());\n  }\n}\n\n// The support string -> DiagLogLevel mappings\nconst logLevelMap: { [key: string]: DiagLogLevel } = {\n  ALL: DiagLogLevel.ALL,\n  VERBOSE: DiagLogLevel.VERBOSE,\n  DEBUG: DiagLogLevel.DEBUG,\n  INFO: DiagLogLevel.INFO,\n  WARN: DiagLogLevel.WARN,\n  ERROR: DiagLogLevel.ERROR,\n  NONE: DiagLogLevel.NONE,\n};\n\n/**\n * Environmentally sets log level if valid log level string is provided\n * @param key\n * @param environment\n * @param values\n */\nfunction setLogLevelFromEnv(\n  key: keyof ENVIRONMENT,\n  environment: RAW_ENVIRONMENT | ENVIRONMENT,\n  values: RAW_ENVIRONMENT\n) {\n  const value = values[key];\n  if (typeof value === 'string') {\n    const theLevel = logLevelMap[value.toUpperCase()];\n    if (theLevel != null) {\n      environment[key] = theLevel;\n    }\n  }\n}\n\n/**\n * Parses environment values\n * @param values\n */\nexport function parseEnvironment(values: RAW_ENVIRONMENT): ENVIRONMENT {\n  const environment: ENVIRONMENT = {};\n\n  for (const env in DEFAULT_ENVIRONMENT) {\n    const key = env as keyof ENVIRONMENT;\n\n    switch (key) {\n      case 'OTEL_LOG_LEVEL':\n        setLogLevelFromEnv(key, environment, values);\n        break;\n\n      default:\n        if (isEnvVarABoolean(key)) {\n          parseBoolean(key, environment, values);\n        } else if (isEnvVarANumber(key)) {\n          parseNumber(key, environment, values);\n        } else if (isEnvVarAList(key)) {\n          parseStringList(key, environment, values);\n        } else {\n          const value = values[key];\n          if (typeof value !== 'undefined' && value !== null) {\n            environment[key] = String(value);\n          }\n        }\n    }\n  }\n\n  return environment;\n}\n\n/**\n * Get environment in node or browser without\n * populating default values.\n */\nexport function getEnvWithoutDefaults(): ENVIRONMENT {\n  return typeof process !== 'undefined' && process && process.env\n    ? parseEnvironment(process.env as RAW_ENVIRONMENT)\n    : parseEnvironment(_globalThis as typeof globalThis & RAW_ENVIRONMENT);\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DEFAULT_ENVIRONMENT,\n  ENVIRONMENT,\n  RAW_ENVIRONMENT,\n  parseEnvironment,\n} from '../../utils/environment';\nimport { _globalThis } from './globalThis';\n\n/**\n * Gets the environment variables\n */\nexport function getEnv(): Required<ENVIRONMENT> {\n  const globalEnv = parseEnvironment(\n    _globalThis as typeof globalThis & RAW_ENVIRONMENT\n  );\n  return Object.assign({}, DEFAULT_ENVIRONMENT, globalEnv);\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function hexToBase64(hexStr: string): string {\n  const hexStrLen = hexStr.length;\n  let hexAsciiCharsStr = '';\n  for (let i = 0; i < hexStrLen; i += 2) {\n    const hexPair = hexStr.substring(i, i + 2);\n    const hexVal = parseInt(hexPair, 16);\n    hexAsciiCharsStr += String.fromCharCode(hexVal);\n  }\n  return btoa(hexAsciiCharsStr);\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { IdGenerator } from '../../trace/IdGenerator';\n\nconst SPAN_ID_BYTES = 8;\nconst TRACE_ID_BYTES = 16;\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n */\nexport class RandomIdGenerator implements IdGenerator {\n  /**\n   * Returns a random 16-byte trace ID formatted/encoded as a 32 lowercase hex\n   * characters corresponding to 128 bits.\n   */\n  generateTraceId = getIdGenerator(TRACE_ID_BYTES);\n\n  /**\n   * Returns a random 8-byte span ID formatted/encoded as a 16 lowercase hex\n   * characters corresponding to 64 bits.\n   */\n  generateSpanId = getIdGenerator(SPAN_ID_BYTES);\n}\n\nconst SHARED_CHAR_CODES_ARRAY = Array(32);\nfunction getIdGenerator(bytes: number): () => string {\n  return function generateId() {\n    for (let i = 0; i < bytes * 2; i++) {\n      SHARED_CHAR_CODES_ARRAY[i] = Math.floor(Math.random() * 16) + 48;\n      // valid hex characters in the range 48-57 and 97-102\n      if (SHARED_CHAR_CODES_ARRAY[i] >= 58) {\n        SHARED_CHAR_CODES_ARRAY[i] += 39;\n      }\n    }\n    return String.fromCharCode.apply(\n      null,\n      SHARED_CHAR_CODES_ARRAY.slice(0, bytes * 2)\n    );\n  };\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const otperformance = performance;\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '1.19.0';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\nexport const SemanticAttributes = {\n  /**\n   * The full invoked ARN as provided on the `Context` passed to the function (`Lambda-Runtime-Invoked-Function-Arn` header on the `/runtime/invocation/next` applicable).\n   *\n   * Note: This may be different from `faas.id` if an alias is involved.\n   */\n  AWS_LAMBDA_INVOKED_ARN: 'aws.lambda.invoked_arn',\n\n  /**\n   * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n   */\n  DB_SYSTEM: 'db.system',\n\n  /**\n   * The connection string used to connect to the database. It is recommended to remove embedded credentials.\n   */\n  DB_CONNECTION_STRING: 'db.connection_string',\n\n  /**\n   * Username for accessing the database.\n   */\n  DB_USER: 'db.user',\n\n  /**\n   * The fully-qualified class name of the [Java Database Connectivity (JDBC)](https://docs.oracle.com/javase/8/docs/technotes/guides/jdbc/) driver used to connect.\n   */\n  DB_JDBC_DRIVER_CLASSNAME: 'db.jdbc.driver_classname',\n\n  /**\n   * If no [tech-specific attribute](#call-level-attributes-for-specific-technologies) is defined, this attribute is used to report the name of the database being accessed. For commands that switch the database, this should be set to the target database (even if the command fails).\n   *\n   * Note: In some SQL databases, the database name to be used is called &#34;schema name&#34;.\n   */\n  DB_NAME: 'db.name',\n\n  /**\n   * The database statement being executed.\n   *\n   * Note: The value may be sanitized to exclude sensitive information.\n   */\n  DB_STATEMENT: 'db.statement',\n\n  /**\n   * The name of the operation being executed, e.g. the [MongoDB command name](https://docs.mongodb.com/manual/reference/command/#database-operations) such as `findAndModify`, or the SQL keyword.\n   *\n   * Note: When setting this to an SQL keyword, it is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if the operation name is provided by the library being instrumented. If the SQL statement has an ambiguous operation, or performs more than one operation, this value may be omitted.\n   */\n  DB_OPERATION: 'db.operation',\n\n  /**\n   * The Microsoft SQL Server [instance name](https://docs.microsoft.com/en-us/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver15) connecting to. This name is used to determine the port of a named instance.\n   *\n   * Note: If setting a `db.mssql.instance_name`, `net.peer.port` is no longer required (but still recommended if non-standard).\n   */\n  DB_MSSQL_INSTANCE_NAME: 'db.mssql.instance_name',\n\n  /**\n   * The name of the keyspace being accessed. To be used instead of the generic `db.name` attribute.\n   */\n  DB_CASSANDRA_KEYSPACE: 'db.cassandra.keyspace',\n\n  /**\n   * The fetch size used for paging, i.e. how many rows will be returned at once.\n   */\n  DB_CASSANDRA_PAGE_SIZE: 'db.cassandra.page_size',\n\n  /**\n   * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n   */\n  DB_CASSANDRA_CONSISTENCY_LEVEL: 'db.cassandra.consistency_level',\n\n  /**\n   * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n   *\n   * Note: This mirrors the db.sql.table attribute but references cassandra rather than sql. It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n   */\n  DB_CASSANDRA_TABLE: 'db.cassandra.table',\n\n  /**\n   * Whether or not the query is idempotent.\n   */\n  DB_CASSANDRA_IDEMPOTENCE: 'db.cassandra.idempotence',\n\n  /**\n   * The number of times a query was speculatively executed. Not set or `0` if the query was not executed speculatively.\n   */\n  DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT:\n    'db.cassandra.speculative_execution_count',\n\n  /**\n   * The ID of the coordinating node for a query.\n   */\n  DB_CASSANDRA_COORDINATOR_ID: 'db.cassandra.coordinator.id',\n\n  /**\n   * The data center of the coordinating node for a query.\n   */\n  DB_CASSANDRA_COORDINATOR_DC: 'db.cassandra.coordinator.dc',\n\n  /**\n   * The [HBase namespace](https://hbase.apache.org/book.html#_namespace) being accessed. To be used instead of the generic `db.name` attribute.\n   */\n  DB_HBASE_NAMESPACE: 'db.hbase.namespace',\n\n  /**\n   * The index of the database being accessed as used in the [`SELECT` command](https://redis.io/commands/select), provided as an integer. To be used instead of the generic `db.name` attribute.\n   */\n  DB_REDIS_DATABASE_INDEX: 'db.redis.database_index',\n\n  /**\n   * The collection being accessed within the database stated in `db.name`.\n   */\n  DB_MONGODB_COLLECTION: 'db.mongodb.collection',\n\n  /**\n   * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n   *\n   * Note: It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n   */\n  DB_SQL_TABLE: 'db.sql.table',\n\n  /**\n   * The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.\n   */\n  EXCEPTION_TYPE: 'exception.type',\n\n  /**\n   * The exception message.\n   */\n  EXCEPTION_MESSAGE: 'exception.message',\n\n  /**\n   * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n   */\n  EXCEPTION_STACKTRACE: 'exception.stacktrace',\n\n  /**\n  * SHOULD be set to true if the exception event is recorded at a point where it is known that the exception is escaping the scope of the span.\n  *\n  * Note: An exception is considered to have escaped (or left) the scope of a span,\nif that span is ended while the exception is still logically &#34;in flight&#34;.\nThis may be actually &#34;in flight&#34; in some languages (e.g. if the exception\nis passed to a Context manager&#39;s `__exit__` method in Python) but will\nusually be caught at the point of recording the exception in most languages.\n\nIt is usually not possible to determine at the point where an exception is thrown\nwhether it will escape the scope of a span.\nHowever, it is trivial to know that an exception\nwill escape, if one checks for an active exception just before ending the span,\nas done in the [example above](#exception-end-example).\n\nIt follows that an exception may still escape the scope of the span\neven if the `exception.escaped` attribute was not set or set to false,\nsince the event might have been recorded at a time where it was not\nclear whether the exception will escape.\n  */\n  EXCEPTION_ESCAPED: 'exception.escaped',\n\n  /**\n   * Type of the trigger on which the function is executed.\n   */\n  FAAS_TRIGGER: 'faas.trigger',\n\n  /**\n   * The execution ID of the current function execution.\n   */\n  FAAS_EXECUTION: 'faas.execution',\n\n  /**\n   * The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.\n   */\n  FAAS_DOCUMENT_COLLECTION: 'faas.document.collection',\n\n  /**\n   * Describes the type of the operation that was performed on the data.\n   */\n  FAAS_DOCUMENT_OPERATION: 'faas.document.operation',\n\n  /**\n   * A string containing the time when the data was accessed in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n   */\n  FAAS_DOCUMENT_TIME: 'faas.document.time',\n\n  /**\n   * The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.\n   */\n  FAAS_DOCUMENT_NAME: 'faas.document.name',\n\n  /**\n   * A string containing the function invocation time in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n   */\n  FAAS_TIME: 'faas.time',\n\n  /**\n   * A string containing the schedule period as [Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm).\n   */\n  FAAS_CRON: 'faas.cron',\n\n  /**\n   * A boolean that is true if the serverless function is executed for the first time (aka cold-start).\n   */\n  FAAS_COLDSTART: 'faas.coldstart',\n\n  /**\n   * The name of the invoked function.\n   *\n   * Note: SHOULD be equal to the `faas.name` resource attribute of the invoked function.\n   */\n  FAAS_INVOKED_NAME: 'faas.invoked_name',\n\n  /**\n   * The cloud provider of the invoked function.\n   *\n   * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n   */\n  FAAS_INVOKED_PROVIDER: 'faas.invoked_provider',\n\n  /**\n   * The cloud region of the invoked function.\n   *\n   * Note: SHOULD be equal to the `cloud.region` resource attribute of the invoked function.\n   */\n  FAAS_INVOKED_REGION: 'faas.invoked_region',\n\n  /**\n   * Transport protocol used. See note below.\n   */\n  NET_TRANSPORT: 'net.transport',\n\n  /**\n   * Remote address of the peer (dotted decimal for IPv4 or [RFC5952](https://tools.ietf.org/html/rfc5952) for IPv6).\n   */\n  NET_PEER_IP: 'net.peer.ip',\n\n  /**\n   * Remote port number.\n   */\n  NET_PEER_PORT: 'net.peer.port',\n\n  /**\n   * Remote hostname or similar, see note below.\n   */\n  NET_PEER_NAME: 'net.peer.name',\n\n  /**\n   * Like `net.peer.ip` but for the host IP. Useful in case of a multi-IP host.\n   */\n  NET_HOST_IP: 'net.host.ip',\n\n  /**\n   * Like `net.peer.port` but for the host port.\n   */\n  NET_HOST_PORT: 'net.host.port',\n\n  /**\n   * Local hostname or similar, see note below.\n   */\n  NET_HOST_NAME: 'net.host.name',\n\n  /**\n   * The internet connection type currently being used by the host.\n   */\n  NET_HOST_CONNECTION_TYPE: 'net.host.connection.type',\n\n  /**\n   * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n   */\n  NET_HOST_CONNECTION_SUBTYPE: 'net.host.connection.subtype',\n\n  /**\n   * The name of the mobile carrier.\n   */\n  NET_HOST_CARRIER_NAME: 'net.host.carrier.name',\n\n  /**\n   * The mobile carrier country code.\n   */\n  NET_HOST_CARRIER_MCC: 'net.host.carrier.mcc',\n\n  /**\n   * The mobile carrier network code.\n   */\n  NET_HOST_CARRIER_MNC: 'net.host.carrier.mnc',\n\n  /**\n   * The ISO 3166-1 alpha-2 2-character country code associated with the mobile carrier network.\n   */\n  NET_HOST_CARRIER_ICC: 'net.host.carrier.icc',\n\n  /**\n   * The [`service.name`](../../resource/semantic_conventions/README.md#service) of the remote service. SHOULD be equal to the actual `service.name` resource attribute of the remote service if any.\n   */\n  PEER_SERVICE: 'peer.service',\n\n  /**\n   * Username or client_id extracted from the access token or [Authorization](https://tools.ietf.org/html/rfc7235#section-4.2) header in the inbound request from outside the system.\n   */\n  ENDUSER_ID: 'enduser.id',\n\n  /**\n   * Actual/assumed role the client is making the request under extracted from token or application security context.\n   */\n  ENDUSER_ROLE: 'enduser.role',\n\n  /**\n   * Scopes or granted authorities the client currently possesses extracted from token or application security context. The value would come from the scope associated with an [OAuth 2.0 Access Token](https://tools.ietf.org/html/rfc6749#section-3.3) or an attribute value in a [SAML 2.0 Assertion](http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html).\n   */\n  ENDUSER_SCOPE: 'enduser.scope',\n\n  /**\n   * Current &#34;managed&#34; thread ID (as opposed to OS thread ID).\n   */\n  THREAD_ID: 'thread.id',\n\n  /**\n   * Current thread name.\n   */\n  THREAD_NAME: 'thread.name',\n\n  /**\n   * The method or function name, or equivalent (usually rightmost part of the code unit&#39;s name).\n   */\n  CODE_FUNCTION: 'code.function',\n\n  /**\n   * The &#34;namespace&#34; within which `code.function` is defined. Usually the qualified class or module name, such that `code.namespace` + some separator + `code.function` form a unique identifier for the code unit.\n   */\n  CODE_NAMESPACE: 'code.namespace',\n\n  /**\n   * The source code file name that identifies the code unit as uniquely as possible (preferably an absolute file path).\n   */\n  CODE_FILEPATH: 'code.filepath',\n\n  /**\n   * The line number in `code.filepath` best representing the operation. It SHOULD point within the code unit named in `code.function`.\n   */\n  CODE_LINENO: 'code.lineno',\n\n  /**\n   * HTTP request method.\n   */\n  HTTP_METHOD: 'http.method',\n\n  /**\n   * Full HTTP request URL in the form `scheme://host[:port]/path?query[#fragment]`. Usually the fragment is not transmitted over HTTP, but if it is known, it should be included nevertheless.\n   *\n   * Note: `http.url` MUST NOT contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case the attribute&#39;s value should be `https://www.example.com/`.\n   */\n  HTTP_URL: 'http.url',\n\n  /**\n   * The full request target as passed in a HTTP request line or equivalent.\n   */\n  HTTP_TARGET: 'http.target',\n\n  /**\n   * The value of the [HTTP host header](https://tools.ietf.org/html/rfc7230#section-5.4). An empty Host header should also be reported, see note.\n   *\n   * Note: When the header is present but empty the attribute SHOULD be set to the empty string. Note that this is a valid situation that is expected in certain cases, according the aforementioned [section of RFC 7230](https://tools.ietf.org/html/rfc7230#section-5.4). When the header is not set the attribute MUST NOT be set.\n   */\n  HTTP_HOST: 'http.host',\n\n  /**\n   * The URI scheme identifying the used protocol.\n   */\n  HTTP_SCHEME: 'http.scheme',\n\n  /**\n   * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n   */\n  HTTP_STATUS_CODE: 'http.status_code',\n\n  /**\n   * Kind of HTTP protocol used.\n   *\n   * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n   */\n  HTTP_FLAVOR: 'http.flavor',\n\n  /**\n   * Value of the [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3) header sent by the client.\n   */\n  HTTP_USER_AGENT: 'http.user_agent',\n\n  /**\n   * The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n   */\n  HTTP_REQUEST_CONTENT_LENGTH: 'http.request_content_length',\n\n  /**\n   * The size of the uncompressed request payload body after transport decoding. Not set if transport encoding not used.\n   */\n  HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED:\n    'http.request_content_length_uncompressed',\n\n  /**\n   * The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n   */\n  HTTP_RESPONSE_CONTENT_LENGTH: 'http.response_content_length',\n\n  /**\n   * The size of the uncompressed response payload body after transport decoding. Not set if transport encoding not used.\n   */\n  HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED:\n    'http.response_content_length_uncompressed',\n\n  /**\n   * The primary server name of the matched virtual host. This should be obtained via configuration. If no such configuration can be obtained, this attribute MUST NOT be set ( `net.host.name` should be used instead).\n   *\n   * Note: `http.url` is usually not readily available on the server side but would have to be assembled in a cumbersome and sometimes lossy process from other information (see e.g. open-telemetry/opentelemetry-python/pull/148). It is thus preferred to supply the raw data that is available.\n   */\n  HTTP_SERVER_NAME: 'http.server_name',\n\n  /**\n   * The matched route (path template).\n   */\n  HTTP_ROUTE: 'http.route',\n\n  /**\n  * The IP address of the original client behind all proxies, if known (e.g. from [X-Forwarded-For](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For)).\n  *\n  * Note: This is not necessarily the same as `net.peer.ip`, which would\nidentify the network-level peer, which may be a proxy.\n\nThis attribute should be set when a source of information different\nfrom the one used for `net.peer.ip`, is available even if that other\nsource just confirms the same value as `net.peer.ip`.\nRationale: For `net.peer.ip`, one typically does not know if it\ncomes from a proxy, reverse proxy, or the actual client. Setting\n`http.client_ip` when it&#39;s the same as `net.peer.ip` means that\none is at least somewhat confident that the address is not that of\nthe closest proxy.\n  */\n  HTTP_CLIENT_IP: 'http.client_ip',\n\n  /**\n   * The keys in the `RequestItems` object field.\n   */\n  AWS_DYNAMODB_TABLE_NAMES: 'aws.dynamodb.table_names',\n\n  /**\n   * The JSON-serialized value of each item in the `ConsumedCapacity` response field.\n   */\n  AWS_DYNAMODB_CONSUMED_CAPACITY: 'aws.dynamodb.consumed_capacity',\n\n  /**\n   * The JSON-serialized value of the `ItemCollectionMetrics` response field.\n   */\n  AWS_DYNAMODB_ITEM_COLLECTION_METRICS: 'aws.dynamodb.item_collection_metrics',\n\n  /**\n   * The value of the `ProvisionedThroughput.ReadCapacityUnits` request parameter.\n   */\n  AWS_DYNAMODB_PROVISIONED_READ_CAPACITY:\n    'aws.dynamodb.provisioned_read_capacity',\n\n  /**\n   * The value of the `ProvisionedThroughput.WriteCapacityUnits` request parameter.\n   */\n  AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY:\n    'aws.dynamodb.provisioned_write_capacity',\n\n  /**\n   * The value of the `ConsistentRead` request parameter.\n   */\n  AWS_DYNAMODB_CONSISTENT_READ: 'aws.dynamodb.consistent_read',\n\n  /**\n   * The value of the `ProjectionExpression` request parameter.\n   */\n  AWS_DYNAMODB_PROJECTION: 'aws.dynamodb.projection',\n\n  /**\n   * The value of the `Limit` request parameter.\n   */\n  AWS_DYNAMODB_LIMIT: 'aws.dynamodb.limit',\n\n  /**\n   * The value of the `AttributesToGet` request parameter.\n   */\n  AWS_DYNAMODB_ATTRIBUTES_TO_GET: 'aws.dynamodb.attributes_to_get',\n\n  /**\n   * The value of the `IndexName` request parameter.\n   */\n  AWS_DYNAMODB_INDEX_NAME: 'aws.dynamodb.index_name',\n\n  /**\n   * The value of the `Select` request parameter.\n   */\n  AWS_DYNAMODB_SELECT: 'aws.dynamodb.select',\n\n  /**\n   * The JSON-serialized value of each item of the `GlobalSecondaryIndexes` request field.\n   */\n  AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES:\n    'aws.dynamodb.global_secondary_indexes',\n\n  /**\n   * The JSON-serialized value of each item of the `LocalSecondaryIndexes` request field.\n   */\n  AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES: 'aws.dynamodb.local_secondary_indexes',\n\n  /**\n   * The value of the `ExclusiveStartTableName` request parameter.\n   */\n  AWS_DYNAMODB_EXCLUSIVE_START_TABLE: 'aws.dynamodb.exclusive_start_table',\n\n  /**\n   * The the number of items in the `TableNames` response parameter.\n   */\n  AWS_DYNAMODB_TABLE_COUNT: 'aws.dynamodb.table_count',\n\n  /**\n   * The value of the `ScanIndexForward` request parameter.\n   */\n  AWS_DYNAMODB_SCAN_FORWARD: 'aws.dynamodb.scan_forward',\n\n  /**\n   * The value of the `Segment` request parameter.\n   */\n  AWS_DYNAMODB_SEGMENT: 'aws.dynamodb.segment',\n\n  /**\n   * The value of the `TotalSegments` request parameter.\n   */\n  AWS_DYNAMODB_TOTAL_SEGMENTS: 'aws.dynamodb.total_segments',\n\n  /**\n   * The value of the `Count` response parameter.\n   */\n  AWS_DYNAMODB_COUNT: 'aws.dynamodb.count',\n\n  /**\n   * The value of the `ScannedCount` response parameter.\n   */\n  AWS_DYNAMODB_SCANNED_COUNT: 'aws.dynamodb.scanned_count',\n\n  /**\n   * The JSON-serialized value of each item in the `AttributeDefinitions` request field.\n   */\n  AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS: 'aws.dynamodb.attribute_definitions',\n\n  /**\n   * The JSON-serialized value of each item in the the `GlobalSecondaryIndexUpdates` request field.\n   */\n  AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES:\n    'aws.dynamodb.global_secondary_index_updates',\n\n  /**\n   * A string identifying the messaging system.\n   */\n  MESSAGING_SYSTEM: 'messaging.system',\n\n  /**\n   * The message destination name. This might be equal to the span name but is required nevertheless.\n   */\n  MESSAGING_DESTINATION: 'messaging.destination',\n\n  /**\n   * The kind of message destination.\n   */\n  MESSAGING_DESTINATION_KIND: 'messaging.destination_kind',\n\n  /**\n   * A boolean that is true if the message destination is temporary.\n   */\n  MESSAGING_TEMP_DESTINATION: 'messaging.temp_destination',\n\n  /**\n   * The name of the transport protocol.\n   */\n  MESSAGING_PROTOCOL: 'messaging.protocol',\n\n  /**\n   * The version of the transport protocol.\n   */\n  MESSAGING_PROTOCOL_VERSION: 'messaging.protocol_version',\n\n  /**\n   * Connection string.\n   */\n  MESSAGING_URL: 'messaging.url',\n\n  /**\n   * A value used by the messaging system as an identifier for the message, represented as a string.\n   */\n  MESSAGING_MESSAGE_ID: 'messaging.message_id',\n\n  /**\n   * The [conversation ID](#conversations) identifying the conversation to which the message belongs, represented as a string. Sometimes called &#34;Correlation ID&#34;.\n   */\n  MESSAGING_CONVERSATION_ID: 'messaging.conversation_id',\n\n  /**\n   * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is unknown whether the compressed or uncompressed payload size is reported.\n   */\n  MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES: 'messaging.message_payload_size_bytes',\n\n  /**\n   * The compressed size of the message payload in bytes.\n   */\n  MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES:\n    'messaging.message_payload_compressed_size_bytes',\n\n  /**\n   * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n   */\n  MESSAGING_OPERATION: 'messaging.operation',\n\n  /**\n   * The identifier for the consumer receiving a message. For Kafka, set it to `{messaging.kafka.consumer_group} - {messaging.kafka.client_id}`, if both are present, or only `messaging.kafka.consumer_group`. For brokers, such as RabbitMQ and Artemis, set it to the `client_id` of the client consuming the message.\n   */\n  MESSAGING_CONSUMER_ID: 'messaging.consumer_id',\n\n  /**\n   * RabbitMQ message routing key.\n   */\n  MESSAGING_RABBITMQ_ROUTING_KEY: 'messaging.rabbitmq.routing_key',\n\n  /**\n   * Message keys in Kafka are used for grouping alike messages to ensure they&#39;re processed on the same partition. They differ from `messaging.message_id` in that they&#39;re not unique. If the key is `null`, the attribute MUST NOT be set.\n   *\n   * Note: If the key type is not string, it&#39;s string representation has to be supplied for the attribute. If the key has no unambiguous, canonical string form, don&#39;t include its value.\n   */\n  MESSAGING_KAFKA_MESSAGE_KEY: 'messaging.kafka.message_key',\n\n  /**\n   * Name of the Kafka Consumer Group that is handling the message. Only applies to consumers, not producers.\n   */\n  MESSAGING_KAFKA_CONSUMER_GROUP: 'messaging.kafka.consumer_group',\n\n  /**\n   * Client Id for the Consumer or Producer that is handling the message.\n   */\n  MESSAGING_KAFKA_CLIENT_ID: 'messaging.kafka.client_id',\n\n  /**\n   * Partition the message is sent to.\n   */\n  MESSAGING_KAFKA_PARTITION: 'messaging.kafka.partition',\n\n  /**\n   * A boolean that is true if the message is a tombstone.\n   */\n  MESSAGING_KAFKA_TOMBSTONE: 'messaging.kafka.tombstone',\n\n  /**\n   * A string identifying the remoting system.\n   */\n  RPC_SYSTEM: 'rpc.system',\n\n  /**\n   * The full (logical) name of the service being called, including its package name, if applicable.\n   *\n   * Note: This is the logical name of the service from the RPC interface perspective, which can be different from the name of any implementing class. The `code.namespace` attribute may be used to store the latter (despite the attribute name, it may include a class name; e.g., class with method actually executing the call on the server side, RPC client stub class on the client side).\n   */\n  RPC_SERVICE: 'rpc.service',\n\n  /**\n   * The name of the (logical) method being called, must be equal to the $method part in the span name.\n   *\n   * Note: This is the logical name of the method from the RPC interface perspective, which can be different from the name of any implementing method/function. The `code.function` attribute may be used to store the latter (e.g., method actually executing the call on the server side, RPC client stub method on the client side).\n   */\n  RPC_METHOD: 'rpc.method',\n\n  /**\n   * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n   */\n  RPC_GRPC_STATUS_CODE: 'rpc.grpc.status_code',\n\n  /**\n   * Protocol version as in `jsonrpc` property of request/response. Since JSON-RPC 1.0 does not specify this, the value can be omitted.\n   */\n  RPC_JSONRPC_VERSION: 'rpc.jsonrpc.version',\n\n  /**\n   * `id` property of request or response. Since protocol allows id to be int, string, `null` or missing (for notifications), value is expected to be cast to string for simplicity. Use empty string in case of `null` value. Omit entirely if this is a notification.\n   */\n  RPC_JSONRPC_REQUEST_ID: 'rpc.jsonrpc.request_id',\n\n  /**\n   * `error.code` property of response if it is an error response.\n   */\n  RPC_JSONRPC_ERROR_CODE: 'rpc.jsonrpc.error_code',\n\n  /**\n   * `error.message` property of response if it is an error response.\n   */\n  RPC_JSONRPC_ERROR_MESSAGE: 'rpc.jsonrpc.error_message',\n\n  /**\n   * Whether this is a received or sent message.\n   */\n  MESSAGE_TYPE: 'message.type',\n\n  /**\n   * MUST be calculated as two different counters starting from `1` one for sent messages and one for received message.\n   *\n   * Note: This way we guarantee that the values will be consistent between different implementations.\n   */\n  MESSAGE_ID: 'message.id',\n\n  /**\n   * Compressed size of the message in bytes.\n   */\n  MESSAGE_COMPRESSED_SIZE: 'message.compressed_size',\n\n  /**\n   * Uncompressed size of the message in bytes.\n   */\n  MESSAGE_UNCOMPRESSED_SIZE: 'message.uncompressed_size',\n};\n\nexport const DbSystemValues = {\n  /** Some other SQL database. Fallback only. See notes. */\n  OTHER_SQL: 'other_sql',\n  /** Microsoft SQL Server. */\n  MSSQL: 'mssql',\n  /** MySQL. */\n  MYSQL: 'mysql',\n  /** Oracle Database. */\n  ORACLE: 'oracle',\n  /** IBM Db2. */\n  DB2: 'db2',\n  /** PostgreSQL. */\n  POSTGRESQL: 'postgresql',\n  /** Amazon Redshift. */\n  REDSHIFT: 'redshift',\n  /** Apache Hive. */\n  HIVE: 'hive',\n  /** Cloudscape. */\n  CLOUDSCAPE: 'cloudscape',\n  /** HyperSQL DataBase. */\n  HSQLDB: 'hsqldb',\n  /** Progress Database. */\n  PROGRESS: 'progress',\n  /** SAP MaxDB. */\n  MAXDB: 'maxdb',\n  /** SAP HANA. */\n  HANADB: 'hanadb',\n  /** Ingres. */\n  INGRES: 'ingres',\n  /** FirstSQL. */\n  FIRSTSQL: 'firstsql',\n  /** EnterpriseDB. */\n  EDB: 'edb',\n  /** InterSystems Caché. */\n  CACHE: 'cache',\n  /** Adabas (Adaptable Database System). */\n  ADABAS: 'adabas',\n  /** Firebird. */\n  FIREBIRD: 'firebird',\n  /** Apache Derby. */\n  DERBY: 'derby',\n  /** FileMaker. */\n  FILEMAKER: 'filemaker',\n  /** Informix. */\n  INFORMIX: 'informix',\n  /** InstantDB. */\n  INSTANTDB: 'instantdb',\n  /** InterBase. */\n  INTERBASE: 'interbase',\n  /** MariaDB. */\n  MARIADB: 'mariadb',\n  /** Netezza. */\n  NETEZZA: 'netezza',\n  /** Pervasive PSQL. */\n  PERVASIVE: 'pervasive',\n  /** PointBase. */\n  POINTBASE: 'pointbase',\n  /** SQLite. */\n  SQLITE: 'sqlite',\n  /** Sybase. */\n  SYBASE: 'sybase',\n  /** Teradata. */\n  TERADATA: 'teradata',\n  /** Vertica. */\n  VERTICA: 'vertica',\n  /** H2. */\n  H2: 'h2',\n  /** ColdFusion IMQ. */\n  COLDFUSION: 'coldfusion',\n  /** Apache Cassandra. */\n  CASSANDRA: 'cassandra',\n  /** Apache HBase. */\n  HBASE: 'hbase',\n  /** MongoDB. */\n  MONGODB: 'mongodb',\n  /** Redis. */\n  REDIS: 'redis',\n  /** Couchbase. */\n  COUCHBASE: 'couchbase',\n  /** CouchDB. */\n  COUCHDB: 'couchdb',\n  /** Microsoft Azure Cosmos DB. */\n  COSMOSDB: 'cosmosdb',\n  /** Amazon DynamoDB. */\n  DYNAMODB: 'dynamodb',\n  /** Neo4j. */\n  NEO4J: 'neo4j',\n  /** Apache Geode. */\n  GEODE: 'geode',\n  /** Elasticsearch. */\n  ELASTICSEARCH: 'elasticsearch',\n  /** Memcached. */\n  MEMCACHED: 'memcached',\n  /** CockroachDB. */\n  COCKROACHDB: 'cockroachdb',\n} as const;\nexport type DbSystemValues =\n  (typeof DbSystemValues)[keyof typeof DbSystemValues];\n\nexport const DbCassandraConsistencyLevelValues = {\n  /** all. */\n  ALL: 'all',\n  /** each_quorum. */\n  EACH_QUORUM: 'each_quorum',\n  /** quorum. */\n  QUORUM: 'quorum',\n  /** local_quorum. */\n  LOCAL_QUORUM: 'local_quorum',\n  /** one. */\n  ONE: 'one',\n  /** two. */\n  TWO: 'two',\n  /** three. */\n  THREE: 'three',\n  /** local_one. */\n  LOCAL_ONE: 'local_one',\n  /** any. */\n  ANY: 'any',\n  /** serial. */\n  SERIAL: 'serial',\n  /** local_serial. */\n  LOCAL_SERIAL: 'local_serial',\n} as const;\nexport type DbCassandraConsistencyLevelValues =\n  (typeof DbCassandraConsistencyLevelValues)[keyof typeof DbCassandraConsistencyLevelValues];\n\nexport const FaasTriggerValues = {\n  /** A response to some data source operation such as a database or filesystem read/write. */\n  DATASOURCE: 'datasource',\n  /** To provide an answer to an inbound HTTP request. */\n  HTTP: 'http',\n  /** A function is set to be executed when messages are sent to a messaging system. */\n  PUBSUB: 'pubsub',\n  /** A function is scheduled to be executed regularly. */\n  TIMER: 'timer',\n  /** If none of the others apply. */\n  OTHER: 'other',\n} as const;\nexport type FaasTriggerValues =\n  (typeof FaasTriggerValues)[keyof typeof FaasTriggerValues];\n\nexport const FaasDocumentOperationValues = {\n  /** When a new object is created. */\n  INSERT: 'insert',\n  /** When an object is modified. */\n  EDIT: 'edit',\n  /** When an object is deleted. */\n  DELETE: 'delete',\n} as const;\nexport type FaasDocumentOperationValues =\n  (typeof FaasDocumentOperationValues)[keyof typeof FaasDocumentOperationValues];\n\nexport const FaasInvokedProviderValues = {\n  /** Alibaba Cloud. */\n  ALIBABA_CLOUD: 'alibaba_cloud',\n  /** Amazon Web Services. */\n  AWS: 'aws',\n  /** Microsoft Azure. */\n  AZURE: 'azure',\n  /** Google Cloud Platform. */\n  GCP: 'gcp',\n} as const;\nexport type FaasInvokedProviderValues =\n  (typeof FaasInvokedProviderValues)[keyof typeof FaasInvokedProviderValues];\n\nexport const NetTransportValues = {\n  /** ip_tcp. */\n  IP_TCP: 'ip_tcp',\n  /** ip_udp. */\n  IP_UDP: 'ip_udp',\n  /** Another IP-based protocol. */\n  IP: 'ip',\n  /** Unix Domain socket. See below. */\n  UNIX: 'unix',\n  /** Named or anonymous pipe. See note below. */\n  PIPE: 'pipe',\n  /** In-process communication. */\n  INPROC: 'inproc',\n  /** Something else (non IP-based). */\n  OTHER: 'other',\n} as const;\nexport type NetTransportValues =\n  (typeof NetTransportValues)[keyof typeof NetTransportValues];\n\nexport const NetHostConnectionTypeValues = {\n  /** wifi. */\n  WIFI: 'wifi',\n  /** wired. */\n  WIRED: 'wired',\n  /** cell. */\n  CELL: 'cell',\n  /** unavailable. */\n  UNAVAILABLE: 'unavailable',\n  /** unknown. */\n  UNKNOWN: 'unknown',\n} as const;\nexport type NetHostConnectionTypeValues =\n  (typeof NetHostConnectionTypeValues)[keyof typeof NetHostConnectionTypeValues];\n\nexport const NetHostConnectionSubtypeValues = {\n  /** GPRS. */\n  GPRS: 'gprs',\n  /** EDGE. */\n  EDGE: 'edge',\n  /** UMTS. */\n  UMTS: 'umts',\n  /** CDMA. */\n  CDMA: 'cdma',\n  /** EVDO Rel. 0. */\n  EVDO_0: 'evdo_0',\n  /** EVDO Rev. A. */\n  EVDO_A: 'evdo_a',\n  /** CDMA2000 1XRTT. */\n  CDMA2000_1XRTT: 'cdma2000_1xrtt',\n  /** HSDPA. */\n  HSDPA: 'hsdpa',\n  /** HSUPA. */\n  HSUPA: 'hsupa',\n  /** HSPA. */\n  HSPA: 'hspa',\n  /** IDEN. */\n  IDEN: 'iden',\n  /** EVDO Rev. B. */\n  EVDO_B: 'evdo_b',\n  /** LTE. */\n  LTE: 'lte',\n  /** EHRPD. */\n  EHRPD: 'ehrpd',\n  /** HSPAP. */\n  HSPAP: 'hspap',\n  /** GSM. */\n  GSM: 'gsm',\n  /** TD-SCDMA. */\n  TD_SCDMA: 'td_scdma',\n  /** IWLAN. */\n  IWLAN: 'iwlan',\n  /** 5G NR (New Radio). */\n  NR: 'nr',\n  /** 5G NRNSA (New Radio Non-Standalone). */\n  NRNSA: 'nrnsa',\n  /** LTE CA. */\n  LTE_CA: 'lte_ca',\n} as const;\nexport type NetHostConnectionSubtypeValues =\n  (typeof NetHostConnectionSubtypeValues)[keyof typeof NetHostConnectionSubtypeValues];\n\nexport const HttpFlavorValues = {\n  /** HTTP 1.0. */\n  HTTP_1_0: '1.0',\n  /** HTTP 1.1. */\n  HTTP_1_1: '1.1',\n  /** HTTP 2. */\n  HTTP_2_0: '2.0',\n  /** SPDY protocol. */\n  SPDY: 'SPDY',\n  /** QUIC protocol. */\n  QUIC: 'QUIC',\n} as const;\nexport type HttpFlavorValues =\n  (typeof HttpFlavorValues)[keyof typeof HttpFlavorValues];\n\nexport const MessagingDestinationKindValues = {\n  /** A message sent to a queue. */\n  QUEUE: 'queue',\n  /** A message sent to a topic. */\n  TOPIC: 'topic',\n} as const;\nexport type MessagingDestinationKindValues =\n  (typeof MessagingDestinationKindValues)[keyof typeof MessagingDestinationKindValues];\n\nexport const MessagingOperationValues = {\n  /** receive. */\n  RECEIVE: 'receive',\n  /** process. */\n  PROCESS: 'process',\n} as const;\nexport type MessagingOperationValues =\n  (typeof MessagingOperationValues)[keyof typeof MessagingOperationValues];\n\nexport const RpcGrpcStatusCodeValues = {\n  /** OK. */\n  OK: 0,\n  /** CANCELLED. */\n  CANCELLED: 1,\n  /** UNKNOWN. */\n  UNKNOWN: 2,\n  /** INVALID_ARGUMENT. */\n  INVALID_ARGUMENT: 3,\n  /** DEADLINE_EXCEEDED. */\n  DEADLINE_EXCEEDED: 4,\n  /** NOT_FOUND. */\n  NOT_FOUND: 5,\n  /** ALREADY_EXISTS. */\n  ALREADY_EXISTS: 6,\n  /** PERMISSION_DENIED. */\n  PERMISSION_DENIED: 7,\n  /** RESOURCE_EXHAUSTED. */\n  RESOURCE_EXHAUSTED: 8,\n  /** FAILED_PRECONDITION. */\n  FAILED_PRECONDITION: 9,\n  /** ABORTED. */\n  ABORTED: 10,\n  /** OUT_OF_RANGE. */\n  OUT_OF_RANGE: 11,\n  /** UNIMPLEMENTED. */\n  UNIMPLEMENTED: 12,\n  /** INTERNAL. */\n  INTERNAL: 13,\n  /** UNAVAILABLE. */\n  UNAVAILABLE: 14,\n  /** DATA_LOSS. */\n  DATA_LOSS: 15,\n  /** UNAUTHENTICATED. */\n  UNAUTHENTICATED: 16,\n} as const;\nexport type RpcGrpcStatusCodeValues =\n  (typeof RpcGrpcStatusCodeValues)[keyof typeof RpcGrpcStatusCodeValues];\n\nexport const MessageTypeValues = {\n  /** sent. */\n  SENT: 'SENT',\n  /** received. */\n  RECEIVED: 'RECEIVED',\n} as const;\nexport type MessageTypeValues =\n  (typeof MessageTypeValues)[keyof typeof MessageTypeValues];\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from './SemanticAttributes';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\nexport const SemanticResourceAttributes = {\n  /**\n   * Name of the cloud provider.\n   */\n  CLOUD_PROVIDER: 'cloud.provider',\n\n  /**\n   * The cloud account ID the resource is assigned to.\n   */\n  CLOUD_ACCOUNT_ID: 'cloud.account.id',\n\n  /**\n   * The geographical region the resource is running. Refer to your provider&#39;s docs to see the available regions, for example [Alibaba Cloud regions](https://www.alibabacloud.com/help/doc-detail/40654.htm), [AWS regions](https://aws.amazon.com/about-aws/global-infrastructure/regions_az/), [Azure regions](https://azure.microsoft.com/en-us/global-infrastructure/geographies/), or [Google Cloud regions](https://cloud.google.com/about/locations).\n   */\n  CLOUD_REGION: 'cloud.region',\n\n  /**\n   * Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.\n   *\n   * Note: Availability zones are called &#34;zones&#34; on Alibaba Cloud and Google Cloud.\n   */\n  CLOUD_AVAILABILITY_ZONE: 'cloud.availability_zone',\n\n  /**\n   * The cloud platform in use.\n   *\n   * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n   */\n  CLOUD_PLATFORM: 'cloud.platform',\n\n  /**\n   * The Amazon Resource Name (ARN) of an [ECS container instance](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_instances.html).\n   */\n  AWS_ECS_CONTAINER_ARN: 'aws.ecs.container.arn',\n\n  /**\n   * The ARN of an [ECS cluster](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/clusters.html).\n   */\n  AWS_ECS_CLUSTER_ARN: 'aws.ecs.cluster.arn',\n\n  /**\n   * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n   */\n  AWS_ECS_LAUNCHTYPE: 'aws.ecs.launchtype',\n\n  /**\n   * The ARN of an [ECS task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html).\n   */\n  AWS_ECS_TASK_ARN: 'aws.ecs.task.arn',\n\n  /**\n   * The task definition family this task definition is a member of.\n   */\n  AWS_ECS_TASK_FAMILY: 'aws.ecs.task.family',\n\n  /**\n   * The revision for this task definition.\n   */\n  AWS_ECS_TASK_REVISION: 'aws.ecs.task.revision',\n\n  /**\n   * The ARN of an EKS cluster.\n   */\n  AWS_EKS_CLUSTER_ARN: 'aws.eks.cluster.arn',\n\n  /**\n   * The name(s) of the AWS log group(s) an application is writing to.\n   *\n   * Note: Multiple log groups must be supported for cases like multi-container applications, where a single application has sidecar containers, and each write to their own log group.\n   */\n  AWS_LOG_GROUP_NAMES: 'aws.log.group.names',\n\n  /**\n   * The Amazon Resource Name(s) (ARN) of the AWS log group(s).\n   *\n   * Note: See the [log group ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format).\n   */\n  AWS_LOG_GROUP_ARNS: 'aws.log.group.arns',\n\n  /**\n   * The name(s) of the AWS log stream(s) an application is writing to.\n   */\n  AWS_LOG_STREAM_NAMES: 'aws.log.stream.names',\n\n  /**\n   * The ARN(s) of the AWS log stream(s).\n   *\n   * Note: See the [log stream ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format). One log group can contain several log streams, so these ARNs necessarily identify both a log group and a log stream.\n   */\n  AWS_LOG_STREAM_ARNS: 'aws.log.stream.arns',\n\n  /**\n   * Container name.\n   */\n  CONTAINER_NAME: 'container.name',\n\n  /**\n   * Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/reference/run/#container-identification). The UUID might be abbreviated.\n   */\n  CONTAINER_ID: 'container.id',\n\n  /**\n   * The container runtime managing this container.\n   */\n  CONTAINER_RUNTIME: 'container.runtime',\n\n  /**\n   * Name of the image the container was built on.\n   */\n  CONTAINER_IMAGE_NAME: 'container.image.name',\n\n  /**\n   * Container image tag.\n   */\n  CONTAINER_IMAGE_TAG: 'container.image.tag',\n\n  /**\n   * Name of the [deployment environment](https://en.wikipedia.org/wiki/Deployment_environment) (aka deployment tier).\n   */\n  DEPLOYMENT_ENVIRONMENT: 'deployment.environment',\n\n  /**\n   * A unique identifier representing the device.\n   *\n   * Note: The device identifier MUST only be defined using the values outlined below. This value is not an advertising identifier and MUST NOT be used as such. On iOS (Swift or Objective-C), this value MUST be equal to the [vendor identifier](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor). On Android (Java or Kotlin), this value MUST be equal to the Firebase Installation ID or a globally unique UUID which is persisted across sessions in your application. More information can be found [here](https://developer.android.com/training/articles/user-data-ids) on best practices and exact implementation details. Caution should be taken when storing personal data or anything which can identify a user. GDPR and data protection laws may apply, ensure you do your own due diligence.\n   */\n  DEVICE_ID: 'device.id',\n\n  /**\n   * The model identifier for the device.\n   *\n   * Note: It&#39;s recommended this value represents a machine readable version of the model identifier rather than the market or consumer-friendly name of the device.\n   */\n  DEVICE_MODEL_IDENTIFIER: 'device.model.identifier',\n\n  /**\n   * The marketing name for the device model.\n   *\n   * Note: It&#39;s recommended this value represents a human readable version of the device model rather than a machine readable alternative.\n   */\n  DEVICE_MODEL_NAME: 'device.model.name',\n\n  /**\n   * The name of the single function that this runtime instance executes.\n   *\n   * Note: This is the name of the function as configured/deployed on the FaaS platform and is usually different from the name of the callback function (which may be stored in the [`code.namespace`/`code.function`](../../trace/semantic_conventions/span-general.md#source-code-attributes) span attributes).\n   */\n  FAAS_NAME: 'faas.name',\n\n  /**\n  * The unique ID of the single function that this runtime instance executes.\n  *\n  * Note: Depending on the cloud provider, use:\n\n* **AWS Lambda:** The function [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).\nTake care not to use the &#34;invoked ARN&#34; directly but replace any\n[alias suffix](https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html) with the resolved function version, as the same runtime instance may be invokable with multiple\ndifferent aliases.\n* **GCP:** The [URI of the resource](https://cloud.google.com/iam/docs/full-resource-names)\n* **Azure:** The [Fully Qualified Resource ID](https://docs.microsoft.com/en-us/rest/api/resources/resources/get-by-id).\n\nOn some providers, it may not be possible to determine the full ID at startup,\nwhich is why this field cannot be made required. For example, on AWS the account ID\npart of the ARN is not available without calling another AWS API\nwhich may be deemed too slow for a short-running lambda function.\nAs an alternative, consider setting `faas.id` as a span attribute instead.\n  */\n  FAAS_ID: 'faas.id',\n\n  /**\n  * The immutable version of the function being executed.\n  *\n  * Note: Depending on the cloud provider and platform, use:\n\n* **AWS Lambda:** The [function version](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html)\n  (an integer represented as a decimal string).\n* **Google Cloud Run:** The [revision](https://cloud.google.com/run/docs/managing/revisions)\n  (i.e., the function name plus the revision suffix).\n* **Google Cloud Functions:** The value of the\n  [`K_REVISION` environment variable](https://cloud.google.com/functions/docs/env-var#runtime_environment_variables_set_automatically).\n* **Azure Functions:** Not applicable. Do not set this attribute.\n  */\n  FAAS_VERSION: 'faas.version',\n\n  /**\n   * The execution environment ID as a string, that will be potentially reused for other invocations to the same function/function version.\n   *\n   * Note: * **AWS Lambda:** Use the (full) log stream name.\n   */\n  FAAS_INSTANCE: 'faas.instance',\n\n  /**\n   * The amount of memory available to the serverless function in MiB.\n   *\n   * Note: It&#39;s recommended to set this attribute since e.g. too little memory can easily stop a Java AWS Lambda function from working correctly. On AWS Lambda, the environment variable `AWS_LAMBDA_FUNCTION_MEMORY_SIZE` provides this information.\n   */\n  FAAS_MAX_MEMORY: 'faas.max_memory',\n\n  /**\n   * Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider.\n   */\n  HOST_ID: 'host.id',\n\n  /**\n   * Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.\n   */\n  HOST_NAME: 'host.name',\n\n  /**\n   * Type of host. For Cloud, this must be the machine type.\n   */\n  HOST_TYPE: 'host.type',\n\n  /**\n   * The CPU architecture the host system is running on.\n   */\n  HOST_ARCH: 'host.arch',\n\n  /**\n   * Name of the VM image or OS install the host was instantiated from.\n   */\n  HOST_IMAGE_NAME: 'host.image.name',\n\n  /**\n   * VM image ID. For Cloud, this value is from the provider.\n   */\n  HOST_IMAGE_ID: 'host.image.id',\n\n  /**\n   * The version string of the VM image as defined in [Version SpanAttributes](README.md#version-attributes).\n   */\n  HOST_IMAGE_VERSION: 'host.image.version',\n\n  /**\n   * The name of the cluster.\n   */\n  K8S_CLUSTER_NAME: 'k8s.cluster.name',\n\n  /**\n   * The name of the Node.\n   */\n  K8S_NODE_NAME: 'k8s.node.name',\n\n  /**\n   * The UID of the Node.\n   */\n  K8S_NODE_UID: 'k8s.node.uid',\n\n  /**\n   * The name of the namespace that the pod is running in.\n   */\n  K8S_NAMESPACE_NAME: 'k8s.namespace.name',\n\n  /**\n   * The UID of the Pod.\n   */\n  K8S_POD_UID: 'k8s.pod.uid',\n\n  /**\n   * The name of the Pod.\n   */\n  K8S_POD_NAME: 'k8s.pod.name',\n\n  /**\n   * The name of the Container in a Pod template.\n   */\n  K8S_CONTAINER_NAME: 'k8s.container.name',\n\n  /**\n   * The UID of the ReplicaSet.\n   */\n  K8S_REPLICASET_UID: 'k8s.replicaset.uid',\n\n  /**\n   * The name of the ReplicaSet.\n   */\n  K8S_REPLICASET_NAME: 'k8s.replicaset.name',\n\n  /**\n   * The UID of the Deployment.\n   */\n  K8S_DEPLOYMENT_UID: 'k8s.deployment.uid',\n\n  /**\n   * The name of the Deployment.\n   */\n  K8S_DEPLOYMENT_NAME: 'k8s.deployment.name',\n\n  /**\n   * The UID of the StatefulSet.\n   */\n  K8S_STATEFULSET_UID: 'k8s.statefulset.uid',\n\n  /**\n   * The name of the StatefulSet.\n   */\n  K8S_STATEFULSET_NAME: 'k8s.statefulset.name',\n\n  /**\n   * The UID of the DaemonSet.\n   */\n  K8S_DAEMONSET_UID: 'k8s.daemonset.uid',\n\n  /**\n   * The name of the DaemonSet.\n   */\n  K8S_DAEMONSET_NAME: 'k8s.daemonset.name',\n\n  /**\n   * The UID of the Job.\n   */\n  K8S_JOB_UID: 'k8s.job.uid',\n\n  /**\n   * The name of the Job.\n   */\n  K8S_JOB_NAME: 'k8s.job.name',\n\n  /**\n   * The UID of the CronJob.\n   */\n  K8S_CRONJOB_UID: 'k8s.cronjob.uid',\n\n  /**\n   * The name of the CronJob.\n   */\n  K8S_CRONJOB_NAME: 'k8s.cronjob.name',\n\n  /**\n   * The operating system type.\n   */\n  OS_TYPE: 'os.type',\n\n  /**\n   * Human readable (not intended to be parsed) OS version information, like e.g. reported by `ver` or `lsb_release -a` commands.\n   */\n  OS_DESCRIPTION: 'os.description',\n\n  /**\n   * Human readable operating system name.\n   */\n  OS_NAME: 'os.name',\n\n  /**\n   * The version string of the operating system as defined in [Version SpanAttributes](../../resource/semantic_conventions/README.md#version-attributes).\n   */\n  OS_VERSION: 'os.version',\n\n  /**\n   * Process identifier (PID).\n   */\n  PROCESS_PID: 'process.pid',\n\n  /**\n   * The name of the process executable. On Linux based systems, can be set to the `Name` in `proc/[pid]/status`. On Windows, can be set to the base name of `GetProcessImageFileNameW`.\n   */\n  PROCESS_EXECUTABLE_NAME: 'process.executable.name',\n\n  /**\n   * The full path to the process executable. On Linux based systems, can be set to the target of `proc/[pid]/exe`. On Windows, can be set to the result of `GetProcessImageFileNameW`.\n   */\n  PROCESS_EXECUTABLE_PATH: 'process.executable.path',\n\n  /**\n   * The command used to launch the process (i.e. the command name). On Linux based systems, can be set to the zeroth string in `proc/[pid]/cmdline`. On Windows, can be set to the first parameter extracted from `GetCommandLineW`.\n   */\n  PROCESS_COMMAND: 'process.command',\n\n  /**\n   * The full command used to launch the process as a single string representing the full command. On Windows, can be set to the result of `GetCommandLineW`. Do not set this if you have to assemble it just for monitoring; use `process.command_args` instead.\n   */\n  PROCESS_COMMAND_LINE: 'process.command_line',\n\n  /**\n   * All the command arguments (including the command/executable itself) as received by the process. On Linux-based systems (and some other Unixoid systems supporting procfs), can be set according to the list of null-delimited strings extracted from `proc/[pid]/cmdline`. For libc-based executables, this would be the full argv vector passed to `main`.\n   */\n  PROCESS_COMMAND_ARGS: 'process.command_args',\n\n  /**\n   * The username of the user that owns the process.\n   */\n  PROCESS_OWNER: 'process.owner',\n\n  /**\n   * The name of the runtime of this process. For compiled native binaries, this SHOULD be the name of the compiler.\n   */\n  PROCESS_RUNTIME_NAME: 'process.runtime.name',\n\n  /**\n   * The version of the runtime of this process, as returned by the runtime without modification.\n   */\n  PROCESS_RUNTIME_VERSION: 'process.runtime.version',\n\n  /**\n   * An additional description about the runtime of the process, for example a specific vendor customization of the runtime environment.\n   */\n  PROCESS_RUNTIME_DESCRIPTION: 'process.runtime.description',\n\n  /**\n   * Logical name of the service.\n   *\n   * Note: MUST be the same for all instances of horizontally scaled services. If the value was not specified, SDKs MUST fallback to `unknown_service:` concatenated with [`process.executable.name`](process.md#process), e.g. `unknown_service:bash`. If `process.executable.name` is not available, the value MUST be set to `unknown_service`.\n   */\n  SERVICE_NAME: 'service.name',\n\n  /**\n   * A namespace for `service.name`.\n   *\n   * Note: A string value having a meaning that helps to distinguish a group of services, for example the team name that owns a group of services. `service.name` is expected to be unique within the same namespace. If `service.namespace` is not specified in the Resource then `service.name` is expected to be unique for all services that have no explicit namespace defined (so the empty/unspecified namespace is simply one more valid namespace). Zero-length namespace string is assumed equal to unspecified namespace.\n   */\n  SERVICE_NAMESPACE: 'service.namespace',\n\n  /**\n   * The string ID of the service instance.\n   *\n   * Note: MUST be unique for each instance of the same `service.namespace,service.name` pair (in other words `service.namespace,service.name,service.instance.id` triplet MUST be globally unique). The ID helps to distinguish instances of the same service that exist at the same time (e.g. instances of a horizontally scaled service). It is preferable for the ID to be persistent and stay the same for the lifetime of the service instance, however it is acceptable that the ID is ephemeral and changes during important lifetime events for the service (e.g. service restarts). If the service has no inherent unique ID that can be used as the value of this attribute it is recommended to generate a random Version 1 or Version 4 RFC 4122 UUID (services aiming for reproducible UUIDs may also use Version 5, see RFC 4122 for more recommendations).\n   */\n  SERVICE_INSTANCE_ID: 'service.instance.id',\n\n  /**\n   * The version string of the service API or implementation.\n   */\n  SERVICE_VERSION: 'service.version',\n\n  /**\n   * The name of the telemetry SDK as defined above.\n   */\n  TELEMETRY_SDK_NAME: 'telemetry.sdk.name',\n\n  /**\n   * The language of the telemetry SDK.\n   */\n  TELEMETRY_SDK_LANGUAGE: 'telemetry.sdk.language',\n\n  /**\n   * The version string of the telemetry SDK.\n   */\n  TELEMETRY_SDK_VERSION: 'telemetry.sdk.version',\n\n  /**\n   * The version string of the auto instrumentation agent, if used.\n   */\n  TELEMETRY_AUTO_VERSION: 'telemetry.auto.version',\n\n  /**\n   * The name of the web engine.\n   */\n  WEBENGINE_NAME: 'webengine.name',\n\n  /**\n   * The version of the web engine.\n   */\n  WEBENGINE_VERSION: 'webengine.version',\n\n  /**\n   * Additional description of the web engine (e.g. detailed version and edition information).\n   */\n  WEBENGINE_DESCRIPTION: 'webengine.description',\n};\n\nexport const CloudProviderValues = {\n  /** Alibaba Cloud. */\n  ALIBABA_CLOUD: 'alibaba_cloud',\n  /** Amazon Web Services. */\n  AWS: 'aws',\n  /** Microsoft Azure. */\n  AZURE: 'azure',\n  /** Google Cloud Platform. */\n  GCP: 'gcp',\n} as const;\nexport type CloudProviderValues =\n  (typeof CloudProviderValues)[keyof typeof CloudProviderValues];\n\nexport const CloudPlatformValues = {\n  /** Alibaba Cloud Elastic Compute Service. */\n  ALIBABA_CLOUD_ECS: 'alibaba_cloud_ecs',\n  /** Alibaba Cloud Function Compute. */\n  ALIBABA_CLOUD_FC: 'alibaba_cloud_fc',\n  /** AWS Elastic Compute Cloud. */\n  AWS_EC2: 'aws_ec2',\n  /** AWS Elastic Container Service. */\n  AWS_ECS: 'aws_ecs',\n  /** AWS Elastic Kubernetes Service. */\n  AWS_EKS: 'aws_eks',\n  /** AWS Lambda. */\n  AWS_LAMBDA: 'aws_lambda',\n  /** AWS Elastic Beanstalk. */\n  AWS_ELASTIC_BEANSTALK: 'aws_elastic_beanstalk',\n  /** Azure Virtual Machines. */\n  AZURE_VM: 'azure_vm',\n  /** Azure Container Instances. */\n  AZURE_CONTAINER_INSTANCES: 'azure_container_instances',\n  /** Azure Kubernetes Service. */\n  AZURE_AKS: 'azure_aks',\n  /** Azure Functions. */\n  AZURE_FUNCTIONS: 'azure_functions',\n  /** Azure App Service. */\n  AZURE_APP_SERVICE: 'azure_app_service',\n  /** Google Cloud Compute Engine (GCE). */\n  GCP_COMPUTE_ENGINE: 'gcp_compute_engine',\n  /** Google Cloud Run. */\n  GCP_CLOUD_RUN: 'gcp_cloud_run',\n  /** Google Cloud Kubernetes Engine (GKE). */\n  GCP_KUBERNETES_ENGINE: 'gcp_kubernetes_engine',\n  /** Google Cloud Functions (GCF). */\n  GCP_CLOUD_FUNCTIONS: 'gcp_cloud_functions',\n  /** Google Cloud App Engine (GAE). */\n  GCP_APP_ENGINE: 'gcp_app_engine',\n} as const;\nexport type CloudPlatformValues =\n  (typeof CloudPlatformValues)[keyof typeof CloudPlatformValues];\n\nexport const AwsEcsLaunchtypeValues = {\n  /** ec2. */\n  EC2: 'ec2',\n  /** fargate. */\n  FARGATE: 'fargate',\n} as const;\nexport type AwsEcsLaunchtypeValues =\n  (typeof AwsEcsLaunchtypeValues)[keyof typeof AwsEcsLaunchtypeValues];\n\nexport const HostArchValues = {\n  /** AMD64. */\n  AMD64: 'amd64',\n  /** ARM32. */\n  ARM32: 'arm32',\n  /** ARM64. */\n  ARM64: 'arm64',\n  /** Itanium. */\n  IA64: 'ia64',\n  /** 32-bit PowerPC. */\n  PPC32: 'ppc32',\n  /** 64-bit PowerPC. */\n  PPC64: 'ppc64',\n  /** 32-bit x86. */\n  X86: 'x86',\n} as const;\nexport type HostArchValues =\n  (typeof HostArchValues)[keyof typeof HostArchValues];\n\nexport const OsTypeValues = {\n  /** Microsoft Windows. */\n  WINDOWS: 'windows',\n  /** Linux. */\n  LINUX: 'linux',\n  /** Apple Darwin. */\n  DARWIN: 'darwin',\n  /** FreeBSD. */\n  FREEBSD: 'freebsd',\n  /** NetBSD. */\n  NETBSD: 'netbsd',\n  /** OpenBSD. */\n  OPENBSD: 'openbsd',\n  /** DragonFly BSD. */\n  DRAGONFLYBSD: 'dragonflybsd',\n  /** HP-UX (Hewlett Packard Unix). */\n  HPUX: 'hpux',\n  /** AIX (Advanced Interactive eXecutive). */\n  AIX: 'aix',\n  /** Oracle Solaris. */\n  SOLARIS: 'solaris',\n  /** IBM z/OS. */\n  Z_OS: 'z_os',\n} as const;\nexport type OsTypeValues = (typeof OsTypeValues)[keyof typeof OsTypeValues];\n\nexport const TelemetrySdkLanguageValues = {\n  /** cpp. */\n  CPP: 'cpp',\n  /** dotnet. */\n  DOTNET: 'dotnet',\n  /** erlang. */\n  ERLANG: 'erlang',\n  /** go. */\n  GO: 'go',\n  /** java. */\n  JAVA: 'java',\n  /** nodejs. */\n  NODEJS: 'nodejs',\n  /** php. */\n  PHP: 'php',\n  /** python. */\n  PYTHON: 'python',\n  /** ruby. */\n  RUBY: 'ruby',\n  /** webjs. */\n  WEBJS: 'webjs',\n} as const;\nexport type TelemetrySdkLanguageValues =\n  (typeof TelemetrySdkLanguageValues)[keyof typeof TelemetrySdkLanguageValues];\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from './SemanticResourceAttributes';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './trace';\nexport * from './resource';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VERSION } from '../../version';\nimport {\n  TelemetrySdkLanguageValues,\n  SemanticResourceAttributes,\n} from '@opentelemetry/semantic-conventions';\n\n/** Constants describing the SDK in use */\nexport const SDK_INFO = {\n  [SemanticResourceAttributes.TELEMETRY_SDK_NAME]: 'opentelemetry',\n  [SemanticResourceAttributes.PROCESS_RUNTIME_NAME]: 'browser',\n  [SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE]:\n    TelemetrySdkLanguageValues.WEBJS,\n  [SemanticResourceAttributes.TELEMETRY_SDK_VERSION]: VERSION,\n};\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function unrefTimer(_timer: number): void {}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './environment';\nexport * from './globalThis';\nexport * from './hex-to-base64';\nexport * from './RandomIdGenerator';\nexport * from './performance';\nexport * from './sdk-info';\nexport * from './timer-util';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { otperformance as performance } from '../platform';\nimport { TimeOriginLegacy } from './types';\n\nconst NANOSECOND_DIGITS = 9;\nconst NANOSECOND_DIGITS_IN_MILLIS = 6;\nconst MILLISECONDS_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS_IN_MILLIS);\nconst SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n\n/**\n * Converts a number of milliseconds from epoch to HrTime([seconds, remainder in nanoseconds]).\n * @param epochMillis\n */\nexport function millisToHrTime(epochMillis: number): api.HrTime {\n  const epochSeconds = epochMillis / 1000;\n  // Decimals only.\n  const seconds = Math.trunc(epochSeconds);\n  // Round sub-nanosecond accuracy to nanosecond.\n  const nanos = Math.round((epochMillis % 1000) * MILLISECONDS_TO_NANOSECONDS);\n  return [seconds, nanos];\n}\n\nexport function getTimeOrigin(): number {\n  let timeOrigin = performance.timeOrigin;\n  if (typeof timeOrigin !== 'number') {\n    const perf: TimeOriginLegacy = performance as unknown as TimeOriginLegacy;\n    timeOrigin = perf.timing && perf.timing.fetchStart;\n  }\n  return timeOrigin;\n}\n\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nexport function hrTime(performanceNow?: number): api.HrTime {\n  const timeOrigin = millisToHrTime(getTimeOrigin());\n  const now = millisToHrTime(\n    typeof performanceNow === 'number' ? performanceNow : performance.now()\n  );\n\n  return addHrTimes(timeOrigin, now);\n}\n\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nexport function timeInputToHrTime(time: api.TimeInput): api.HrTime {\n  // process.hrtime\n  if (isTimeInputHrTime(time)) {\n    return time as api.HrTime;\n  } else if (typeof time === 'number') {\n    // Must be a performance.now() if it's smaller than process start time.\n    if (time < getTimeOrigin()) {\n      return hrTime(time);\n    } else {\n      // epoch milliseconds or performance.timeOrigin\n      return millisToHrTime(time);\n    }\n  } else if (time instanceof Date) {\n    return millisToHrTime(time.getTime());\n  } else {\n    throw TypeError('Invalid input type');\n  }\n}\n\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nexport function hrTimeDuration(\n  startTime: api.HrTime,\n  endTime: api.HrTime\n): api.HrTime {\n  let seconds = endTime[0] - startTime[0];\n  let nanos = endTime[1] - startTime[1];\n\n  // overflow\n  if (nanos < 0) {\n    seconds -= 1;\n    // negate\n    nanos += SECOND_TO_NANOSECONDS;\n  }\n\n  return [seconds, nanos];\n}\n\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param time\n */\nexport function hrTimeToTimeStamp(time: api.HrTime): string {\n  const precision = NANOSECOND_DIGITS;\n  const tmp = `${'0'.repeat(precision)}${time[1]}Z`;\n  const nanoString = tmp.substr(tmp.length - precision - 1);\n  const date = new Date(time[0] * 1000).toISOString();\n  return date.replace('000Z', nanoString);\n}\n\n/**\n * Convert hrTime to nanoseconds.\n * @param time\n */\nexport function hrTimeToNanoseconds(time: api.HrTime): number {\n  return time[0] * SECOND_TO_NANOSECONDS + time[1];\n}\n\n/**\n * Convert hrTime to milliseconds.\n * @param time\n */\nexport function hrTimeToMilliseconds(time: api.HrTime): number {\n  return time[0] * 1e3 + time[1] / 1e6;\n}\n\n/**\n * Convert hrTime to microseconds.\n * @param time\n */\nexport function hrTimeToMicroseconds(time: api.HrTime): number {\n  return time[0] * 1e6 + time[1] / 1e3;\n}\n\n/**\n * check if time is HrTime\n * @param value\n */\nexport function isTimeInputHrTime(value: unknown): value is api.HrTime {\n  return (\n    Array.isArray(value) &&\n    value.length === 2 &&\n    typeof value[0] === 'number' &&\n    typeof value[1] === 'number'\n  );\n}\n\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nexport function isTimeInput(\n  value: unknown\n): value is api.HrTime | number | Date {\n  return (\n    isTimeInputHrTime(value) ||\n    typeof value === 'number' ||\n    value instanceof Date\n  );\n}\n\n/**\n * Given 2 HrTime formatted times, return their sum as an HrTime.\n */\nexport function addHrTimes(time1: api.HrTime, time2: api.HrTime): api.HrTime {\n  const out = [time1[0] + time2[0], time1[1] + time2[1]] as api.HrTime;\n\n  // Nanoseconds\n  if (out[1] >= SECOND_TO_NANOSECONDS) {\n    out[1] -= SECOND_TO_NANOSECONDS;\n    out[0] += 1;\n  }\n\n  return out;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface ExportResult {\n  code: ExportResultCode;\n  error?: Error;\n}\n\nexport enum ExportResultCode {\n  SUCCESS,\n  FAILED,\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  TextMapGetter,\n  TextMapPropagator,\n  diag,\n  TextMapSetter,\n} from '@opentelemetry/api';\n\n/** Configuration object for composite propagator */\nexport interface CompositePropagatorConfig {\n  /**\n   * List of propagators to run. Propagators run in the\n   * list order. If a propagator later in the list writes the same context\n   * key as a propagator earlier in the list, the later on will \"win\".\n   */\n  propagators?: TextMapPropagator[];\n}\n\n/** Combines multiple propagators into a single propagator. */\nexport class CompositePropagator implements TextMapPropagator {\n  private readonly _propagators: TextMapPropagator[];\n  private readonly _fields: string[];\n\n  /**\n   * Construct a composite propagator from a list of propagators.\n   *\n   * @param [config] Configuration object for composite propagator\n   */\n  constructor(config: CompositePropagatorConfig = {}) {\n    this._propagators = config.propagators ?? [];\n\n    this._fields = Array.from(\n      new Set(\n        this._propagators\n          // older propagators may not have fields function, null check to be sure\n          .map(p => (typeof p.fields === 'function' ? p.fields() : []))\n          .reduce((x, y) => x.concat(y), [])\n      )\n    );\n  }\n\n  /**\n   * Run each of the configured propagators with the given context and carrier.\n   * Propagators are run in the order they are configured, so if multiple\n   * propagators write the same carrier key, the propagator later in the list\n   * will \"win\".\n   *\n   * @param context Context to inject\n   * @param carrier Carrier into which context will be injected\n   */\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    for (const propagator of this._propagators) {\n      try {\n        propagator.inject(context, carrier, setter);\n      } catch (err) {\n        diag.warn(\n          `Failed to inject with ${propagator.constructor.name}. Err: ${err.message}`\n        );\n      }\n    }\n  }\n\n  /**\n   * Run each of the configured propagators with the given context and carrier.\n   * Propagators are run in the order they are configured, so if multiple\n   * propagators write the same context key, the propagator later in the list\n   * will \"win\".\n   *\n   * @param context Context to add values to\n   * @param carrier Carrier from which to extract context\n   */\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    return this._propagators.reduce((ctx, propagator) => {\n      try {\n        return propagator.extract(ctx, carrier, getter);\n      } catch (err) {\n        diag.warn(\n          `Failed to inject with ${propagator.constructor.name}. Err: ${err.message}`\n        );\n      }\n      return ctx;\n    }, context);\n  }\n\n  fields(): string[] {\n    // return a new array so our fields cannot be modified\n    return this._fields.slice();\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nconst VALID_KEY = `[a-z]${VALID_KEY_CHAR_RANGE}{0,255}`;\nconst VALID_VENDOR_KEY = `[a-z0-9]${VALID_KEY_CHAR_RANGE}{0,240}@[a-z]${VALID_KEY_CHAR_RANGE}{0,13}`;\nconst VALID_KEY_REGEX = new RegExp(`^(?:${VALID_KEY}|${VALID_VENDOR_KEY})$`);\nconst VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nconst INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nexport function validateKey(key: string): boolean {\n  return VALID_KEY_REGEX.test(key);\n}\n\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nexport function validateValue(value: string): boolean {\n  return (\n    VALID_VALUE_BASE_REGEX.test(value) &&\n    !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value)\n  );\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { validateKey, validateValue } from '../internal/validators';\n\nconst MAX_TRACE_STATE_ITEMS = 32;\nconst MAX_TRACE_STATE_LEN = 512;\nconst LIST_MEMBERS_SEPARATOR = ',';\nconst LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nexport class TraceState implements api.TraceState {\n  private _internalState: Map<string, string> = new Map();\n\n  constructor(rawTraceState?: string) {\n    if (rawTraceState) this._parse(rawTraceState);\n  }\n\n  set(key: string, value: string): TraceState {\n    // TODO: Benchmark the different approaches(map vs list) and\n    // use the faster one.\n    const traceState = this._clone();\n    if (traceState._internalState.has(key)) {\n      traceState._internalState.delete(key);\n    }\n    traceState._internalState.set(key, value);\n    return traceState;\n  }\n\n  unset(key: string): TraceState {\n    const traceState = this._clone();\n    traceState._internalState.delete(key);\n    return traceState;\n  }\n\n  get(key: string): string | undefined {\n    return this._internalState.get(key);\n  }\n\n  serialize(): string {\n    return this._keys()\n      .reduce((agg: string[], key) => {\n        agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + this.get(key));\n        return agg;\n      }, [])\n      .join(LIST_MEMBERS_SEPARATOR);\n  }\n\n  private _parse(rawTraceState: string) {\n    if (rawTraceState.length > MAX_TRACE_STATE_LEN) return;\n    this._internalState = rawTraceState\n      .split(LIST_MEMBERS_SEPARATOR)\n      .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n      .reduce((agg: Map<string, string>, part: string) => {\n        const listMember = part.trim(); // Optional Whitespace (OWS) handling\n        const i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n        if (i !== -1) {\n          const key = listMember.slice(0, i);\n          const value = listMember.slice(i + 1, part.length);\n          if (validateKey(key) && validateValue(value)) {\n            agg.set(key, value);\n          } else {\n            // TODO: Consider to add warning log\n          }\n        }\n        return agg;\n      }, new Map());\n\n    // Because of the reverse() requirement, trunc must be done after map is created\n    if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n      this._internalState = new Map(\n        Array.from(this._internalState.entries())\n          .reverse() // Use reverse same as original tracestate parse chain\n          .slice(0, MAX_TRACE_STATE_ITEMS)\n      );\n    }\n  }\n\n  private _keys(): string[] {\n    return Array.from(this._internalState.keys()).reverse();\n  }\n\n  private _clone(): TraceState {\n    const traceState = new TraceState();\n    traceState._internalState = new Map(this._internalState);\n    return traceState;\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  isSpanContextValid,\n  SpanContext,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n  trace,\n  TraceFlags,\n} from '@opentelemetry/api';\nimport { isTracingSuppressed } from './suppress-tracing';\nimport { TraceState } from './TraceState';\n\nexport const TRACE_PARENT_HEADER = 'traceparent';\nexport const TRACE_STATE_HEADER = 'tracestate';\n\nconst VERSION = '00';\nconst VERSION_PART = '(?!ff)[\\\\da-f]{2}';\nconst TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\nconst PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\nconst FLAGS_PART = '[\\\\da-f]{2}';\nconst TRACE_PARENT_REGEX = new RegExp(\n  `^\\\\s?(${VERSION_PART})-(${TRACE_ID_PART})-(${PARENT_ID_PART})-(${FLAGS_PART})(-.*)?\\\\s?$`\n);\n\n/**\n * Parses information from the [traceparent] span tag and converts it into {@link SpanContext}\n * @param traceParent - A meta property that comes from server.\n *     It should be dynamically generated server side to have the server's request trace Id,\n *     a parent span Id that was set on the server's request span,\n *     and the trace flags to indicate the server's sampling decision\n *     (01 = sampled, 00 = not sampled).\n *     for example: '{version}-{traceId}-{spanId}-{sampleDecision}'\n *     For more information see {@link https://www.w3.org/TR/trace-context/}\n */\nexport function parseTraceParent(traceParent: string): SpanContext | null {\n  const match = TRACE_PARENT_REGEX.exec(traceParent);\n  if (!match) return null;\n\n  // According to the specification the implementation should be compatible\n  // with future versions. If there are more parts, we only reject it if it's using version 00\n  // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n  if (match[1] === '00' && match[5]) return null;\n\n  return {\n    traceId: match[2],\n    spanId: match[3],\n    traceFlags: parseInt(match[4], 16),\n  };\n}\n\n/**\n * Propagates {@link SpanContext} through Trace Context format propagation.\n *\n * Based on the Trace Context specification:\n * https://www.w3.org/TR/trace-context/\n */\nexport class W3CTraceContextPropagator implements TextMapPropagator {\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    const spanContext = trace.getSpanContext(context);\n    if (\n      !spanContext ||\n      isTracingSuppressed(context) ||\n      !isSpanContextValid(spanContext)\n    )\n      return;\n\n    const traceParent = `${VERSION}-${spanContext.traceId}-${\n      spanContext.spanId\n    }-0${Number(spanContext.traceFlags || TraceFlags.NONE).toString(16)}`;\n\n    setter.set(carrier, TRACE_PARENT_HEADER, traceParent);\n    if (spanContext.traceState) {\n      setter.set(\n        carrier,\n        TRACE_STATE_HEADER,\n        spanContext.traceState.serialize()\n      );\n    }\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const traceParentHeader = getter.get(carrier, TRACE_PARENT_HEADER);\n    if (!traceParentHeader) return context;\n    const traceParent = Array.isArray(traceParentHeader)\n      ? traceParentHeader[0]\n      : traceParentHeader;\n    if (typeof traceParent !== 'string') return context;\n    const spanContext = parseTraceParent(traceParent);\n    if (!spanContext) return context;\n\n    spanContext.isRemote = true;\n\n    const traceStateHeader = getter.get(carrier, TRACE_STATE_HEADER);\n    if (traceStateHeader) {\n      // If more than one `tracestate` header is found, we merge them into a\n      // single header.\n      const state = Array.isArray(traceStateHeader)\n        ? traceStateHeader.join(',')\n        : traceStateHeader;\n      spanContext.traceState = new TraceState(\n        typeof state === 'string' ? state : undefined\n      );\n    }\n    return trace.setSpanContext(context, spanContext);\n  }\n\n  fields(): string[] {\n    return [TRACE_PARENT_HEADER, TRACE_STATE_HEADER];\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, createContextKey, Span } from '@opentelemetry/api';\n\nconst RPC_METADATA_KEY = createContextKey(\n  'OpenTelemetry SDK Context Key RPC_METADATA'\n);\n\nexport enum RPCType {\n  HTTP = 'http',\n}\n\ntype HTTPMetadata = {\n  type: RPCType.HTTP;\n  route?: string;\n  span: Span;\n};\n\n/**\n * Allows for future rpc metadata to be used with this mechanism\n */\nexport type RPCMetadata = HTTPMetadata;\n\nexport function setRPCMetadata(context: Context, meta: RPCMetadata): Context {\n  return context.setValue(RPC_METADATA_KEY, meta);\n}\n\nexport function deleteRPCMetadata(context: Context): Context {\n  return context.deleteValue(RPC_METADATA_KEY);\n}\n\nexport function getRPCMetadata(context: Context): RPCMetadata | undefined {\n  return context.getValue(RPC_METADATA_KEY) as RPCMetadata | undefined;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Sampler, SamplingDecision, SamplingResult } from '@opentelemetry/api';\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples no traces.\n */\nexport class AlwaysOffSampler implements Sampler {\n  shouldSample(): SamplingResult {\n    return {\n      decision: SamplingDecision.NOT_RECORD,\n    };\n  }\n\n  toString(): string {\n    return 'AlwaysOffSampler';\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Sampler, SamplingDecision, SamplingResult } from '@opentelemetry/api';\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples all traces.\n */\nexport class AlwaysOnSampler implements Sampler {\n  shouldSample(): SamplingResult {\n    return {\n      decision: SamplingDecision.RECORD_AND_SAMPLED,\n    };\n  }\n\n  toString(): string {\n    return 'AlwaysOnSampler';\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  isSpanContextValid,\n  Link,\n  Sampler,\n  SamplingResult,\n  SpanAttributes,\n  SpanKind,\n  TraceFlags,\n  trace,\n} from '@opentelemetry/api';\nimport { globalErrorHandler } from '../../common/global-error-handler';\nimport { AlwaysOffSampler } from './AlwaysOffSampler';\nimport { AlwaysOnSampler } from './AlwaysOnSampler';\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * A composite sampler that either respects the parent span's sampling decision\n * or delegates to `delegateSampler` for root spans.\n */\nexport class ParentBasedSampler implements Sampler {\n  private _root: Sampler;\n  private _remoteParentSampled: Sampler;\n  private _remoteParentNotSampled: Sampler;\n  private _localParentSampled: Sampler;\n  private _localParentNotSampled: Sampler;\n\n  constructor(config: ParentBasedSamplerConfig) {\n    this._root = config.root;\n\n    if (!this._root) {\n      globalErrorHandler(\n        new Error('ParentBasedSampler must have a root sampler configured')\n      );\n      this._root = new AlwaysOnSampler();\n    }\n\n    this._remoteParentSampled =\n      config.remoteParentSampled ?? new AlwaysOnSampler();\n    this._remoteParentNotSampled =\n      config.remoteParentNotSampled ?? new AlwaysOffSampler();\n    this._localParentSampled =\n      config.localParentSampled ?? new AlwaysOnSampler();\n    this._localParentNotSampled =\n      config.localParentNotSampled ?? new AlwaysOffSampler();\n  }\n\n  shouldSample(\n    context: Context,\n    traceId: string,\n    spanName: string,\n    spanKind: SpanKind,\n    attributes: SpanAttributes,\n    links: Link[]\n  ): SamplingResult {\n    const parentContext = trace.getSpanContext(context);\n\n    if (!parentContext || !isSpanContextValid(parentContext)) {\n      return this._root.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    if (parentContext.isRemote) {\n      if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n        return this._remoteParentSampled.shouldSample(\n          context,\n          traceId,\n          spanName,\n          spanKind,\n          attributes,\n          links\n        );\n      }\n      return this._remoteParentNotSampled.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n      return this._localParentSampled.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    return this._localParentNotSampled.shouldSample(\n      context,\n      traceId,\n      spanName,\n      spanKind,\n      attributes,\n      links\n    );\n  }\n\n  toString(): string {\n    return `ParentBased{root=${this._root.toString()}, remoteParentSampled=${this._remoteParentSampled.toString()}, remoteParentNotSampled=${this._remoteParentNotSampled.toString()}, localParentSampled=${this._localParentSampled.toString()}, localParentNotSampled=${this._localParentNotSampled.toString()}}`;\n  }\n}\n\ninterface ParentBasedSamplerConfig {\n  /** Sampler called for spans with no parent */\n  root: Sampler;\n  /** Sampler called for spans with a remote parent which was sampled. Default AlwaysOn */\n  remoteParentSampled?: Sampler;\n  /** Sampler called for spans with a remote parent which was not sampled. Default AlwaysOff */\n  remoteParentNotSampled?: Sampler;\n  /** Sampler called for spans with a local parent which was sampled. Default AlwaysOn */\n  localParentSampled?: Sampler;\n  /** Sampler called for spans with a local parent which was not sampled. Default AlwaysOff */\n  localParentNotSampled?: Sampler;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Sampler,\n  SamplingDecision,\n  SamplingResult,\n  isValidTraceId,\n} from '@opentelemetry/api';\n\n/**\n * @deprecated Use the one defined in @opentelemetry/sdk-trace-base instead.\n * Sampler that samples a given fraction of traces based of trace id deterministically.\n */\nexport class TraceIdRatioBasedSampler implements Sampler {\n  private _upperBound: number;\n\n  constructor(private readonly _ratio: number = 0) {\n    this._ratio = this._normalize(_ratio);\n    this._upperBound = Math.floor(this._ratio * 0xffffffff);\n  }\n\n  shouldSample(context: unknown, traceId: string): SamplingResult {\n    return {\n      decision:\n        isValidTraceId(traceId) && this._accumulate(traceId) < this._upperBound\n          ? SamplingDecision.RECORD_AND_SAMPLED\n          : SamplingDecision.NOT_RECORD,\n    };\n  }\n\n  toString(): string {\n    return `TraceIdRatioBased{${this._ratio}}`;\n  }\n\n  private _normalize(ratio: number): number {\n    if (typeof ratio !== 'number' || isNaN(ratio)) return 0;\n    return ratio >= 1 ? 1 : ratio <= 0 ? 0 : ratio;\n  }\n\n  private _accumulate(traceId: string): number {\n    let accumulation = 0;\n    for (let i = 0; i < traceId.length / 8; i++) {\n      const pos = i * 8;\n      const part = parseInt(traceId.slice(pos, pos + 8), 16);\n      accumulation = (accumulation ^ part) >>> 0;\n    }\n    return accumulation;\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * based on lodash in order to support esm builds without esModuleInterop.\n * lodash is using MIT License.\n **/\n\nconst objectTag = '[object Object]';\nconst nullTag = '[object Null]';\nconst undefinedTag = '[object Undefined]';\nconst funcProto = Function.prototype;\nconst funcToString = funcProto.toString;\nconst objectCtorString = funcToString.call(Object);\nconst getPrototype = overArg(Object.getPrototypeOf, Object);\nconst objectProto = Object.prototype;\nconst hasOwnProperty = objectProto.hasOwnProperty;\nconst symToStringTag = Symbol ? Symbol.toStringTag : undefined;\nconst nativeObjectToString = objectProto.toString;\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func: Function, transform: any): any {\n  return function (arg: any) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nexport function isPlainObject(value: any) {\n  if (!isObjectLike(value) || baseGetTag(value) !== objectTag) {\n    return false;\n  }\n  const proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  const Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (\n    typeof Ctor == 'function' &&\n    Ctor instanceof Ctor &&\n    funcToString.call(Ctor) === objectCtorString\n  );\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value: any) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value: any) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return symToStringTag && symToStringTag in Object(value)\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value: any) {\n  const isOwn = hasOwnProperty.call(value, symToStringTag as any),\n    tag = value[symToStringTag as any];\n  let unmasked = false;\n\n  try {\n    value[symToStringTag as any] = undefined;\n    unmasked = true;\n  } catch (e) {\n    // silence\n  }\n\n  const result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag as any] = tag;\n    } else {\n      delete value[symToStringTag as any];\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value: any) {\n  return nativeObjectToString.call(value);\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { isPlainObject } from './lodash.merge';\n\nconst MAX_LEVEL = 20;\n\ninterface ObjectInto {\n  obj: any;\n  key: string;\n}\n\n/**\n * Merges objects together\n * @param args - objects / values to be merged\n */\nexport function merge(...args: any[]): any {\n  let result: any = args.shift();\n  const objects: WeakMap<any, ObjectInto[]> | undefined = new WeakMap<\n    any,\n    ObjectInto[]\n  >();\n  while (args.length > 0) {\n    result = mergeTwoObjects(result, args.shift(), 0, objects);\n  }\n\n  return result;\n}\n\nfunction takeValue(value: any): any {\n  if (isArray(value)) {\n    return value.slice();\n  }\n  return value;\n}\n\n/**\n * Merges two objects\n * @param one - first object\n * @param two - second object\n * @param level - current deep level\n * @param objects - objects holder that has been already referenced - to prevent\n * cyclic dependency\n */\nfunction mergeTwoObjects(\n  one: any,\n  two: any,\n  level = 0,\n  objects: WeakMap<any, ObjectInto[]>\n): any {\n  let result: any;\n  if (level > MAX_LEVEL) {\n    return undefined;\n  }\n  level++;\n  if (isPrimitive(one) || isPrimitive(two) || isFunction(two)) {\n    result = takeValue(two);\n  } else if (isArray(one)) {\n    result = one.slice();\n    if (isArray(two)) {\n      for (let i = 0, j = two.length; i < j; i++) {\n        result.push(takeValue(two[i]));\n      }\n    } else if (isObject(two)) {\n      const keys = Object.keys(two);\n      for (let i = 0, j = keys.length; i < j; i++) {\n        const key = keys[i];\n        result[key] = takeValue(two[key]);\n      }\n    }\n  } else if (isObject(one)) {\n    if (isObject(two)) {\n      if (!shouldMerge(one, two)) {\n        return two;\n      }\n      result = Object.assign({}, one);\n      const keys = Object.keys(two);\n\n      for (let i = 0, j = keys.length; i < j; i++) {\n        const key = keys[i];\n        const twoValue = two[key];\n\n        if (isPrimitive(twoValue)) {\n          if (typeof twoValue === 'undefined') {\n            delete result[key];\n          } else {\n            // result[key] = takeValue(twoValue);\n            result[key] = twoValue;\n          }\n        } else {\n          const obj1 = result[key];\n          const obj2 = twoValue;\n\n          if (\n            wasObjectReferenced(one, key, objects) ||\n            wasObjectReferenced(two, key, objects)\n          ) {\n            delete result[key];\n          } else {\n            if (isObject(obj1) && isObject(obj2)) {\n              const arr1 = objects.get(obj1) || [];\n              const arr2 = objects.get(obj2) || [];\n              arr1.push({ obj: one, key });\n              arr2.push({ obj: two, key });\n              objects.set(obj1, arr1);\n              objects.set(obj2, arr2);\n            }\n\n            result[key] = mergeTwoObjects(\n              result[key],\n              twoValue,\n              level,\n              objects\n            );\n          }\n        }\n      }\n    } else {\n      result = two;\n    }\n  }\n\n  return result;\n}\n\n/**\n * Function to check if object has been already reference\n * @param obj\n * @param key\n * @param objects\n */\nfunction wasObjectReferenced(\n  obj: any,\n  key: string,\n  objects: WeakMap<any, ObjectInto[]>\n): boolean {\n  const arr = objects.get(obj[key]) || [];\n  for (let i = 0, j = arr.length; i < j; i++) {\n    const info = arr[i];\n    if (info.key === key && info.obj === obj) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isArray(value: any): boolean {\n  return Array.isArray(value);\n}\n\nfunction isFunction(value: any): boolean {\n  return typeof value === 'function';\n}\n\nfunction isObject(value: any): boolean {\n  return (\n    !isPrimitive(value) &&\n    !isArray(value) &&\n    !isFunction(value) &&\n    typeof value === 'object'\n  );\n}\n\nfunction isPrimitive(value: any): boolean {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean' ||\n    typeof value === 'undefined' ||\n    value instanceof Date ||\n    value instanceof RegExp ||\n    value === null\n  );\n}\n\nfunction shouldMerge(one: any, two: any): boolean {\n  if (!isPlainObject(one) || !isPlainObject(two)) {\n    return false;\n  }\n\n  return true;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Error that is thrown on timeouts.\n */\nexport class TimeoutError extends Error {\n  constructor(message?: string) {\n    super(message);\n\n    // manually adjust prototype to retain `instanceof` functionality when targeting ES5, see:\n    // https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, TimeoutError.prototype);\n  }\n}\n\n/**\n * Adds a timeout to a promise and rejects if the specified timeout has elapsed. Also rejects if the specified promise\n * rejects, and resolves if the specified promise resolves.\n *\n * <p> NOTE: this operation will continue even after it throws a {@link TimeoutError}.\n *\n * @param promise promise to use with timeout.\n * @param timeout the timeout in milliseconds until the returned promise is rejected.\n */\nexport function callWithTimeout<T>(\n  promise: Promise<T>,\n  timeout: number\n): Promise<T> {\n  let timeoutHandle: ReturnType<typeof setTimeout>;\n\n  const timeoutPromise = new Promise<never>(function timeoutFunction(\n    _resolve,\n    reject\n  ) {\n    timeoutHandle = setTimeout(function timeoutHandler() {\n      reject(new TimeoutError('Operation timed out.'));\n    }, timeout);\n  });\n\n  return Promise.race([promise, timeoutPromise]).then(\n    result => {\n      clearTimeout(timeoutHandle);\n      return result;\n    },\n    reason => {\n      clearTimeout(timeoutHandle);\n      throw reason;\n    }\n  );\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function urlMatches(url: string, urlToMatch: string | RegExp): boolean {\n  if (typeof urlToMatch === 'string') {\n    return url === urlToMatch;\n  } else {\n    return !!url.match(urlToMatch);\n  }\n}\n/**\n * Check if {@param url} should be ignored when comparing against {@param ignoredUrls}\n * @param url\n * @param ignoredUrls\n */\nexport function isUrlIgnored(\n  url: string,\n  ignoredUrls?: Array<string | RegExp>\n): boolean {\n  if (!ignoredUrls) {\n    return false;\n  }\n\n  for (const ignoreUrl of ignoredUrls) {\n    if (urlMatches(url, ignoreUrl)) {\n      return true;\n    }\n  }\n  return false;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ShimWrapped } from '../common/types';\n\n/**\n * Checks if certain function has been already wrapped\n * @param func\n */\nexport function isWrapped(func: unknown): func is ShimWrapped {\n  return (\n    typeof func === 'function' &&\n    typeof (func as ShimWrapped).__original === 'function' &&\n    typeof (func as ShimWrapped).__unwrap === 'function' &&\n    (func as ShimWrapped).__wrapped === true\n  );\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<T> {\n  private _promise: Promise<T>;\n  private _resolve!: (val: T) => void;\n  private _reject!: (error: unknown) => void;\n  constructor() {\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  get promise() {\n    return this._promise;\n  }\n\n  resolve(val: T) {\n    this._resolve(val);\n  }\n\n  reject(err: unknown) {\n    this._reject(err);\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from './promise';\n\n/**\n * Bind the callback and only invoke the callback once regardless how many times `BindOnceFuture.call` is invoked.\n */\nexport class BindOnceFuture<\n  R,\n  This = unknown,\n  T extends (this: This, ...args: unknown[]) => R = () => R,\n> {\n  private _isCalled = false;\n  private _deferred = new Deferred<R>();\n  constructor(\n    private _callback: T,\n    private _that: This\n  ) {}\n\n  get isCalled() {\n    return this._isCalled;\n  }\n\n  get promise() {\n    return this._deferred.promise;\n  }\n\n  call(...args: Parameters<T>): Promise<R> {\n    if (!this._isCalled) {\n      this._isCalled = true;\n      try {\n        Promise.resolve(this._callback.call(this._that, ...args)).then(\n          val => this._deferred.resolve(val),\n          err => this._deferred.reject(err)\n        );\n      } catch (err) {\n        this._deferred.reject(err);\n      }\n    }\n    return this._deferred.promise;\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { context } from '@opentelemetry/api';\nimport { ExportResult } from '../ExportResult';\nimport { suppressTracing } from '../trace/suppress-tracing';\n\nexport interface Exporter<T> {\n  export(arg: T, resultCallback: (result: ExportResult) => void): void;\n}\n\n/**\n * @internal\n * Shared functionality used by Exporters while exporting data, including suppresion of Traces.\n */\nexport function _export<T>(\n  exporter: Exporter<T>,\n  arg: T\n): Promise<ExportResult> {\n  return new Promise(resolve => {\n    // prevent downstream exporter calls from generating spans\n    context.with(suppressTracing(context.active()), () => {\n      exporter.export(arg, (result: ExportResult) => {\n        resolve(result);\n      });\n    });\n  });\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './baggage/propagation/W3CBaggagePropagator';\nexport * from './common/anchored-clock';\nexport * from './common/attributes';\nexport * from './common/global-error-handler';\nexport * from './common/logging-error-handler';\nexport * from './common/time';\nexport * from './common/types';\nexport * from './ExportResult';\nexport * as baggageUtils from './baggage/utils';\nexport * from './platform';\nexport * from './propagation/composite';\nexport * from './trace/W3CTraceContextPropagator';\nexport * from './trace/IdGenerator';\nexport * from './trace/rpc-metadata';\nexport * from './trace/sampler/AlwaysOffSampler';\nexport * from './trace/sampler/AlwaysOnSampler';\nexport * from './trace/sampler/ParentBasedSampler';\nexport * from './trace/sampler/TraceIdRatioBasedSampler';\nexport * from './trace/suppress-tracing';\nexport * from './trace/TraceState';\nexport * from './utils/environment';\nexport * from './utils/merge';\nexport * from './utils/sampling';\nexport * from './utils/timeout';\nexport * from './utils/url';\nexport * from './utils/wrap';\nexport * from './utils/callback';\nexport * from './version';\nimport { _export } from './internal/exporter';\nexport const internal = {\n  _export,\n};\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TracerProvider, MeterProvider } from '@opentelemetry/api';\nimport { Instrumentation } from './types';\nimport { AutoLoaderResult, InstrumentationOption } from './types_internal';\n\n/**\n * Parses the options and returns instrumentations, node plugins and\n *   web plugins\n * @param options\n */\nexport function parseInstrumentationOptions(\n  options: InstrumentationOption[] = []\n): AutoLoaderResult {\n  let instrumentations: Instrumentation[] = [];\n  for (let i = 0, j = options.length; i < j; i++) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const option = options[i] as any;\n    if (Array.isArray(option)) {\n      const results = parseInstrumentationOptions(option);\n      instrumentations = instrumentations.concat(results.instrumentations);\n    } else if (typeof option === 'function') {\n      instrumentations.push(new option());\n    } else if ((option as Instrumentation).instrumentationName) {\n      instrumentations.push(option);\n    }\n  }\n\n  return { instrumentations };\n}\n\n/**\n * Enable instrumentations\n * @param instrumentations\n * @param tracerProvider\n * @param meterProvider\n */\nexport function enableInstrumentations(\n  instrumentations: Instrumentation[],\n  tracerProvider?: TracerProvider,\n  meterProvider?: MeterProvider\n): void {\n  for (let i = 0, j = instrumentations.length; i < j; i++) {\n    const instrumentation = instrumentations[i];\n    if (tracerProvider) {\n      instrumentation.setTracerProvider(tracerProvider);\n    }\n    if (meterProvider) {\n      instrumentation.setMeterProvider(meterProvider);\n    }\n    // instrumentations have been already enabled during creation\n    // so enable only if user prevented that by setting enabled to false\n    // this is to prevent double enabling but when calling register all\n    // instrumentations should be now enabled\n    if (!instrumentation.getConfig().enabled) {\n      instrumentation.enable();\n    }\n  }\n}\n\n/**\n * Disable instrumentations\n * @param instrumentations\n */\nexport function disableInstrumentations(\n  instrumentations: Instrumentation[]\n): void {\n  instrumentations.forEach(instrumentation => instrumentation.disable());\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { trace, metrics } from '@opentelemetry/api';\nimport {\n  disableInstrumentations,\n  enableInstrumentations,\n  parseInstrumentationOptions,\n} from './autoLoaderUtils';\nimport { AutoLoaderOptions } from './types_internal';\n\n/**\n * It will register instrumentations and plugins\n * @param options\n * @return returns function to unload instrumentation and plugins that were\n *   registered\n */\nexport function registerInstrumentations(\n  options: AutoLoaderOptions\n): () => void {\n  const { instrumentations } = parseInstrumentationOptions(\n    options.instrumentations\n  );\n  const tracerProvider = options.tracerProvider || trace.getTracerProvider();\n  const meterProvider = options.meterProvider || metrics.getMeterProvider();\n\n  enableInstrumentations(instrumentations, tracerProvider, meterProvider);\n\n  return () => {\n    disableInstrumentations(instrumentations);\n  };\n}\n","export * from \"async_hooks\"","export * from \"events\"","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContextManager, Context } from '@opentelemetry/api';\nimport { EventEmitter } from 'events';\n\ntype Func<T> = (...args: unknown[]) => T;\n\n/**\n * Store a map for each event of all original listeners and their \"patched\"\n * version. So when a listener is removed by the user, the corresponding\n * patched function will be also removed.\n */\ninterface PatchMap {\n  [name: string]: WeakMap<Func<void>, Func<void>>;\n}\n\nconst ADD_LISTENER_METHODS = [\n  'addListener' as const,\n  'on' as const,\n  'once' as const,\n  'prependListener' as const,\n  'prependOnceListener' as const,\n];\n\nexport abstract class AbstractAsyncHooksContextManager\n  implements ContextManager\n{\n  abstract active(): Context;\n\n  abstract with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    context: Context,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F>;\n\n  abstract enable(): this;\n\n  abstract disable(): this;\n\n  /**\n   * Binds a the certain context or the active one to the target function and then returns the target\n   * @param context A context (span) to be bind to target\n   * @param target a function or event emitter. When target or one of its callbacks is called,\n   *  the provided context will be used as the active context for the duration of the call.\n   */\n  bind<T>(context: Context, target: T): T {\n    if (target instanceof EventEmitter) {\n      return this._bindEventEmitter(context, target);\n    }\n\n    if (typeof target === 'function') {\n      return this._bindFunction(context, target);\n    }\n    return target;\n  }\n\n  private _bindFunction<T extends Function>(context: Context, target: T): T {\n    const manager = this;\n    const contextWrapper = function (this: never, ...args: unknown[]) {\n      return manager.with(context, () => target.apply(this, args));\n    };\n    Object.defineProperty(contextWrapper, 'length', {\n      enumerable: false,\n      configurable: true,\n      writable: false,\n      value: target.length,\n    });\n    /**\n     * It isn't possible to tell Typescript that contextWrapper is the same as T\n     * so we forced to cast as any here.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return contextWrapper as any;\n  }\n\n  /**\n   * By default, EventEmitter call their callback with their context, which we do\n   * not want, instead we will bind a specific context to all callbacks that\n   * go through it.\n   * @param context the context we want to bind\n   * @param ee EventEmitter an instance of EventEmitter to patch\n   */\n  private _bindEventEmitter<T extends EventEmitter>(\n    context: Context,\n    ee: T\n  ): T {\n    const map = this._getPatchMap(ee);\n    if (map !== undefined) return ee;\n    this._createPatchMap(ee);\n\n    // patch methods that add a listener to propagate context\n    ADD_LISTENER_METHODS.forEach(methodName => {\n      if (ee[methodName] === undefined) return;\n      ee[methodName] = this._patchAddListener(ee, ee[methodName], context);\n    });\n    // patch methods that remove a listener\n    if (typeof ee.removeListener === 'function') {\n      ee.removeListener = this._patchRemoveListener(ee, ee.removeListener);\n    }\n    if (typeof ee.off === 'function') {\n      ee.off = this._patchRemoveListener(ee, ee.off);\n    }\n    // patch method that remove all listeners\n    if (typeof ee.removeAllListeners === 'function') {\n      ee.removeAllListeners = this._patchRemoveAllListeners(\n        ee,\n        ee.removeAllListeners\n      );\n    }\n    return ee;\n  }\n\n  /**\n   * Patch methods that remove a given listener so that we match the \"patched\"\n   * version of that listener (the one that propagate context).\n   * @param ee EventEmitter instance\n   * @param original reference to the patched method\n   */\n  private _patchRemoveListener(ee: EventEmitter, original: Function) {\n    const contextManager = this;\n    return function (this: never, event: string, listener: Func<void>) {\n      const events = contextManager._getPatchMap(ee)?.[event];\n      if (events === undefined) {\n        return original.call(this, event, listener);\n      }\n      const patchedListener = events.get(listener);\n      return original.call(this, event, patchedListener || listener);\n    };\n  }\n\n  /**\n   * Patch methods that remove all listeners so we remove our\n   * internal references for a given event.\n   * @param ee EventEmitter instance\n   * @param original reference to the patched method\n   */\n  private _patchRemoveAllListeners(ee: EventEmitter, original: Function) {\n    const contextManager = this;\n    return function (this: never, event: string) {\n      const map = contextManager._getPatchMap(ee);\n      if (map !== undefined) {\n        if (arguments.length === 0) {\n          contextManager._createPatchMap(ee);\n        } else if (map[event] !== undefined) {\n          delete map[event];\n        }\n      }\n      return original.apply(this, arguments);\n    };\n  }\n\n  /**\n   * Patch methods on an event emitter instance that can add listeners so we\n   * can force them to propagate a given context.\n   * @param ee EventEmitter instance\n   * @param original reference to the patched method\n   * @param [context] context to propagate when calling listeners\n   */\n  private _patchAddListener(\n    ee: EventEmitter,\n    original: Function,\n    context: Context\n  ) {\n    const contextManager = this;\n    return function (this: never, event: string, listener: Func<void>) {\n      /**\n       * This check is required to prevent double-wrapping the listener.\n       * The implementation for ee.once wraps the listener and calls ee.on.\n       * Without this check, we would wrap that wrapped listener.\n       * This causes an issue because ee.removeListener depends on the onceWrapper\n       * to properly remove the listener. If we wrap their wrapper, we break\n       * that detection.\n       */\n      if (contextManager._wrapped) {\n        return original.call(this, event, listener);\n      }\n      let map = contextManager._getPatchMap(ee);\n      if (map === undefined) {\n        map = contextManager._createPatchMap(ee);\n      }\n      let listeners = map[event];\n      if (listeners === undefined) {\n        listeners = new WeakMap();\n        map[event] = listeners;\n      }\n      const patchedListener = contextManager.bind(context, listener);\n      // store a weak reference of the user listener to ours\n      listeners.set(listener, patchedListener);\n\n      /**\n       * See comment at the start of this function for the explanation of this property.\n       */\n      contextManager._wrapped = true;\n      try {\n        return original.call(this, event, patchedListener);\n      } finally {\n        contextManager._wrapped = false;\n      }\n    };\n  }\n\n  private _createPatchMap(ee: EventEmitter): PatchMap {\n    const map = Object.create(null);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (ee as any)[this._kOtListeners] = map;\n    return map;\n  }\n  private _getPatchMap(ee: EventEmitter): PatchMap | undefined {\n    return (ee as never)[this._kOtListeners];\n  }\n\n  private readonly _kOtListeners = Symbol('OtListeners');\n  private _wrapped = false;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, ROOT_CONTEXT } from '@opentelemetry/api';\nimport { AsyncLocalStorage } from 'async_hooks';\nimport { AbstractAsyncHooksContextManager } from './AbstractAsyncHooksContextManager';\n\nexport class AsyncLocalStorageContextManager extends AbstractAsyncHooksContextManager {\n  private _asyncLocalStorage: AsyncLocalStorage<Context>;\n\n  constructor() {\n    super();\n    this._asyncLocalStorage = new AsyncLocalStorage();\n  }\n\n  active(): Context {\n    return this._asyncLocalStorage.getStore() ?? ROOT_CONTEXT;\n  }\n\n  with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    context: Context,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F> {\n    const cb = thisArg == null ? fn : fn.bind(thisArg);\n    return this._asyncLocalStorage.run(context, cb as never, ...args);\n  }\n\n  enable(): this {\n    return this;\n  }\n\n  disable(): this {\n    this._asyncLocalStorage.disable();\n    return this;\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type { IAnyValue, IKeyValue } from './types';\nimport { Attributes } from '@opentelemetry/api';\n\nexport function toAttributes(attributes: Attributes): IKeyValue[] {\n  return Object.keys(attributes).map(key => toKeyValue(key, attributes[key]));\n}\n\nexport function toKeyValue(key: string, value: unknown): IKeyValue {\n  return {\n    key: key,\n    value: toAnyValue(value),\n  };\n}\n\nexport function toAnyValue(value: unknown): IAnyValue {\n  const t = typeof value;\n  if (t === 'string') return { stringValue: value as string };\n  if (t === 'number') {\n    if (!Number.isInteger(value)) return { doubleValue: value as number };\n    return { intValue: value as number };\n  }\n  if (t === 'boolean') return { boolValue: value as boolean };\n  if (value instanceof Uint8Array) return { bytesValue: value };\n  if (Array.isArray(value))\n    return { arrayValue: { values: value.map(toAnyValue) } };\n  if (t === 'object' && value != null)\n    return {\n      kvlistValue: {\n        values: Object.entries(value as object).map(([k, v]) =>\n          toKeyValue(k, v)\n        ),\n      },\n    };\n\n  return {};\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type { Link } from '@opentelemetry/api';\nimport type { ReadableSpan, TimedEvent } from '@opentelemetry/sdk-trace-base';\nimport type { Encoder } from '../common';\nimport { toAttributes } from '../common/internal';\nimport { EStatusCode, IEvent, ILink, ISpan } from './types';\n\nexport function sdkSpanToOtlpSpan(span: ReadableSpan, encoder: Encoder): ISpan {\n  const ctx = span.spanContext();\n  const status = span.status;\n  return {\n    traceId: encoder.encodeSpanContext(ctx.traceId),\n    spanId: encoder.encodeSpanContext(ctx.spanId),\n    parentSpanId: encoder.encodeOptionalSpanContext(span.parentSpanId),\n    traceState: ctx.traceState?.serialize(),\n    name: span.name,\n    // Span kind is offset by 1 because the API does not define a value for unset\n    kind: span.kind == null ? 0 : span.kind + 1,\n    startTimeUnixNano: encoder.encodeHrTime(span.startTime),\n    endTimeUnixNano: encoder.encodeHrTime(span.endTime),\n    attributes: toAttributes(span.attributes),\n    droppedAttributesCount: span.droppedAttributesCount,\n    events: span.events.map(event => toOtlpSpanEvent(event, encoder)),\n    droppedEventsCount: span.droppedEventsCount,\n    status: {\n      // API and proto enums share the same values\n      code: status.code as unknown as EStatusCode,\n      message: status.message,\n    },\n    links: span.links.map(link => toOtlpLink(link, encoder)),\n    droppedLinksCount: span.droppedLinksCount,\n  };\n}\n\nexport function toOtlpLink(link: Link, encoder: Encoder): ILink {\n  return {\n    attributes: link.attributes ? toAttributes(link.attributes) : [],\n    spanId: encoder.encodeSpanContext(link.context.spanId),\n    traceId: encoder.encodeSpanContext(link.context.traceId),\n    traceState: link.context.traceState?.serialize(),\n    droppedAttributesCount: link.droppedAttributesCount || 0,\n  };\n}\n\nexport function toOtlpSpanEvent(\n  timedEvent: TimedEvent,\n  encoder: Encoder\n): IEvent {\n  return {\n    attributes: timedEvent.attributes\n      ? toAttributes(timedEvent.attributes)\n      : [],\n    name: timedEvent.name,\n    timeUnixNano: encoder.encodeHrTime(timedEvent.time),\n    droppedAttributesCount: timedEvent.droppedAttributesCount || 0,\n  };\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { OtlpEncodingOptions, Fixed64, LongBits } from './types';\nimport { HrTime } from '@opentelemetry/api';\nimport { hexToBase64, hrTimeToNanoseconds } from '@opentelemetry/core';\n\nconst NANOSECONDS = BigInt(1_000_000_000);\n\nexport function hrTimeToNanos(hrTime: HrTime): bigint {\n  return BigInt(hrTime[0]) * NANOSECONDS + BigInt(hrTime[1]);\n}\n\nexport function toLongBits(value: bigint): LongBits {\n  const low = Number(BigInt.asUintN(32, value));\n  const high = Number(BigInt.asUintN(32, value >> BigInt(32)));\n  return { low, high };\n}\n\nexport function encodeAsLongBits(hrTime: HrTime): LongBits {\n  const nanos = hrTimeToNanos(hrTime);\n  return toLongBits(nanos);\n}\n\nexport function encodeAsString(hrTime: HrTime): string {\n  const nanos = hrTimeToNanos(hrTime);\n  return nanos.toString();\n}\n\nconst encodeTimestamp =\n  typeof BigInt !== 'undefined' ? encodeAsString : hrTimeToNanoseconds;\n\nexport type HrTimeEncodeFunction = (hrTime: HrTime) => Fixed64;\nexport type SpanContextEncodeFunction = (spanContext: string) => string;\nexport type OptionalSpanContextEncodeFunction = (\n  spanContext: string | undefined\n) => string | undefined;\n\nexport interface Encoder {\n  encodeHrTime: HrTimeEncodeFunction;\n  encodeSpanContext: SpanContextEncodeFunction;\n  encodeOptionalSpanContext: OptionalSpanContextEncodeFunction;\n}\n\nfunction identity<T>(value: T): T {\n  return value;\n}\n\nfunction optionalHexToBase64(str: string | undefined): string | undefined {\n  if (str === undefined) return undefined;\n  return hexToBase64(str);\n}\n\nconst DEFAULT_ENCODER: Encoder = {\n  encodeHrTime: encodeAsLongBits,\n  encodeSpanContext: hexToBase64,\n  encodeOptionalSpanContext: optionalHexToBase64,\n};\n\nexport function getOtlpEncoder(options?: OtlpEncodingOptions): Encoder {\n  if (options === undefined) {\n    return DEFAULT_ENCODER;\n  }\n\n  const useLongBits = options.useLongBits ?? true;\n  const useHex = options.useHex ?? false;\n  return {\n    encodeHrTime: useLongBits ? encodeAsLongBits : encodeTimestamp,\n    encodeSpanContext: useHex ? identity : hexToBase64,\n    encodeOptionalSpanContext: useHex ? identity : optionalHexToBase64,\n  };\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type { IResource } from '@opentelemetry/resources';\nimport type { ReadableSpan } from '@opentelemetry/sdk-trace-base';\nimport type { OtlpEncodingOptions } from '../common/types';\nimport { toAttributes } from '../common/internal';\nimport { sdkSpanToOtlpSpan } from './internal';\nimport {\n  IExportTraceServiceRequest,\n  IResourceSpans,\n  IScopeSpans,\n} from './types';\nimport { Encoder, getOtlpEncoder } from '../common';\n\nexport function createExportTraceServiceRequest(\n  spans: ReadableSpan[],\n  options?: OtlpEncodingOptions\n): IExportTraceServiceRequest {\n  const encoder = getOtlpEncoder(options);\n  return {\n    resourceSpans: spanRecordsToResourceSpans(spans, encoder),\n  };\n}\n\nfunction createResourceMap(readableSpans: ReadableSpan[]) {\n  const resourceMap: Map<IResource, Map<string, ReadableSpan[]>> = new Map();\n  for (const record of readableSpans) {\n    let ilmMap = resourceMap.get(record.resource);\n\n    if (!ilmMap) {\n      ilmMap = new Map();\n      resourceMap.set(record.resource, ilmMap);\n    }\n\n    // TODO this is duplicated in basic tracer. Consolidate on a common helper in core\n    const instrumentationLibraryKey = `${record.instrumentationLibrary.name}@${\n      record.instrumentationLibrary.version || ''\n    }:${record.instrumentationLibrary.schemaUrl || ''}`;\n    let records = ilmMap.get(instrumentationLibraryKey);\n\n    if (!records) {\n      records = [];\n      ilmMap.set(instrumentationLibraryKey, records);\n    }\n\n    records.push(record);\n  }\n\n  return resourceMap;\n}\n\nfunction spanRecordsToResourceSpans(\n  readableSpans: ReadableSpan[],\n  encoder: Encoder\n): IResourceSpans[] {\n  const resourceMap = createResourceMap(readableSpans);\n  const out: IResourceSpans[] = [];\n\n  const entryIterator = resourceMap.entries();\n  let entry = entryIterator.next();\n  while (!entry.done) {\n    const [resource, ilmMap] = entry.value;\n    const scopeResourceSpans: IScopeSpans[] = [];\n    const ilmIterator = ilmMap.values();\n    let ilmEntry = ilmIterator.next();\n    while (!ilmEntry.done) {\n      const scopeSpans = ilmEntry.value;\n      if (scopeSpans.length > 0) {\n        const { name, version, schemaUrl } =\n          scopeSpans[0].instrumentationLibrary;\n        const spans = scopeSpans.map(readableSpan =>\n          sdkSpanToOtlpSpan(readableSpan, encoder)\n        );\n\n        scopeResourceSpans.push({\n          scope: { name, version },\n          spans: spans,\n          schemaUrl: schemaUrl,\n        });\n      }\n      ilmEntry = ilmIterator.next();\n    }\n    // TODO SDK types don't provide resource schema URL at this time\n    const transformedSpans: IResourceSpans = {\n      resource: {\n        attributes: toAttributes(resource.attributes),\n        droppedAttributesCount: 0,\n      },\n      scopeSpans: scopeResourceSpans,\n      schemaUrl: undefined,\n    };\n\n    out.push(transformedSpans);\n    entry = entryIterator.next();\n  }\n\n  return out;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport { getEnv } from '@opentelemetry/core';\n\nconst DEFAULT_TRACE_TIMEOUT = 10000;\nexport const DEFAULT_EXPORT_MAX_ATTEMPTS = 5;\nexport const DEFAULT_EXPORT_INITIAL_BACKOFF = 1000;\nexport const DEFAULT_EXPORT_MAX_BACKOFF = 5000;\nexport const DEFAULT_EXPORT_BACKOFF_MULTIPLIER = 1.5;\n\n/**\n * Parses headers from config leaving only those that have defined values\n * @param partialHeaders\n */\nexport function parseHeaders(\n  partialHeaders: Partial<Record<string, unknown>> = {}\n): Record<string, string> {\n  const headers: Record<string, string> = {};\n  Object.entries(partialHeaders).forEach(([key, value]) => {\n    if (typeof value !== 'undefined') {\n      headers[key] = String(value);\n    } else {\n      diag.warn(`Header \"${key}\" has wrong value and will be ignored`);\n    }\n  });\n  return headers;\n}\n\n/**\n * Adds path (version + signal) to a no per-signal endpoint\n * @param url\n * @param path\n * @returns url + path\n */\nexport function appendResourcePathToUrl(url: string, path: string): string {\n  if (!url.endsWith('/')) {\n    url = url + '/';\n  }\n  return url + path;\n}\n\n/**\n * Adds root path to signal specific endpoint when endpoint contains no path part and no root path\n * @param url\n * @returns url\n */\nexport function appendRootPathToUrlIfNeeded(url: string): string {\n  try {\n    const parsedUrl = new URL(url);\n    if (parsedUrl.pathname === '') {\n      parsedUrl.pathname = parsedUrl.pathname + '/';\n    }\n    return parsedUrl.toString();\n  } catch {\n    diag.warn(`Could not parse export URL: '${url}'`);\n    return url;\n  }\n}\n\n/**\n * Configure exporter trace timeout value from passed in value or environment variables\n * @param timeoutMillis\n * @returns timeout value in milliseconds\n */\nexport function configureExporterTimeout(\n  timeoutMillis: number | undefined\n): number {\n  if (typeof timeoutMillis === 'number') {\n    if (timeoutMillis <= 0) {\n      // OTLP exporter configured timeout - using default value of 10000ms\n      return invalidTimeout(timeoutMillis, DEFAULT_TRACE_TIMEOUT);\n    }\n    return timeoutMillis;\n  } else {\n    return getExporterTimeoutFromEnv();\n  }\n}\n\nfunction getExporterTimeoutFromEnv(): number {\n  const definedTimeout = Number(\n    getEnv().OTEL_EXPORTER_OTLP_TRACES_TIMEOUT ??\n      getEnv().OTEL_EXPORTER_OTLP_TIMEOUT\n  );\n\n  if (definedTimeout <= 0) {\n    // OTLP exporter configured timeout - using default value of 10000ms\n    return invalidTimeout(definedTimeout, DEFAULT_TRACE_TIMEOUT);\n  } else {\n    return definedTimeout;\n  }\n}\n\n// OTLP exporter configured timeout - using default value of 10000ms\nexport function invalidTimeout(\n  timeout: number,\n  defaultTimeout: number\n): number {\n  diag.warn('Timeout must be greater than 0', timeout);\n\n  return defaultTimeout;\n}\n\nexport function isExportRetryable(statusCode: number): boolean {\n  const retryCodes = [429, 502, 503, 504];\n\n  return retryCodes.includes(statusCode);\n}\n\nexport function parseRetryAfterToMills(retryAfter?: string | null): number {\n  if (retryAfter == null) {\n    return -1;\n  }\n  const seconds = Number.parseInt(retryAfter, 10);\n  if (Number.isInteger(seconds)) {\n    return seconds > 0 ? seconds * 1000 : -1;\n  }\n  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After#directives\n  const delay = new Date(retryAfter).getTime() - Date.now();\n\n  if (delay >= 0) {\n    return delay;\n  }\n  return 0;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport {\n  ExportResult,\n  ExportResultCode,\n  BindOnceFuture,\n} from '@opentelemetry/core';\nimport {\n  OTLPExporterError,\n  OTLPExporterConfigBase,\n  ExportServiceError,\n} from './types';\nimport { configureExporterTimeout } from './util';\n\n/**\n * Collector Exporter abstract base class\n */\nexport abstract class OTLPExporterBase<\n  T extends OTLPExporterConfigBase,\n  ExportItem,\n  ServiceRequest,\n> {\n  public readonly url: string;\n  public readonly hostname: string | undefined;\n  public readonly timeoutMillis: number;\n  protected _concurrencyLimit: number;\n  protected _sendingPromises: Promise<unknown>[] = [];\n  protected _shutdownOnce: BindOnceFuture<void>;\n\n  /**\n   * @param config\n   */\n  constructor(config: T = {} as T) {\n    this.url = this.getDefaultUrl(config);\n    if (typeof config.hostname === 'string') {\n      this.hostname = config.hostname;\n    }\n\n    this.shutdown = this.shutdown.bind(this);\n    this._shutdownOnce = new BindOnceFuture(this._shutdown, this);\n\n    this._concurrencyLimit =\n      typeof config.concurrencyLimit === 'number'\n        ? config.concurrencyLimit\n        : 30;\n\n    this.timeoutMillis = configureExporterTimeout(config.timeoutMillis);\n\n    // platform dependent\n    this.onInit(config);\n  }\n\n  /**\n   * Export items.\n   * @param items\n   * @param resultCallback\n   */\n  export(\n    items: ExportItem[],\n    resultCallback: (result: ExportResult) => void\n  ): void {\n    if (this._shutdownOnce.isCalled) {\n      resultCallback({\n        code: ExportResultCode.FAILED,\n        error: new Error('Exporter has been shutdown'),\n      });\n      return;\n    }\n\n    if (this._sendingPromises.length >= this._concurrencyLimit) {\n      resultCallback({\n        code: ExportResultCode.FAILED,\n        error: new Error('Concurrent export limit reached'),\n      });\n      return;\n    }\n\n    this._export(items)\n      .then(() => {\n        resultCallback({ code: ExportResultCode.SUCCESS });\n      })\n      .catch((error: ExportServiceError) => {\n        resultCallback({ code: ExportResultCode.FAILED, error });\n      });\n  }\n\n  private _export(items: ExportItem[]): Promise<unknown> {\n    return new Promise<void>((resolve, reject) => {\n      try {\n        diag.debug('items to be sent', items);\n        this.send(items, resolve, reject);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  /**\n   * Shutdown the exporter.\n   */\n  shutdown(): Promise<void> {\n    return this._shutdownOnce.call();\n  }\n\n  /**\n   * Exports any pending spans in the exporter\n   */\n  forceFlush(): Promise<void> {\n    return Promise.all(this._sendingPromises).then(() => {\n      /** ignore resolved values */\n    });\n  }\n\n  /**\n   * Called by _shutdownOnce with BindOnceFuture\n   */\n  private _shutdown(): Promise<void> {\n    diag.debug('shutdown started');\n    this.onShutdown();\n    return this.forceFlush();\n  }\n\n  abstract onShutdown(): void;\n  abstract onInit(config: T): void;\n  abstract send(\n    items: ExportItem[],\n    onSuccess: () => void,\n    onError: (error: OTLPExporterError) => void\n  ): void;\n  abstract getDefaultUrl(config: T): string;\n  abstract convert(objects: ExportItem[]): ServiceRequest;\n}\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\n          \"use strict\";\n          module.exports = inquire;\n          function inquire(moduleName) {\n            return null;\n          }\n        ","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get: function get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value: function value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n\n    if (start === end) { // fix for IE 10/Win8 and others' subarray returning array of size 1\n        var nativeBuffer = util.Buffer;\n        return nativeBuffer\n            ? nativeBuffer.alloc(0)\n            : new this.buf.constructor(0);\n    }\n    return this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport {\n  InstrumentationLibrary,\n  sanitizeAttributes,\n  isTracingSuppressed,\n} from '@opentelemetry/core';\nimport { IResource } from '@opentelemetry/resources';\nimport { BasicTracerProvider } from './BasicTracerProvider';\nimport { Span } from './Span';\nimport { GeneralLimits, SpanLimits, TracerConfig } from './types';\nimport { mergeConfig } from './utility';\nimport { SpanProcessor } from './SpanProcessor';\nimport { Sampler } from './Sampler';\nimport { IdGenerator } from './IdGenerator';\nimport { RandomIdGenerator } from './platform';\n\n/**\n * This class represents a basic tracer.\n */\nexport class Tracer implements api.Tracer {\n  private readonly _sampler: Sampler;\n  private readonly _generalLimits: GeneralLimits;\n  private readonly _spanLimits: SpanLimits;\n  private readonly _idGenerator: IdGenerator;\n  readonly resource: IResource;\n  readonly instrumentationLibrary: InstrumentationLibrary;\n\n  /**\n   * Constructs a new Tracer instance.\n   */\n  constructor(\n    instrumentationLibrary: InstrumentationLibrary,\n    config: TracerConfig,\n    private _tracerProvider: BasicTracerProvider\n  ) {\n    const localConfig = mergeConfig(config);\n    this._sampler = localConfig.sampler;\n    this._generalLimits = localConfig.generalLimits;\n    this._spanLimits = localConfig.spanLimits;\n    this._idGenerator = config.idGenerator || new RandomIdGenerator();\n    this.resource = _tracerProvider.resource;\n    this.instrumentationLibrary = instrumentationLibrary;\n  }\n\n  /**\n   * Starts a new Span or returns the default NoopSpan based on the sampling\n   * decision.\n   */\n  startSpan(\n    name: string,\n    options: api.SpanOptions = {},\n    context = api.context.active()\n  ): api.Span {\n    // remove span from context in case a root span is requested via options\n    if (options.root) {\n      context = api.trace.deleteSpan(context);\n    }\n    const parentSpan = api.trace.getSpan(context);\n\n    if (isTracingSuppressed(context)) {\n      api.diag.debug('Instrumentation suppressed, returning Noop Span');\n      const nonRecordingSpan = api.trace.wrapSpanContext(\n        api.INVALID_SPAN_CONTEXT\n      );\n      return nonRecordingSpan;\n    }\n\n    const parentSpanContext = parentSpan?.spanContext();\n    const spanId = this._idGenerator.generateSpanId();\n    let traceId;\n    let traceState;\n    let parentSpanId;\n    if (\n      !parentSpanContext ||\n      !api.trace.isSpanContextValid(parentSpanContext)\n    ) {\n      // New root span.\n      traceId = this._idGenerator.generateTraceId();\n    } else {\n      // New child span.\n      traceId = parentSpanContext.traceId;\n      traceState = parentSpanContext.traceState;\n      parentSpanId = parentSpanContext.spanId;\n    }\n\n    const spanKind = options.kind ?? api.SpanKind.INTERNAL;\n    const links = (options.links ?? []).map(link => {\n      return {\n        context: link.context,\n        attributes: sanitizeAttributes(link.attributes),\n      };\n    });\n    const attributes = sanitizeAttributes(options.attributes);\n    // make sampling decision\n    const samplingResult = this._sampler.shouldSample(\n      context,\n      traceId,\n      name,\n      spanKind,\n      attributes,\n      links\n    );\n\n    traceState = samplingResult.traceState ?? traceState;\n\n    const traceFlags =\n      samplingResult.decision === api.SamplingDecision.RECORD_AND_SAMPLED\n        ? api.TraceFlags.SAMPLED\n        : api.TraceFlags.NONE;\n    const spanContext = { traceId, spanId, traceFlags, traceState };\n    if (samplingResult.decision === api.SamplingDecision.NOT_RECORD) {\n      api.diag.debug(\n        'Recording is off, propagating context in a non-recording span'\n      );\n      const nonRecordingSpan = api.trace.wrapSpanContext(spanContext);\n      return nonRecordingSpan;\n    }\n\n    // Set initial span attributes. The attributes object may have been mutated\n    // by the sampler, so we sanitize the merged attributes before setting them.\n    const initAttributes = sanitizeAttributes(\n      Object.assign(attributes, samplingResult.attributes)\n    );\n\n    const span = new Span(\n      this,\n      context,\n      name,\n      spanContext,\n      spanKind,\n      parentSpanId,\n      links,\n      options.startTime,\n      undefined,\n      initAttributes\n    );\n    return span;\n  }\n\n  /**\n   * Starts a new {@link Span} and calls the given function passing it the\n   * created span as first argument.\n   * Additionally the new span gets set in context and this context is activated\n   * for the duration of the function call.\n   *\n   * @param name The name of the span\n   * @param [options] SpanOptions used for span creation\n   * @param [context] Context to use to extract parent\n   * @param fn function called in the context of the span and receives the newly created span as an argument\n   * @returns return value of fn\n   * @example\n   *   const something = tracer.startActiveSpan('op', span => {\n   *     try {\n   *       do some work\n   *       span.setStatus({code: SpanStatusCode.OK});\n   *       return something;\n   *     } catch (err) {\n   *       span.setStatus({\n   *         code: SpanStatusCode.ERROR,\n   *         message: err.message,\n   *       });\n   *       throw err;\n   *     } finally {\n   *       span.end();\n   *     }\n   *   });\n   * @example\n   *   const span = tracer.startActiveSpan('op', span => {\n   *     try {\n   *       do some work\n   *       return span;\n   *     } catch (err) {\n   *       span.setStatus({\n   *         code: SpanStatusCode.ERROR,\n   *         message: err.message,\n   *       });\n   *       throw err;\n   *     }\n   *   });\n   *   do some more work\n   *   span.end();\n   */\n  startActiveSpan<F extends (span: api.Span) => ReturnType<F>>(\n    name: string,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: api.Span) => ReturnType<F>>(\n    name: string,\n    opts: api.SpanOptions,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: api.Span) => ReturnType<F>>(\n    name: string,\n    opts: api.SpanOptions,\n    ctx: api.Context,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: api.Span) => ReturnType<F>>(\n    name: string,\n    arg2?: F | api.SpanOptions,\n    arg3?: F | api.Context,\n    arg4?: F\n  ): ReturnType<F> | undefined {\n    let opts: api.SpanOptions | undefined;\n    let ctx: api.Context | undefined;\n    let fn: F;\n\n    if (arguments.length < 2) {\n      return;\n    } else if (arguments.length === 2) {\n      fn = arg2 as F;\n    } else if (arguments.length === 3) {\n      opts = arg2 as api.SpanOptions | undefined;\n      fn = arg3 as F;\n    } else {\n      opts = arg2 as api.SpanOptions | undefined;\n      ctx = arg3 as api.Context | undefined;\n      fn = arg4 as F;\n    }\n\n    const parentContext = ctx ?? api.context.active();\n    const span = this.startSpan(name, opts, parentContext);\n    const contextWithSpanSet = api.trace.setSpan(parentContext, span);\n\n    return api.context.with(contextWithSpanSet, fn, undefined, span);\n  }\n\n  /** Returns the active {@link GeneralLimits}. */\n  getGeneralLimits(): GeneralLimits {\n    return this._generalLimits;\n  }\n\n  /** Returns the active {@link SpanLimits}. */\n  getSpanLimits(): SpanLimits {\n    return this._spanLimits;\n  }\n\n  getActiveSpanProcessor(): SpanProcessor {\n    return this._tracerProvider.getActiveSpanProcessor();\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  diag,\n  Exception,\n  HrTime,\n  Link,\n  Span as APISpan,\n  SpanAttributes,\n  SpanAttributeValue,\n  SpanContext,\n  SpanKind,\n  SpanStatus,\n  SpanStatusCode,\n  TimeInput,\n} from '@opentelemetry/api';\nimport {\n  addHrTimes,\n  millisToHrTime,\n  getTimeOrigin,\n  hrTime,\n  hrTimeDuration,\n  InstrumentationLibrary,\n  isAttributeValue,\n  isTimeInput,\n  isTimeInputHrTime,\n  otperformance,\n  sanitizeAttributes,\n} from '@opentelemetry/core';\nimport { IResource } from '@opentelemetry/resources';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport { ExceptionEventName } from './enums';\nimport { ReadableSpan } from './export/ReadableSpan';\nimport { SpanProcessor } from './SpanProcessor';\nimport { TimedEvent } from './TimedEvent';\nimport { Tracer } from './Tracer';\nimport { SpanLimits } from './types';\n\n/**\n * This class represents a span.\n */\nexport class Span implements APISpan, ReadableSpan {\n  // Below properties are included to implement ReadableSpan for export\n  // purposes but are not intended to be written-to directly.\n  private readonly _spanContext: SpanContext;\n  readonly kind: SpanKind;\n  readonly parentSpanId?: string;\n  readonly attributes: SpanAttributes = {};\n  readonly links: Link[] = [];\n  readonly events: TimedEvent[] = [];\n  readonly startTime: HrTime;\n  readonly resource: IResource;\n  readonly instrumentationLibrary: InstrumentationLibrary;\n\n  private _droppedAttributesCount = 0;\n  private _droppedEventsCount: number = 0;\n  private _droppedLinksCount: number = 0;\n\n  name: string;\n  status: SpanStatus = {\n    code: SpanStatusCode.UNSET,\n  };\n  endTime: HrTime = [0, 0];\n  private _ended = false;\n  private _duration: HrTime = [-1, -1];\n  private readonly _spanProcessor: SpanProcessor;\n  private readonly _spanLimits: SpanLimits;\n  private readonly _attributeValueLengthLimit: number;\n\n  private readonly _performanceStartTime: number;\n  private readonly _performanceOffset: number;\n  private readonly _startTimeProvided: boolean;\n\n  /**\n   * Constructs a new Span instance.\n   *\n   * @deprecated calling Span constructor directly is not supported. Please use tracer.startSpan.\n   * */\n  constructor(\n    parentTracer: Tracer,\n    context: Context,\n    spanName: string,\n    spanContext: SpanContext,\n    kind: SpanKind,\n    parentSpanId?: string,\n    links: Link[] = [],\n    startTime?: TimeInput,\n    _deprecatedClock?: unknown, // keeping this argument even though it is unused to ensure backwards compatibility\n    attributes?: SpanAttributes\n  ) {\n    this.name = spanName;\n    this._spanContext = spanContext;\n    this.parentSpanId = parentSpanId;\n    this.kind = kind;\n    this.links = links;\n\n    const now = Date.now();\n    this._performanceStartTime = otperformance.now();\n    this._performanceOffset =\n      now - (this._performanceStartTime + getTimeOrigin());\n    this._startTimeProvided = startTime != null;\n\n    this.startTime = this._getTime(startTime ?? now);\n\n    this.resource = parentTracer.resource;\n    this.instrumentationLibrary = parentTracer.instrumentationLibrary;\n    this._spanLimits = parentTracer.getSpanLimits();\n\n    if (attributes != null) {\n      this.setAttributes(attributes);\n    }\n\n    this._spanProcessor = parentTracer.getActiveSpanProcessor();\n    this._spanProcessor.onStart(this, context);\n    this._attributeValueLengthLimit =\n      this._spanLimits.attributeValueLengthLimit || 0;\n  }\n\n  spanContext(): SpanContext {\n    return this._spanContext;\n  }\n\n  setAttribute(key: string, value?: SpanAttributeValue): this;\n  setAttribute(key: string, value: unknown): this {\n    if (value == null || this._isSpanEnded()) return this;\n    if (key.length === 0) {\n      diag.warn(`Invalid attribute key: ${key}`);\n      return this;\n    }\n    if (!isAttributeValue(value)) {\n      diag.warn(`Invalid attribute value set for key: ${key}`);\n      return this;\n    }\n\n    if (\n      Object.keys(this.attributes).length >=\n        this._spanLimits.attributeCountLimit! &&\n      !Object.prototype.hasOwnProperty.call(this.attributes, key)\n    ) {\n      this._droppedAttributesCount++;\n      return this;\n    }\n    this.attributes[key] = this._truncateToSize(value);\n    return this;\n  }\n\n  setAttributes(attributes: SpanAttributes): this {\n    for (const [k, v] of Object.entries(attributes)) {\n      this.setAttribute(k, v);\n    }\n    return this;\n  }\n\n  /**\n   *\n   * @param name Span Name\n   * @param [attributesOrStartTime] Span attributes or start time\n   *     if type is {@type TimeInput} and 3rd param is undefined\n   * @param [timeStamp] Specified time stamp for the event\n   */\n  addEvent(\n    name: string,\n    attributesOrStartTime?: SpanAttributes | TimeInput,\n    timeStamp?: TimeInput\n  ): this {\n    if (this._isSpanEnded()) return this;\n    if (this._spanLimits.eventCountLimit === 0) {\n      diag.warn('No events allowed.');\n      this._droppedEventsCount++;\n      return this;\n    }\n    if (this.events.length >= this._spanLimits.eventCountLimit!) {\n      diag.warn('Dropping extra events.');\n      this.events.shift();\n      this._droppedEventsCount++;\n    }\n\n    if (isTimeInput(attributesOrStartTime)) {\n      if (!isTimeInput(timeStamp)) {\n        timeStamp = attributesOrStartTime;\n      }\n      attributesOrStartTime = undefined;\n    }\n\n    const attributes = sanitizeAttributes(attributesOrStartTime);\n\n    this.events.push({\n      name,\n      attributes,\n      time: this._getTime(timeStamp),\n      droppedAttributesCount: 0,\n    });\n    return this;\n  }\n\n  setStatus(status: SpanStatus): this {\n    if (this._isSpanEnded()) return this;\n    this.status = status;\n    return this;\n  }\n\n  updateName(name: string): this {\n    if (this._isSpanEnded()) return this;\n    this.name = name;\n    return this;\n  }\n\n  end(endTime?: TimeInput): void {\n    if (this._isSpanEnded()) {\n      diag.error(\n        `${this.name} ${this._spanContext.traceId}-${this._spanContext.spanId} - You can only call end() on a span once.`\n      );\n      return;\n    }\n    this._ended = true;\n\n    this.endTime = this._getTime(endTime);\n    this._duration = hrTimeDuration(this.startTime, this.endTime);\n\n    if (this._duration[0] < 0) {\n      diag.warn(\n        'Inconsistent start and end time, startTime > endTime. Setting span duration to 0ms.',\n        this.startTime,\n        this.endTime\n      );\n      this.endTime = this.startTime.slice() as HrTime;\n      this._duration = [0, 0];\n    }\n\n    this._spanProcessor.onEnd(this);\n  }\n\n  private _getTime(inp?: TimeInput): HrTime {\n    if (typeof inp === 'number' && inp < otperformance.now()) {\n      // must be a performance timestamp\n      // apply correction and convert to hrtime\n      return hrTime(inp + this._performanceOffset);\n    }\n\n    if (typeof inp === 'number') {\n      return millisToHrTime(inp);\n    }\n\n    if (inp instanceof Date) {\n      return millisToHrTime(inp.getTime());\n    }\n\n    if (isTimeInputHrTime(inp)) {\n      return inp;\n    }\n\n    if (this._startTimeProvided) {\n      // if user provided a time for the start manually\n      // we can't use duration to calculate event/end times\n      return millisToHrTime(Date.now());\n    }\n\n    const msDuration = otperformance.now() - this._performanceStartTime;\n    return addHrTimes(this.startTime, millisToHrTime(msDuration));\n  }\n\n  isRecording(): boolean {\n    return this._ended === false;\n  }\n\n  recordException(exception: Exception, time?: TimeInput): void {\n    const attributes: SpanAttributes = {};\n    if (typeof exception === 'string') {\n      attributes[SemanticAttributes.EXCEPTION_MESSAGE] = exception;\n    } else if (exception) {\n      if (exception.code) {\n        attributes[SemanticAttributes.EXCEPTION_TYPE] =\n          exception.code.toString();\n      } else if (exception.name) {\n        attributes[SemanticAttributes.EXCEPTION_TYPE] = exception.name;\n      }\n      if (exception.message) {\n        attributes[SemanticAttributes.EXCEPTION_MESSAGE] = exception.message;\n      }\n      if (exception.stack) {\n        attributes[SemanticAttributes.EXCEPTION_STACKTRACE] = exception.stack;\n      }\n    }\n\n    // these are minimum requirements from spec\n    if (\n      attributes[SemanticAttributes.EXCEPTION_TYPE] ||\n      attributes[SemanticAttributes.EXCEPTION_MESSAGE]\n    ) {\n      this.addEvent(ExceptionEventName, attributes, time);\n    } else {\n      diag.warn(`Failed to record an exception ${exception}`);\n    }\n  }\n\n  get duration(): HrTime {\n    return this._duration;\n  }\n\n  get ended(): boolean {\n    return this._ended;\n  }\n\n  get droppedAttributesCount(): number {\n    return this._droppedAttributesCount;\n  }\n\n  get droppedEventsCount(): number {\n    return this._droppedEventsCount;\n  }\n\n  get droppedLinksCount(): number {\n    return this._droppedLinksCount;\n  }\n\n  private _isSpanEnded(): boolean {\n    if (this._ended) {\n      diag.warn(\n        `Can not execute the operation on ended Span {traceId: ${this._spanContext.traceId}, spanId: ${this._spanContext.spanId}}`\n      );\n    }\n    return this._ended;\n  }\n\n  // Utility function to truncate given value within size\n  // for value type of string, will truncate to given limit\n  // for type of non-string, will return same value\n  private _truncateToLimitUtil(value: string, limit: number): string {\n    if (value.length <= limit) {\n      return value;\n    }\n    return value.substr(0, limit);\n  }\n\n  /**\n   * If the given attribute value is of type string and has more characters than given {@code attributeValueLengthLimit} then\n   * return string with trucated to {@code attributeValueLengthLimit} characters\n   *\n   * If the given attribute value is array of strings then\n   * return new array of strings with each element truncated to {@code attributeValueLengthLimit} characters\n   *\n   * Otherwise return same Attribute {@code value}\n   *\n   * @param value Attribute value\n   * @returns truncated attribute value if required, otherwise same value\n   */\n  private _truncateToSize(value: SpanAttributeValue): SpanAttributeValue {\n    const limit = this._attributeValueLengthLimit;\n    // Check limit\n    if (limit <= 0) {\n      // Negative values are invalid, so do not truncate\n      diag.warn(`Attribute value limit must be positive, got ${limit}`);\n      return value;\n    }\n\n    // String\n    if (typeof value === 'string') {\n      return this._truncateToLimitUtil(value, limit);\n    }\n\n    // Array of strings\n    if (Array.isArray(value)) {\n      return (value as []).map(val =>\n        typeof val === 'string' ? this._truncateToLimitUtil(val, limit) : val\n      );\n    }\n\n    // Other types, no need to apply value length limit\n    return value;\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Event name definitions\nexport const ExceptionEventName = 'exception';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport { getEnv, TracesSamplerValues, ENVIRONMENT } from '@opentelemetry/core';\nimport { Sampler } from './Sampler';\nimport { AlwaysOffSampler } from './sampler/AlwaysOffSampler';\nimport { AlwaysOnSampler } from './sampler/AlwaysOnSampler';\nimport { ParentBasedSampler } from './sampler/ParentBasedSampler';\nimport { TraceIdRatioBasedSampler } from './sampler/TraceIdRatioBasedSampler';\n\nconst env = getEnv();\nconst FALLBACK_OTEL_TRACES_SAMPLER = TracesSamplerValues.AlwaysOn;\nconst DEFAULT_RATIO = 1;\n\n/**\n * Load default configuration. For fields with primitive values, any user-provided\n * value will override the corresponding default value. For fields with\n * non-primitive values (like `spanLimits`), the user-provided value will be\n * used to extend the default value.\n */\n\n// object needs to be wrapped in this function and called when needed otherwise\n// envs are parsed before tests are ran - causes tests using these envs to fail\nexport function loadDefaultConfig() {\n  return {\n    sampler: buildSamplerFromEnv(env),\n    forceFlushTimeoutMillis: 30000,\n    generalLimits: {\n      attributeValueLengthLimit: getEnv().OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n      attributeCountLimit: getEnv().OTEL_ATTRIBUTE_COUNT_LIMIT,\n    },\n    spanLimits: {\n      attributeValueLengthLimit:\n        getEnv().OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n      attributeCountLimit: getEnv().OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT,\n      linkCountLimit: getEnv().OTEL_SPAN_LINK_COUNT_LIMIT,\n      eventCountLimit: getEnv().OTEL_SPAN_EVENT_COUNT_LIMIT,\n      attributePerEventCountLimit:\n        getEnv().OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT,\n      attributePerLinkCountLimit:\n        getEnv().OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT,\n    },\n  };\n}\n\n/**\n * Based on environment, builds a sampler, complies with specification.\n * @param environment optional, by default uses getEnv(), but allows passing a value to reuse parsed environment\n */\nexport function buildSamplerFromEnv(\n  environment: Required<ENVIRONMENT> = getEnv()\n): Sampler {\n  switch (environment.OTEL_TRACES_SAMPLER) {\n    case TracesSamplerValues.AlwaysOn:\n      return new AlwaysOnSampler();\n    case TracesSamplerValues.AlwaysOff:\n      return new AlwaysOffSampler();\n    case TracesSamplerValues.ParentBasedAlwaysOn:\n      return new ParentBasedSampler({\n        root: new AlwaysOnSampler(),\n      });\n    case TracesSamplerValues.ParentBasedAlwaysOff:\n      return new ParentBasedSampler({\n        root: new AlwaysOffSampler(),\n      });\n    case TracesSamplerValues.TraceIdRatio:\n      return new TraceIdRatioBasedSampler(\n        getSamplerProbabilityFromEnv(environment)\n      );\n    case TracesSamplerValues.ParentBasedTraceIdRatio:\n      return new ParentBasedSampler({\n        root: new TraceIdRatioBasedSampler(\n          getSamplerProbabilityFromEnv(environment)\n        ),\n      });\n    default:\n      diag.error(\n        `OTEL_TRACES_SAMPLER value \"${environment.OTEL_TRACES_SAMPLER} invalid, defaulting to ${FALLBACK_OTEL_TRACES_SAMPLER}\".`\n      );\n      return new AlwaysOnSampler();\n  }\n}\n\nfunction getSamplerProbabilityFromEnv(\n  environment: Required<ENVIRONMENT>\n): number | undefined {\n  if (\n    environment.OTEL_TRACES_SAMPLER_ARG === undefined ||\n    environment.OTEL_TRACES_SAMPLER_ARG === ''\n  ) {\n    diag.error(\n      `OTEL_TRACES_SAMPLER_ARG is blank, defaulting to ${DEFAULT_RATIO}.`\n    );\n    return DEFAULT_RATIO;\n  }\n\n  const probability = Number(environment.OTEL_TRACES_SAMPLER_ARG);\n\n  if (isNaN(probability)) {\n    diag.error(\n      `OTEL_TRACES_SAMPLER_ARG=${environment.OTEL_TRACES_SAMPLER_ARG} was given, but it is invalid, defaulting to ${DEFAULT_RATIO}.`\n    );\n    return DEFAULT_RATIO;\n  }\n\n  if (probability < 0 || probability > 1) {\n    diag.error(\n      `OTEL_TRACES_SAMPLER_ARG=${environment.OTEL_TRACES_SAMPLER_ARG} was given, but it is out of range ([0..1]), defaulting to ${DEFAULT_RATIO}.`\n    );\n    return DEFAULT_RATIO;\n  }\n\n  return probability;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  Link,\n  SpanAttributes,\n  SpanKind,\n  TraceState,\n} from '@opentelemetry/api';\n\n/**\n * A sampling decision that determines how a {@link Span} will be recorded\n * and collected.\n */\nexport enum SamplingDecision {\n  /**\n   * `Span.isRecording() === false`, span will not be recorded and all events\n   * and attributes will be dropped.\n   */\n  NOT_RECORD,\n  /**\n   * `Span.isRecording() === true`, but `Sampled` flag in {@link TraceFlags}\n   * MUST NOT be set.\n   */\n  RECORD,\n  /**\n   * `Span.isRecording() === true` AND `Sampled` flag in {@link TraceFlags}\n   * MUST be set.\n   */\n  RECORD_AND_SAMPLED,\n}\n\n/**\n * A sampling result contains a decision for a {@link Span} and additional\n * attributes the sampler would like to added to the Span.\n */\nexport interface SamplingResult {\n  /**\n   * A sampling decision, refer to {@link SamplingDecision} for details.\n   */\n  decision: SamplingDecision;\n  /**\n   * The list of attributes returned by SamplingResult MUST be immutable.\n   * Caller may call {@link Sampler}.shouldSample any number of times and\n   * can safely cache the returned value.\n   */\n  attributes?: Readonly<SpanAttributes>;\n  /**\n   * A {@link TraceState} that will be associated with the {@link Span} through\n   * the new {@link SpanContext}. Samplers SHOULD return the TraceState from\n   * the passed-in {@link Context} if they do not intend to change it. Leaving\n   * the value undefined will also leave the TraceState unchanged.\n   */\n  traceState?: TraceState;\n}\n\n/**\n * This interface represent a sampler. Sampling is a mechanism to control the\n * noise and overhead introduced by OpenTelemetry by reducing the number of\n * samples of traces collected and sent to the backend.\n */\nexport interface Sampler {\n  /**\n   * Checks whether span needs to be created and tracked.\n   *\n   * @param context Parent Context which may contain a span.\n   * @param traceId of the span to be created. It can be different from the\n   *     traceId in the {@link SpanContext}. Typically in situations when the\n   *     span to be created starts a new trace.\n   * @param spanName of the span to be created.\n   * @param spanKind of the span to be created.\n   * @param attributes Initial set of SpanAttributes for the Span being constructed.\n   * @param links Collection of links that will be associated with the Span to\n   *     be created. Typically useful for batch operations.\n   * @returns a {@link SamplingResult}.\n   */\n  shouldSample(\n    context: Context,\n    traceId: string,\n    spanName: string,\n    spanKind: SpanKind,\n    attributes: SpanAttributes,\n    links: Link[]\n  ): SamplingResult;\n\n  /** Returns the sampler name or short description with the configuration. */\n  toString(): string;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Sampler, SamplingDecision, SamplingResult } from '../Sampler';\n\n/** Sampler that samples no traces. */\nexport class AlwaysOffSampler implements Sampler {\n  shouldSample(): SamplingResult {\n    return {\n      decision: SamplingDecision.NOT_RECORD,\n    };\n  }\n\n  toString(): string {\n    return 'AlwaysOffSampler';\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Sampler, SamplingDecision, SamplingResult } from '../Sampler';\n\n/** Sampler that samples all traces. */\nexport class AlwaysOnSampler implements Sampler {\n  shouldSample(): SamplingResult {\n    return {\n      decision: SamplingDecision.RECORD_AND_SAMPLED,\n    };\n  }\n\n  toString(): string {\n    return 'AlwaysOnSampler';\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  isSpanContextValid,\n  Link,\n  SpanAttributes,\n  SpanKind,\n  TraceFlags,\n  trace,\n} from '@opentelemetry/api';\nimport { globalErrorHandler } from '@opentelemetry/core';\nimport { AlwaysOffSampler } from './AlwaysOffSampler';\nimport { AlwaysOnSampler } from './AlwaysOnSampler';\nimport { Sampler, SamplingResult } from '../Sampler';\n\n/**\n * A composite sampler that either respects the parent span's sampling decision\n * or delegates to `delegateSampler` for root spans.\n */\nexport class ParentBasedSampler implements Sampler {\n  private _root: Sampler;\n  private _remoteParentSampled: Sampler;\n  private _remoteParentNotSampled: Sampler;\n  private _localParentSampled: Sampler;\n  private _localParentNotSampled: Sampler;\n\n  constructor(config: ParentBasedSamplerConfig) {\n    this._root = config.root;\n\n    if (!this._root) {\n      globalErrorHandler(\n        new Error('ParentBasedSampler must have a root sampler configured')\n      );\n      this._root = new AlwaysOnSampler();\n    }\n\n    this._remoteParentSampled =\n      config.remoteParentSampled ?? new AlwaysOnSampler();\n    this._remoteParentNotSampled =\n      config.remoteParentNotSampled ?? new AlwaysOffSampler();\n    this._localParentSampled =\n      config.localParentSampled ?? new AlwaysOnSampler();\n    this._localParentNotSampled =\n      config.localParentNotSampled ?? new AlwaysOffSampler();\n  }\n\n  shouldSample(\n    context: Context,\n    traceId: string,\n    spanName: string,\n    spanKind: SpanKind,\n    attributes: SpanAttributes,\n    links: Link[]\n  ): SamplingResult {\n    const parentContext = trace.getSpanContext(context);\n\n    if (!parentContext || !isSpanContextValid(parentContext)) {\n      return this._root.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    if (parentContext.isRemote) {\n      if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n        return this._remoteParentSampled.shouldSample(\n          context,\n          traceId,\n          spanName,\n          spanKind,\n          attributes,\n          links\n        );\n      }\n      return this._remoteParentNotSampled.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n      return this._localParentSampled.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    return this._localParentNotSampled.shouldSample(\n      context,\n      traceId,\n      spanName,\n      spanKind,\n      attributes,\n      links\n    );\n  }\n\n  toString(): string {\n    return `ParentBased{root=${this._root.toString()}, remoteParentSampled=${this._remoteParentSampled.toString()}, remoteParentNotSampled=${this._remoteParentNotSampled.toString()}, localParentSampled=${this._localParentSampled.toString()}, localParentNotSampled=${this._localParentNotSampled.toString()}}`;\n  }\n}\n\ninterface ParentBasedSamplerConfig {\n  /** Sampler called for spans with no parent */\n  root: Sampler;\n  /** Sampler called for spans with a remote parent which was sampled. Default AlwaysOn */\n  remoteParentSampled?: Sampler;\n  /** Sampler called for spans with a remote parent which was not sampled. Default AlwaysOff */\n  remoteParentNotSampled?: Sampler;\n  /** Sampler called for spans with a local parent which was sampled. Default AlwaysOn */\n  localParentSampled?: Sampler;\n  /** Sampler called for spans with a local parent which was not sampled. Default AlwaysOff */\n  localParentNotSampled?: Sampler;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isValidTraceId } from '@opentelemetry/api';\nimport { Sampler, SamplingDecision, SamplingResult } from '../Sampler';\n\n/** Sampler that samples a given fraction of traces based of trace id deterministically. */\nexport class TraceIdRatioBasedSampler implements Sampler {\n  private _upperBound: number;\n\n  constructor(private readonly _ratio: number = 0) {\n    this._ratio = this._normalize(_ratio);\n    this._upperBound = Math.floor(this._ratio * 0xffffffff);\n  }\n\n  shouldSample(context: unknown, traceId: string): SamplingResult {\n    return {\n      decision:\n        isValidTraceId(traceId) && this._accumulate(traceId) < this._upperBound\n          ? SamplingDecision.RECORD_AND_SAMPLED\n          : SamplingDecision.NOT_RECORD,\n    };\n  }\n\n  toString(): string {\n    return `TraceIdRatioBased{${this._ratio}}`;\n  }\n\n  private _normalize(ratio: number): number {\n    if (typeof ratio !== 'number' || isNaN(ratio)) return 0;\n    return ratio >= 1 ? 1 : ratio <= 0 ? 0 : ratio;\n  }\n\n  private _accumulate(traceId: string): number {\n    let accumulation = 0;\n    for (let i = 0; i < traceId.length / 8; i++) {\n      const pos = i * 8;\n      const part = parseInt(traceId.slice(pos, pos + 8), 16);\n      accumulation = (accumulation ^ part) >>> 0;\n    }\n    return accumulation;\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { buildSamplerFromEnv, loadDefaultConfig } from './config';\nimport { Sampler } from './Sampler';\nimport { SpanLimits, TracerConfig, GeneralLimits } from './types';\nimport {\n  DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  getEnvWithoutDefaults,\n} from '@opentelemetry/core';\n\n/**\n * Function to merge Default configuration (as specified in './config') with\n * user provided configurations.\n */\nexport function mergeConfig(userConfig: TracerConfig): TracerConfig & {\n  sampler: Sampler;\n  spanLimits: SpanLimits;\n  generalLimits: GeneralLimits;\n} {\n  const perInstanceDefaults: Partial<TracerConfig> = {\n    sampler: buildSamplerFromEnv(),\n  };\n\n  const DEFAULT_CONFIG = loadDefaultConfig();\n\n  const target = Object.assign(\n    {},\n    DEFAULT_CONFIG,\n    perInstanceDefaults,\n    userConfig\n  );\n\n  target.generalLimits = Object.assign(\n    {},\n    DEFAULT_CONFIG.generalLimits,\n    userConfig.generalLimits || {}\n  );\n\n  target.spanLimits = Object.assign(\n    {},\n    DEFAULT_CONFIG.spanLimits,\n    userConfig.spanLimits || {}\n  );\n\n  return target;\n}\n\n/**\n * When general limits are provided and model specific limits are not,\n * configures the model specific limits by using the values from the general ones.\n * @param userConfig User provided tracer configuration\n */\nexport function reconfigureLimits(userConfig: TracerConfig): TracerConfig {\n  const spanLimits = Object.assign({}, userConfig.spanLimits);\n\n  const parsedEnvConfig = getEnvWithoutDefaults();\n\n  /**\n   * Reassign span attribute count limit to use first non null value defined by user or use default value\n   */\n  spanLimits.attributeCountLimit =\n    userConfig.spanLimits?.attributeCountLimit ??\n    userConfig.generalLimits?.attributeCountLimit ??\n    parsedEnvConfig.OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT ??\n    parsedEnvConfig.OTEL_ATTRIBUTE_COUNT_LIMIT ??\n    DEFAULT_ATTRIBUTE_COUNT_LIMIT;\n\n  /**\n   * Reassign span attribute value length limit to use first non null value defined by user or use default value\n   */\n  spanLimits.attributeValueLengthLimit =\n    userConfig.spanLimits?.attributeValueLengthLimit ??\n    userConfig.generalLimits?.attributeValueLengthLimit ??\n    parsedEnvConfig.OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT ??\n    parsedEnvConfig.OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT ??\n    DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT;\n\n  return Object.assign({}, userConfig, { spanLimits });\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { context, Context, diag, TraceFlags } from '@opentelemetry/api';\nimport {\n  BindOnceFuture,\n  ExportResultCode,\n  getEnv,\n  globalErrorHandler,\n  suppressTracing,\n  unrefTimer,\n} from '@opentelemetry/core';\nimport { Span } from '../Span';\nimport { SpanProcessor } from '../SpanProcessor';\nimport { BufferConfig } from '../types';\nimport { ReadableSpan } from './ReadableSpan';\nimport { SpanExporter } from './SpanExporter';\n\n/**\n * Implementation of the {@link SpanProcessor} that batches spans exported by\n * the SDK then pushes them to the exporter pipeline.\n */\nexport abstract class BatchSpanProcessorBase<T extends BufferConfig>\n  implements SpanProcessor\n{\n  private readonly _maxExportBatchSize: number;\n  private readonly _maxQueueSize: number;\n  private readonly _scheduledDelayMillis: number;\n  private readonly _exportTimeoutMillis: number;\n\n  private _isExporting = false;\n  private _finishedSpans: ReadableSpan[] = [];\n  private _timer: NodeJS.Timeout | undefined;\n  private _shutdownOnce: BindOnceFuture<void>;\n  private _droppedSpansCount: number = 0;\n\n  constructor(\n    private readonly _exporter: SpanExporter,\n    config?: T\n  ) {\n    const env = getEnv();\n    this._maxExportBatchSize =\n      typeof config?.maxExportBatchSize === 'number'\n        ? config.maxExportBatchSize\n        : env.OTEL_BSP_MAX_EXPORT_BATCH_SIZE;\n    this._maxQueueSize =\n      typeof config?.maxQueueSize === 'number'\n        ? config.maxQueueSize\n        : env.OTEL_BSP_MAX_QUEUE_SIZE;\n    this._scheduledDelayMillis =\n      typeof config?.scheduledDelayMillis === 'number'\n        ? config.scheduledDelayMillis\n        : env.OTEL_BSP_SCHEDULE_DELAY;\n    this._exportTimeoutMillis =\n      typeof config?.exportTimeoutMillis === 'number'\n        ? config.exportTimeoutMillis\n        : env.OTEL_BSP_EXPORT_TIMEOUT;\n\n    this._shutdownOnce = new BindOnceFuture(this._shutdown, this);\n\n    if (this._maxExportBatchSize > this._maxQueueSize) {\n      diag.warn(\n        'BatchSpanProcessor: maxExportBatchSize must be smaller or equal to maxQueueSize, setting maxExportBatchSize to match maxQueueSize'\n      );\n      this._maxExportBatchSize = this._maxQueueSize;\n    }\n  }\n\n  forceFlush(): Promise<void> {\n    if (this._shutdownOnce.isCalled) {\n      return this._shutdownOnce.promise;\n    }\n    return this._flushAll();\n  }\n\n  // does nothing.\n  onStart(_span: Span, _parentContext: Context): void {}\n\n  onEnd(span: ReadableSpan): void {\n    if (this._shutdownOnce.isCalled) {\n      return;\n    }\n\n    if ((span.spanContext().traceFlags & TraceFlags.SAMPLED) === 0) {\n      return;\n    }\n\n    this._addToBuffer(span);\n  }\n\n  shutdown(): Promise<void> {\n    return this._shutdownOnce.call();\n  }\n\n  private _shutdown() {\n    return Promise.resolve()\n      .then(() => {\n        return this.onShutdown();\n      })\n      .then(() => {\n        return this._flushAll();\n      })\n      .then(() => {\n        return this._exporter.shutdown();\n      });\n  }\n\n  /** Add a span in the buffer. */\n  private _addToBuffer(span: ReadableSpan) {\n    if (this._finishedSpans.length >= this._maxQueueSize) {\n      // limit reached, drop span\n\n      if (this._droppedSpansCount === 0) {\n        diag.debug('maxQueueSize reached, dropping spans');\n      }\n      this._droppedSpansCount++;\n\n      return;\n    }\n\n    if (this._droppedSpansCount > 0) {\n      // some spans were dropped, log once with count of spans dropped\n      diag.warn(\n        `Dropped ${this._droppedSpansCount} spans because maxQueueSize reached`\n      );\n      this._droppedSpansCount = 0;\n    }\n\n    this._finishedSpans.push(span);\n    this._maybeStartTimer();\n  }\n\n  /**\n   * Send all spans to the exporter respecting the batch size limit\n   * This function is used only on forceFlush or shutdown,\n   * for all other cases _flush should be used\n   * */\n  private _flushAll(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const promises = [];\n      // calculate number of batches\n      const count = Math.ceil(\n        this._finishedSpans.length / this._maxExportBatchSize\n      );\n      for (let i = 0, j = count; i < j; i++) {\n        promises.push(this._flushOneBatch());\n      }\n      Promise.all(promises)\n        .then(() => {\n          resolve();\n        })\n        .catch(reject);\n    });\n  }\n\n  private _flushOneBatch(): Promise<void> {\n    this._clearTimer();\n    if (this._finishedSpans.length === 0) {\n      return Promise.resolve();\n    }\n    return new Promise((resolve, reject) => {\n      const timer = setTimeout(() => {\n        // don't wait anymore for export, this way the next batch can start\n        reject(new Error('Timeout'));\n      }, this._exportTimeoutMillis);\n      // prevent downstream exporter calls from generating spans\n      context.with(suppressTracing(context.active()), () => {\n        // Reset the finished spans buffer here because the next invocations of the _flush method\n        // could pass the same finished spans to the exporter if the buffer is cleared\n        // outside the execution of this callback.\n        const spans = this._finishedSpans.splice(0, this._maxExportBatchSize);\n\n        const doExport = () =>\n          this._exporter.export(spans, result => {\n            clearTimeout(timer);\n            if (result.code === ExportResultCode.SUCCESS) {\n              resolve();\n            } else {\n              reject(\n                result.error ??\n                  new Error('BatchSpanProcessor: span export failed')\n              );\n            }\n          });\n        const pendingResources = spans\n          .map(span => span.resource)\n          .filter(resource => resource.asyncAttributesPending);\n\n        // Avoid scheduling a promise to make the behavior more predictable and easier to test\n        if (pendingResources.length === 0) {\n          doExport();\n        } else {\n          Promise.all(\n            pendingResources.map(\n              resource => resource.waitForAsyncAttributes?.()\n            )\n          ).then(doExport, err => {\n            globalErrorHandler(err);\n            reject(err);\n          });\n        }\n      });\n    });\n  }\n\n  private _maybeStartTimer() {\n    if (this._isExporting) return;\n    const flush = () => {\n      this._isExporting = true;\n      this._flushOneBatch()\n        .then(() => {\n          this._isExporting = false;\n          if (this._finishedSpans.length > 0) {\n            this._clearTimer();\n            this._maybeStartTimer();\n          }\n        })\n        .catch(e => {\n          this._isExporting = false;\n          globalErrorHandler(e);\n        });\n    };\n    // we only wait if the queue doesn't have enough elements yet\n    if (this._finishedSpans.length >= this._maxExportBatchSize) {\n      return flush();\n    }\n    if (this._timer !== undefined) return;\n    this._timer = setTimeout(() => flush(), this._scheduledDelayMillis);\n    unrefTimer(this._timer);\n  }\n\n  private _clearTimer() {\n    if (this._timer !== undefined) {\n      clearTimeout(this._timer);\n      this._timer = undefined;\n    }\n  }\n\n  protected abstract onShutdown(): void;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BatchSpanProcessorBase } from '../../../export/BatchSpanProcessorBase';\nimport { SpanExporter } from '../../../export/SpanExporter';\nimport { BatchSpanProcessorBrowserConfig } from '../../../types';\n\nexport class BatchSpanProcessor extends BatchSpanProcessorBase<BatchSpanProcessorBrowserConfig> {\n  private _visibilityChangeListener?: () => void;\n  private _pageHideListener?: () => void;\n\n  constructor(\n    _exporter: SpanExporter,\n    config?: BatchSpanProcessorBrowserConfig\n  ) {\n    super(_exporter, config);\n    this.onInit(config);\n  }\n\n  private onInit(config?: BatchSpanProcessorBrowserConfig): void {\n    if (\n      config?.disableAutoFlushOnDocumentHide !== true &&\n      typeof document !== 'undefined'\n    ) {\n      this._visibilityChangeListener = () => {\n        if (document.visibilityState === 'hidden') {\n          void this.forceFlush();\n        }\n      };\n      this._pageHideListener = () => {\n        void this.forceFlush();\n      };\n      document.addEventListener(\n        'visibilitychange',\n        this._visibilityChangeListener\n      );\n\n      // use 'pagehide' event as a fallback for Safari; see https://bugs.webkit.org/show_bug.cgi?id=116769\n      document.addEventListener('pagehide', this._pageHideListener);\n    }\n  }\n\n  protected onShutdown(): void {\n    if (typeof document !== 'undefined') {\n      if (this._visibilityChangeListener) {\n        document.removeEventListener(\n          'visibilitychange',\n          this._visibilityChangeListener\n        );\n      }\n      if (this._pageHideListener) {\n        document.removeEventListener('pagehide', this._pageHideListener);\n      }\n    }\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IdGenerator } from '../../IdGenerator';\n\nconst SPAN_ID_BYTES = 8;\nconst TRACE_ID_BYTES = 16;\n\nexport class RandomIdGenerator implements IdGenerator {\n  /**\n   * Returns a random 16-byte trace ID formatted/encoded as a 32 lowercase hex\n   * characters corresponding to 128 bits.\n   */\n  generateTraceId = getIdGenerator(TRACE_ID_BYTES);\n\n  /**\n   * Returns a random 8-byte span ID formatted/encoded as a 16 lowercase hex\n   * characters corresponding to 64 bits.\n   */\n  generateSpanId = getIdGenerator(SPAN_ID_BYTES);\n}\n\nconst SHARED_CHAR_CODES_ARRAY = Array(32);\nfunction getIdGenerator(bytes: number): () => string {\n  return function generateId() {\n    for (let i = 0; i < bytes * 2; i++) {\n      SHARED_CHAR_CODES_ARRAY[i] = Math.floor(Math.random() * 16) + 48;\n      // valid hex characters in the range 48-57 and 97-102\n      if (SHARED_CHAR_CODES_ARRAY[i] >= 58) {\n        SHARED_CHAR_CODES_ARRAY[i] += 39;\n      }\n    }\n    return String.fromCharCode.apply(\n      null,\n      SHARED_CHAR_CODES_ARRAY.slice(0, bytes * 2)\n    );\n  };\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  context,\n  diag,\n  propagation,\n  TextMapPropagator,\n  trace,\n  TracerProvider,\n} from '@opentelemetry/api';\nimport {\n  CompositePropagator,\n  W3CBaggagePropagator,\n  W3CTraceContextPropagator,\n  getEnv,\n  merge,\n} from '@opentelemetry/core';\nimport { IResource, Resource } from '@opentelemetry/resources';\nimport { SpanProcessor, Tracer } from '.';\nimport { loadDefaultConfig } from './config';\nimport { MultiSpanProcessor } from './MultiSpanProcessor';\nimport { NoopSpanProcessor } from './export/NoopSpanProcessor';\nimport { SDKRegistrationConfig, TracerConfig } from './types';\nimport { SpanExporter } from './export/SpanExporter';\nimport { BatchSpanProcessor } from './platform';\nimport { reconfigureLimits } from './utility';\n\nexport type PROPAGATOR_FACTORY = () => TextMapPropagator;\nexport type EXPORTER_FACTORY = () => SpanExporter;\n\nexport enum ForceFlushState {\n  'resolved',\n  'timeout',\n  'error',\n  'unresolved',\n}\n\n/**\n * This class represents a basic tracer provider which platform libraries can extend\n */\nexport class BasicTracerProvider implements TracerProvider {\n  protected static readonly _registeredPropagators = new Map<\n    string,\n    PROPAGATOR_FACTORY\n  >([\n    ['tracecontext', () => new W3CTraceContextPropagator()],\n    ['baggage', () => new W3CBaggagePropagator()],\n  ]);\n\n  protected static readonly _registeredExporters = new Map<\n    string,\n    EXPORTER_FACTORY\n  >();\n\n  private readonly _config: TracerConfig;\n  private readonly _registeredSpanProcessors: SpanProcessor[] = [];\n  private readonly _tracers: Map<string, Tracer> = new Map();\n\n  activeSpanProcessor: SpanProcessor;\n  readonly resource: IResource;\n\n  constructor(config: TracerConfig = {}) {\n    const mergedConfig = merge(\n      {},\n      loadDefaultConfig(),\n      reconfigureLimits(config)\n    );\n    this.resource = mergedConfig.resource ?? Resource.empty();\n    this.resource = Resource.default().merge(this.resource);\n    this._config = Object.assign({}, mergedConfig, {\n      resource: this.resource,\n    });\n\n    const defaultExporter = this._buildExporterFromEnv();\n    if (defaultExporter !== undefined) {\n      const batchProcessor = new BatchSpanProcessor(defaultExporter);\n      this.activeSpanProcessor = batchProcessor;\n    } else {\n      this.activeSpanProcessor = new NoopSpanProcessor();\n    }\n  }\n\n  getTracer(\n    name: string,\n    version?: string,\n    options?: { schemaUrl?: string }\n  ): Tracer {\n    const key = `${name}@${version || ''}:${options?.schemaUrl || ''}`;\n    if (!this._tracers.has(key)) {\n      this._tracers.set(\n        key,\n        new Tracer(\n          { name, version, schemaUrl: options?.schemaUrl },\n          this._config,\n          this\n        )\n      );\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this._tracers.get(key)!;\n  }\n\n  /**\n   * Adds a new {@link SpanProcessor} to this tracer.\n   * @param spanProcessor the new SpanProcessor to be added.\n   */\n  addSpanProcessor(spanProcessor: SpanProcessor): void {\n    if (this._registeredSpanProcessors.length === 0) {\n      // since we might have enabled by default a batchProcessor, we disable it\n      // before adding the new one\n      this.activeSpanProcessor\n        .shutdown()\n        .catch(err =>\n          diag.error(\n            'Error while trying to shutdown current span processor',\n            err\n          )\n        );\n    }\n    this._registeredSpanProcessors.push(spanProcessor);\n    this.activeSpanProcessor = new MultiSpanProcessor(\n      this._registeredSpanProcessors\n    );\n  }\n\n  getActiveSpanProcessor(): SpanProcessor {\n    return this.activeSpanProcessor;\n  }\n\n  /**\n   * Register this TracerProvider for use with the OpenTelemetry API.\n   * Undefined values may be replaced with defaults, and\n   * null values will be skipped.\n   *\n   * @param config Configuration object for SDK registration\n   */\n  register(config: SDKRegistrationConfig = {}): void {\n    trace.setGlobalTracerProvider(this);\n    if (config.propagator === undefined) {\n      config.propagator = this._buildPropagatorFromEnv();\n    }\n\n    if (config.contextManager) {\n      context.setGlobalContextManager(config.contextManager);\n    }\n\n    if (config.propagator) {\n      propagation.setGlobalPropagator(config.propagator);\n    }\n  }\n\n  forceFlush(): Promise<void> {\n    const timeout = this._config.forceFlushTimeoutMillis;\n    const promises = this._registeredSpanProcessors.map(\n      (spanProcessor: SpanProcessor) => {\n        return new Promise(resolve => {\n          let state: ForceFlushState;\n          const timeoutInterval = setTimeout(() => {\n            resolve(\n              new Error(\n                `Span processor did not completed within timeout period of ${timeout} ms`\n              )\n            );\n            state = ForceFlushState.timeout;\n          }, timeout);\n\n          spanProcessor\n            .forceFlush()\n            .then(() => {\n              clearTimeout(timeoutInterval);\n              if (state !== ForceFlushState.timeout) {\n                state = ForceFlushState.resolved;\n                resolve(state);\n              }\n            })\n            .catch(error => {\n              clearTimeout(timeoutInterval);\n              state = ForceFlushState.error;\n              resolve(error);\n            });\n        });\n      }\n    );\n\n    return new Promise<void>((resolve, reject) => {\n      Promise.all(promises)\n        .then(results => {\n          const errors = results.filter(\n            result => result !== ForceFlushState.resolved\n          );\n          if (errors.length > 0) {\n            reject(errors);\n          } else {\n            resolve();\n          }\n        })\n        .catch(error => reject([error]));\n    });\n  }\n\n  shutdown(): Promise<void> {\n    return this.activeSpanProcessor.shutdown();\n  }\n\n  /**\n   * TS cannot yet infer the type of this.constructor:\n   * https://github.com/Microsoft/TypeScript/issues/3841#issuecomment-337560146\n   * There is no need to override either of the getters in your child class.\n   * The type of the registered component maps should be the same across all\n   * classes in the inheritance tree.\n   */\n  protected _getPropagator(name: string): TextMapPropagator | undefined {\n    return (\n      this.constructor as typeof BasicTracerProvider\n    )._registeredPropagators.get(name)?.();\n  }\n\n  protected _getSpanExporter(name: string): SpanExporter | undefined {\n    return (\n      this.constructor as typeof BasicTracerProvider\n    )._registeredExporters.get(name)?.();\n  }\n\n  protected _buildPropagatorFromEnv(): TextMapPropagator | undefined {\n    // per spec, propagators from env must be deduplicated\n    const uniquePropagatorNames = Array.from(\n      new Set(getEnv().OTEL_PROPAGATORS)\n    );\n\n    const propagators = uniquePropagatorNames.map(name => {\n      const propagator = this._getPropagator(name);\n      if (!propagator) {\n        diag.warn(\n          `Propagator \"${name}\" requested through environment variable is unavailable.`\n        );\n      }\n\n      return propagator;\n    });\n    const validPropagators = propagators.reduce<TextMapPropagator[]>(\n      (list, item) => {\n        if (item) {\n          list.push(item);\n        }\n        return list;\n      },\n      []\n    );\n\n    if (validPropagators.length === 0) {\n      return;\n    } else if (uniquePropagatorNames.length === 1) {\n      return validPropagators[0];\n    } else {\n      return new CompositePropagator({\n        propagators: validPropagators,\n      });\n    }\n  }\n\n  protected _buildExporterFromEnv(): SpanExporter | undefined {\n    const exporterName = getEnv().OTEL_TRACES_EXPORTER;\n    if (exporterName === 'none' || exporterName === '') return;\n    const exporter = this._getSpanExporter(exporterName);\n    if (!exporter) {\n      diag.error(\n        `Exporter \"${exporterName}\" requested through environment variable is unavailable.`\n      );\n    }\n    return exporter;\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { SDK_INFO } from '@opentelemetry/core';\nimport { ResourceAttributes } from './types';\nimport { defaultServiceName } from './platform';\nimport { IResource } from './IResource';\n\n/**\n * A Resource describes the entity for which a signals (metrics or trace) are\n * collected.\n */\nexport class Resource implements IResource {\n  static readonly EMPTY = new Resource({});\n  private _syncAttributes?: ResourceAttributes;\n  private _asyncAttributesPromise?: Promise<ResourceAttributes>;\n  private _attributes?: ResourceAttributes;\n\n  /**\n   * Check if async attributes have resolved. This is useful to avoid awaiting\n   * waitForAsyncAttributes (which will introduce asynchronous behavior) when not necessary.\n   *\n   * @returns true if the resource \"attributes\" property is not yet settled to its final value\n   */\n  public asyncAttributesPending?: boolean;\n\n  /**\n   * Returns an empty Resource\n   */\n  static empty(): IResource {\n    return Resource.EMPTY;\n  }\n\n  /**\n   * Returns a Resource that identifies the SDK in use.\n   */\n  static default(): IResource {\n    return new Resource({\n      [SemanticResourceAttributes.SERVICE_NAME]: defaultServiceName(),\n      [SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE]:\n        SDK_INFO[SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE],\n      [SemanticResourceAttributes.TELEMETRY_SDK_NAME]:\n        SDK_INFO[SemanticResourceAttributes.TELEMETRY_SDK_NAME],\n      [SemanticResourceAttributes.TELEMETRY_SDK_VERSION]:\n        SDK_INFO[SemanticResourceAttributes.TELEMETRY_SDK_VERSION],\n    });\n  }\n\n  constructor(\n    /**\n     * A dictionary of attributes with string keys and values that provide\n     * information about the entity as numbers, strings or booleans\n     * TODO: Consider to add check/validation on attributes.\n     */\n    attributes: ResourceAttributes,\n    asyncAttributesPromise?: Promise<ResourceAttributes>\n  ) {\n    this._attributes = attributes;\n    this.asyncAttributesPending = asyncAttributesPromise != null;\n    this._syncAttributes = this._attributes ?? {};\n    this._asyncAttributesPromise = asyncAttributesPromise?.then(\n      asyncAttributes => {\n        this._attributes = Object.assign({}, this._attributes, asyncAttributes);\n        this.asyncAttributesPending = false;\n        return asyncAttributes;\n      },\n      err => {\n        diag.debug(\"a resource's async attributes promise rejected: %s\", err);\n        this.asyncAttributesPending = false;\n        return {};\n      }\n    );\n  }\n\n  get attributes(): ResourceAttributes {\n    if (this.asyncAttributesPending) {\n      diag.error(\n        'Accessing resource attributes before async attributes settled'\n      );\n    }\n\n    return this._attributes ?? {};\n  }\n\n  /**\n   * Returns a promise that will never be rejected. Resolves when all async attributes have finished being added to\n   * this Resource's attributes. This is useful in exporters to block until resource detection\n   * has finished.\n   */\n  async waitForAsyncAttributes?(): Promise<void> {\n    if (this.asyncAttributesPending) {\n      await this._asyncAttributesPromise;\n    }\n  }\n\n  /**\n   * Returns a new, merged {@link Resource} by merging the current Resource\n   * with the other Resource. In case of a collision, other Resource takes\n   * precedence.\n   *\n   * @param other the Resource that will be merged with this.\n   * @returns the newly merged Resource.\n   */\n  merge(other: IResource | null): IResource {\n    if (!other) return this;\n\n    // SpanAttributes from other resource overwrite attributes from this resource.\n    const mergedSyncAttributes = {\n      ...this._syncAttributes,\n      //Support for old resource implementation where _syncAttributes is not defined\n      ...((other as Resource)._syncAttributes ?? other.attributes),\n    };\n\n    if (\n      !this._asyncAttributesPromise &&\n      !(other as Resource)._asyncAttributesPromise\n    ) {\n      return new Resource(mergedSyncAttributes);\n    }\n\n    const mergedAttributesPromise = Promise.all([\n      this._asyncAttributesPromise,\n      (other as Resource)._asyncAttributesPromise,\n    ]).then(([thisAsyncAttributes, otherAsyncAttributes]) => {\n      return {\n        ...this._syncAttributes,\n        ...thisAsyncAttributes,\n        //Support for old resource implementation where _syncAttributes is not defined\n        ...((other as Resource)._syncAttributes ?? other.attributes),\n        ...otherAsyncAttributes,\n      };\n    });\n\n    return new Resource(mergedSyncAttributes, mergedAttributesPromise);\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function defaultServiceName(): string {\n  return 'unknown_service';\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport { getEnv } from '@opentelemetry/core';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { Resource } from '../Resource';\nimport { DetectorSync, ResourceAttributes } from '../types';\nimport { ResourceDetectionConfig } from '../config';\nimport { IResource } from '../IResource';\n\n/**\n * EnvDetectorSync can be used to detect the presence of and create a Resource\n * from the OTEL_RESOURCE_ATTRIBUTES environment variable.\n */\nclass EnvDetectorSync implements DetectorSync {\n  // Type, attribute keys, and attribute values should not exceed 256 characters.\n  private readonly _MAX_LENGTH = 255;\n\n  // OTEL_RESOURCE_ATTRIBUTES is a comma-separated list of attributes.\n  private readonly _COMMA_SEPARATOR = ',';\n\n  // OTEL_RESOURCE_ATTRIBUTES contains key value pair separated by '='.\n  private readonly _LABEL_KEY_VALUE_SPLITTER = '=';\n\n  private readonly _ERROR_MESSAGE_INVALID_CHARS =\n    'should be a ASCII string with a length greater than 0 and not exceed ' +\n    this._MAX_LENGTH +\n    ' characters.';\n\n  private readonly _ERROR_MESSAGE_INVALID_VALUE =\n    'should be a ASCII string with a length not exceed ' +\n    this._MAX_LENGTH +\n    ' characters.';\n\n  /**\n   * Returns a {@link Resource} populated with attributes from the\n   * OTEL_RESOURCE_ATTRIBUTES environment variable. Note this is an async\n   * function to conform to the Detector interface.\n   *\n   * @param config The resource detection config\n   */\n  detect(_config?: ResourceDetectionConfig): IResource {\n    const attributes: ResourceAttributes = {};\n    const env = getEnv();\n\n    const rawAttributes = env.OTEL_RESOURCE_ATTRIBUTES;\n    const serviceName = env.OTEL_SERVICE_NAME;\n\n    if (rawAttributes) {\n      try {\n        const parsedAttributes = this._parseResourceAttributes(rawAttributes);\n        Object.assign(attributes, parsedAttributes);\n      } catch (e) {\n        diag.debug(`EnvDetector failed: ${e.message}`);\n      }\n    }\n\n    if (serviceName) {\n      attributes[SemanticResourceAttributes.SERVICE_NAME] = serviceName;\n    }\n\n    return new Resource(attributes);\n  }\n\n  /**\n   * Creates an attribute map from the OTEL_RESOURCE_ATTRIBUTES environment\n   * variable.\n   *\n   * OTEL_RESOURCE_ATTRIBUTES: A comma-separated list of attributes describing\n   * the source in more detail, e.g. “key1=val1,key2=val2”. Domain names and\n   * paths are accepted as attribute keys. Values may be quoted or unquoted in\n   * general. If a value contains whitespaces, =, or \" characters, it must\n   * always be quoted.\n   *\n   * @param rawEnvAttributes The resource attributes as a comma-seperated list\n   * of key/value pairs.\n   * @returns The sanitized resource attributes.\n   */\n  private _parseResourceAttributes(\n    rawEnvAttributes?: string\n  ): ResourceAttributes {\n    if (!rawEnvAttributes) return {};\n\n    const attributes: ResourceAttributes = {};\n    const rawAttributes: string[] = rawEnvAttributes.split(\n      this._COMMA_SEPARATOR,\n      -1\n    );\n    for (const rawAttribute of rawAttributes) {\n      const keyValuePair: string[] = rawAttribute.split(\n        this._LABEL_KEY_VALUE_SPLITTER,\n        -1\n      );\n      if (keyValuePair.length !== 2) {\n        continue;\n      }\n      let [key, value] = keyValuePair;\n      // Leading and trailing whitespaces are trimmed.\n      key = key.trim();\n      value = value.trim().split(/^\"|\"$/).join('');\n      if (!this._isValidAndNotEmpty(key)) {\n        throw new Error(`Attribute key ${this._ERROR_MESSAGE_INVALID_CHARS}`);\n      }\n      if (!this._isValid(value)) {\n        throw new Error(`Attribute value ${this._ERROR_MESSAGE_INVALID_VALUE}`);\n      }\n      attributes[key] = decodeURIComponent(value);\n    }\n    return attributes;\n  }\n\n  /**\n   * Determines whether the given String is a valid printable ASCII string with\n   * a length not exceed _MAX_LENGTH characters.\n   *\n   * @param str The String to be validated.\n   * @returns Whether the String is valid.\n   */\n  private _isValid(name: string): boolean {\n    return name.length <= this._MAX_LENGTH && this._isBaggageOctetString(name);\n  }\n\n  // https://www.w3.org/TR/baggage/#definition\n  private _isBaggageOctetString(str: string): boolean {\n    for (let i = 0; i < str.length; i++) {\n      const ch = str.charCodeAt(i);\n      if (ch < 0x21 || ch === 0x2c || ch === 0x3b || ch === 0x5c || ch > 0x7e) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Determines whether the given String is a valid printable ASCII string with\n   * a length greater than 0 and not exceed _MAX_LENGTH characters.\n   *\n   * @param str The String to be validated.\n   * @returns Whether the String is valid and not empty.\n   */\n  private _isValidAndNotEmpty(str: string): boolean {\n    return str.length > 0 && this._isValid(str);\n  }\n}\n\nexport const envDetectorSync = new EnvDetectorSync();\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Resource } from './Resource';\nimport { ResourceDetectionConfig } from './config';\nimport { diag } from '@opentelemetry/api';\nimport { isPromiseLike } from './utils';\nimport { Detector, DetectorSync } from './types';\nimport { IResource } from './IResource';\n\n/**\n * Runs all resource detectors and returns the results merged into a single Resource. Promise\n * does not resolve until all the underlying detectors have resolved, unlike\n * detectResourcesSync.\n *\n * @deprecated use detectResourcesSync() instead.\n * @param config Configuration for resource detection\n */\nexport const detectResources = async (\n  config: ResourceDetectionConfig = {}\n): Promise<IResource> => {\n  const resources: IResource[] = await Promise.all(\n    (config.detectors || []).map(async d => {\n      try {\n        const resource = await d.detect(config);\n        diag.debug(`${d.constructor.name} found resource.`, resource);\n        return resource;\n      } catch (e) {\n        diag.debug(`${d.constructor.name} failed: ${e.message}`);\n        return Resource.empty();\n      }\n    })\n  );\n\n  // Future check if verbose logging is enabled issue #1903\n  logResources(resources);\n\n  return resources.reduce(\n    (acc, resource) => acc.merge(resource),\n    Resource.empty()\n  );\n};\n\n/**\n * Runs all resource detectors synchronously, merging their results. In case of attribute collision later resources will take precedence.\n *\n * @param config Configuration for resource detection\n */\nexport const detectResourcesSync = (\n  config: ResourceDetectionConfig = {}\n): IResource => {\n  const resources: IResource[] = (config.detectors ?? []).map(\n    (d: Detector | DetectorSync) => {\n      try {\n        const resourceOrPromise = d.detect(config);\n        let resource: IResource;\n        if (isPromiseLike<Resource>(resourceOrPromise)) {\n          const createPromise = async () => {\n            const resolvedResource = await resourceOrPromise;\n            return resolvedResource.attributes;\n          };\n          resource = new Resource({}, createPromise());\n        } else {\n          resource = resourceOrPromise as IResource;\n        }\n\n        if (resource.waitForAsyncAttributes) {\n          void resource\n            .waitForAsyncAttributes()\n            .then(() =>\n              diag.debug(`${d.constructor.name} found resource.`, resource)\n            );\n        } else {\n          diag.debug(`${d.constructor.name} found resource.`, resource);\n        }\n\n        return resource;\n      } catch (e) {\n        diag.error(`${d.constructor.name} failed: ${e.message}`);\n        return Resource.empty();\n      }\n    }\n  );\n\n  const mergedResources = resources.reduce(\n    (acc, resource) => acc.merge(resource),\n    Resource.empty()\n  );\n\n  if (mergedResources.waitForAsyncAttributes) {\n    void mergedResources.waitForAsyncAttributes().then(() => {\n      // Future check if verbose logging is enabled issue #1903\n      logResources(resources);\n    });\n  }\n\n  return mergedResources;\n};\n\n/**\n * Writes debug information about the detected resources to the logger defined in the resource detection config, if one is provided.\n *\n * @param resources The array of {@link Resource} that should be logged. Empty entries will be ignored.\n */\nconst logResources = (resources: Array<IResource>) => {\n  resources.forEach(resource => {\n    // Print only populated resources\n    if (Object.keys(resource.attributes).length > 0) {\n      const resourceDebugString = JSON.stringify(resource.attributes, null, 4);\n      diag.verbose(resourceDebugString);\n    }\n  });\n};\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const isPromiseLike = <R>(val: any): val is PromiseLike<R> => {\n  return (\n    val !== null && typeof val === 'object' && typeof val.then === 'function'\n  );\n};\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '@opentelemetry/api';\nimport { globalErrorHandler } from '@opentelemetry/core';\nimport { ReadableSpan } from './export/ReadableSpan';\nimport { Span } from './Span';\nimport { SpanProcessor } from './SpanProcessor';\n\n/**\n * Implementation of the {@link SpanProcessor} that simply forwards all\n * received events to a list of {@link SpanProcessor}s.\n */\nexport class MultiSpanProcessor implements SpanProcessor {\n  constructor(private readonly _spanProcessors: SpanProcessor[]) {}\n\n  forceFlush(): Promise<void> {\n    const promises: Promise<void>[] = [];\n\n    for (const spanProcessor of this._spanProcessors) {\n      promises.push(spanProcessor.forceFlush());\n    }\n    return new Promise(resolve => {\n      Promise.all(promises)\n        .then(() => {\n          resolve();\n        })\n        .catch(error => {\n          globalErrorHandler(\n            error || new Error('MultiSpanProcessor: forceFlush failed')\n          );\n          resolve();\n        });\n    });\n  }\n\n  onStart(span: Span, context: Context): void {\n    for (const spanProcessor of this._spanProcessors) {\n      spanProcessor.onStart(span, context);\n    }\n  }\n\n  onEnd(span: ReadableSpan): void {\n    for (const spanProcessor of this._spanProcessors) {\n      spanProcessor.onEnd(span);\n    }\n  }\n\n  shutdown(): Promise<void> {\n    const promises: Promise<void>[] = [];\n\n    for (const spanProcessor of this._spanProcessors) {\n      promises.push(spanProcessor.shutdown());\n    }\n    return new Promise((resolve, reject) => {\n      Promise.all(promises).then(() => {\n        resolve();\n      }, reject);\n    });\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '@opentelemetry/api';\nimport { ReadableSpan } from './ReadableSpan';\nimport { Span } from '../Span';\nimport { SpanProcessor } from '../SpanProcessor';\n\n/** No-op implementation of SpanProcessor */\nexport class NoopSpanProcessor implements SpanProcessor {\n  onStart(_span: Span, _context: Context): void {}\n  onEnd(_span: ReadableSpan): void {}\n  shutdown(): Promise<void> {\n    return Promise.resolve();\n  }\n  forceFlush(): Promise<void> {\n    return Promise.resolve();\n  }\n}\n","import type { ContextManager, TextMapPropagator } from \"@opentelemetry/api\";\nimport type { InstrumentationOption } from \"@opentelemetry/instrumentation\";\nimport type { ResourceDetectionConfig } from \"@opentelemetry/resources\";\nimport type {\n  Sampler,\n  SpanExporter,\n  SpanProcessor,\n} from \"@opentelemetry/sdk-trace-base\";\nimport {\n  AlwaysOffSampler,\n  AlwaysOnSampler,\n  ParentBasedSampler,\n  TraceIdRatioBasedSampler,\n  BasicTracerProvider,\n  BatchSpanProcessor,\n  RandomIdGenerator,\n} from \"@opentelemetry/sdk-trace-base\";\nimport { metrics, diag, DiagConsoleLogger, DiagLogLevel } from \"@opentelemetry/api\";\nimport { logs } from \"@opentelemetry/api-logs\";\nimport { registerInstrumentations } from \"@opentelemetry/instrumentation/build/src/autoLoader\";\nimport {\n  detectResourcesSync,\n  envDetectorSync,\n  Resource,\n} from \"@opentelemetry/resources\";\nimport { LoggerProvider } from \"@opentelemetry/sdk-logs\";\nimport { MeterProvider } from \"@opentelemetry/sdk-metrics\";\nimport { SemanticResourceAttributes } from \"@opentelemetry/semantic-conventions\";\nimport {\n  parseEnvironment,\n  DEFAULT_ENVIRONMENT,\n} from \"@opentelemetry/core/build/src/utils/environment\";\nimport { AsyncLocalStorageContextManager } from \"@opentelemetry/context-async-hooks/build/src/AsyncLocalStorageContextManager\";\nimport {\n  CompositePropagator,\n  W3CBaggagePropagator,\n  baggageUtils,\n} from \"@opentelemetry/core\";\nimport { CompositeSpanProcessor } from \"./processor/composite-span-processor\";\nimport { OTLPHttpJsonTraceExporter } from \"./exporters/exporter-trace-otlp-http-fetch\";\nimport { OTLPHttpProtoTraceExporter } from \"./exporters/exporter-trace-otlp-proto-fetch\";\nimport { omitUndefinedAttributes } from \"./util/attributes\";\nimport type {\n  Configuration,\n  InstrumentationConfiguration,\n  InstrumentationOptionOrName,\n  PropagatorOrName,\n  SampleOrName,\n  SpanProcessorOrName,\n} from \"./types\";\nimport { FetchInstrumentation } from \"./instrumentations/fetch\";\nimport { W3CTraceContextPropagator } from \"./propagators/w3c-tracecontext-propagator\";\nimport { VercelRuntimePropagator } from \"./vercel-request-context/propagator\";\nimport { VercelRuntimeSpanExporter } from \"./vercel-request-context/exporter\";\n\ntype Env = ReturnType<typeof parseEnvironment>;\n\nconst logLevelMap: Record<string, DiagLogLevel> = {\n  ALL: DiagLogLevel.ALL,\n  VERBOSE: DiagLogLevel.VERBOSE,\n  DEBUG: DiagLogLevel.DEBUG,\n  INFO: DiagLogLevel.INFO,\n  WARN: DiagLogLevel.WARN,\n  ERROR: DiagLogLevel.ERROR,\n  NONE: DiagLogLevel.NONE,\n};\n\nexport class Sdk {\n  private contextManager: ContextManager | undefined;\n  private tracerProvider: BasicTracerProvider | undefined;\n  private loggerProvider: LoggerProvider | undefined;\n  private meterProvider: MeterProvider | undefined;\n  private disableInstrumentations: (() => void) | undefined;\n\n  public constructor(private configuration: Configuration = {}) { }\n\n  public start(): void {\n    const env = getEnv();\n    const configuration = this.configuration;\n    const runtime = process.env.NEXT_RUNTIME || \"nodejs\";\n\n    const disabled = Boolean(env.OTEL_SDK_DISABLED);\n\n    // Default is INFO, use environment without defaults to check\n    // if the user originally set the environment variable.\n    if (process.env.OTEL_LOG_LEVEL) {\n      diag.setLogger(new DiagConsoleLogger(), {\n        logLevel: logLevelMap[process.env.OTEL_LOG_LEVEL.toUpperCase()],\n      });\n    }\n\n    if (disabled) {\n      return;\n    }\n\n    const idGenerator = configuration.idGenerator ?? new RandomIdGenerator();\n\n    const contextManager =\n      configuration.contextManager ?? new AsyncLocalStorageContextManager();\n    contextManager.enable();\n    this.contextManager = contextManager;\n\n    const serviceName =\n      env.OTEL_SERVICE_NAME || configuration.serviceName || \"app\";\n    let resource = new Resource(\n      omitUndefinedAttributes({\n        [SemanticResourceAttributes.SERVICE_NAME]: serviceName,\n\n        // Node.\n        \"node.ci\": process.env.CI ? true : undefined,\n        \"node.env\": process.env.NODE_ENV,\n\n        // Vercel.\n        // https://vercel.com/docs/projects/environment-variables/system-environment-variables\n        // Vercel Env set as top level attribute for simplicity. One of 'production', 'preview' or 'development'.\n        env: process.env.VERCEL_ENV || process.env.NEXT_PUBLIC_VERCEL_ENV,\n        \"vercel.region\": process.env.VERCEL_REGION,\n        \"vercel.runtime\": runtime,\n        \"vercel.sha\":\n          process.env.VERCEL_GIT_COMMIT_SHA ||\n          process.env.NEXT_PUBLIC_VERCEL_GIT_COMMIT_SHA,\n        \"vercel.host\":\n          process.env.VERCEL_URL ||\n          process.env.NEXT_PUBLIC_VERCEL_URL ||\n          undefined,\n        \"vercel.branch_host\":\n          process.env.VERCEL_BRANCH_URL ||\n          process.env.NEXT_PUBLIC_VERCEL_BRANCH_URL ||\n          undefined,\n        \"vercel.deployment_id\": process.env.VERCEL_DEPLOYMENT_ID || undefined,\n        [SemanticResourceAttributes.SERVICE_VERSION]:\n          process.env.VERCEL_DEPLOYMENT_ID,\n\n        ...configuration.attributes,\n      })\n    );\n    const resourceDetectors = configuration.resourceDetectors ?? [\n      envDetectorSync,\n    ];\n    const autoDetectResources = configuration.autoDetectResources ?? true;\n    if (autoDetectResources) {\n      const internalConfig: ResourceDetectionConfig = {\n        detectors: resourceDetectors,\n      };\n      resource = resource.merge(detectResourcesSync(internalConfig));\n    }\n\n    const propagators = parsePropagators(\n      configuration.propagators,\n      configuration,\n      env\n    );\n    const traceSampler = parseSampler(configuration.traceSampler, env);\n    const spanProcessors = parseSpanProcessor(\n      configuration.spanProcessors,\n      configuration,\n      env\n    );\n    if (spanProcessors.length === 0) {\n      diag.warn(\n        \"@vercel/otel: No span processors configured. No spans will be exported.\"\n      );\n    }\n    const spanLimits = configuration.spanLimits;\n    const tracerProvider = new BasicTracerProvider({\n      resource,\n      idGenerator,\n      sampler: traceSampler,\n      spanLimits,\n    });\n    tracerProvider.addSpanProcessor(\n      new CompositeSpanProcessor(\n        spanProcessors,\n        configuration.attributesFromHeaders\n      )\n    );\n    tracerProvider.register({\n      contextManager,\n      propagator: new CompositePropagator({ propagators }),\n    });\n    this.tracerProvider = tracerProvider;\n\n    if (configuration.logRecordProcessor) {\n      const loggerProvider = new LoggerProvider({ resource });\n      this.loggerProvider = loggerProvider;\n      loggerProvider.addLogRecordProcessor(configuration.logRecordProcessor);\n      logs.setGlobalLoggerProvider(loggerProvider);\n    }\n\n    if (configuration.metricReader || configuration.views) {\n      const meterProvider = new MeterProvider({\n        resource,\n        views: configuration.views ?? [],\n      });\n      if (configuration.metricReader) {\n        meterProvider.addMetricReader(configuration.metricReader);\n      }\n      metrics.setGlobalMeterProvider(meterProvider);\n      this.meterProvider = meterProvider;\n    }\n\n    const instrumentations = parseInstrumentations(\n      configuration.instrumentations,\n      configuration.instrumentationConfig\n    );\n    this.disableInstrumentations = registerInstrumentations({\n      instrumentations,\n    });\n\n    diag.info(\"@vercel/otel: started\", serviceName, runtime);\n  }\n\n  public async shutdown(): Promise<void> {\n    const promises: Promise<unknown>[] = [];\n\n    if (this.tracerProvider) {\n      promises.push(this.tracerProvider.shutdown());\n    }\n    if (this.loggerProvider) {\n      promises.push(this.loggerProvider.shutdown());\n    }\n    if (this.meterProvider) {\n      promises.push(this.meterProvider.shutdown());\n    }\n\n    diag.info(\n      \"@vercel/otel: shutting down\",\n      promises.length,\n      process.env.NEXT_RUNTIME\n    );\n\n    await Promise.all(promises);\n\n    if (this.contextManager) {\n      this.contextManager.disable();\n    }\n    const { disableInstrumentations } = this;\n    if (disableInstrumentations) {\n      disableInstrumentations();\n    }\n  }\n}\n\nfunction getEnv(): Env {\n  const processEnv = parseEnvironment(process.env);\n  return { ...DEFAULT_ENVIRONMENT, ...processEnv };\n}\n\nfunction parseInstrumentations(\n  arg: InstrumentationOptionOrName[] | undefined,\n  instrumentationConfig: InstrumentationConfiguration | undefined\n): InstrumentationOption[] {\n  return (arg ?? [\"auto\"])\n    .map((instrumentationOrName) => {\n      if (instrumentationOrName === \"auto\") {\n        diag.debug(\n          \"@vercel/otel: Configure instrumentations: fetch\",\n          instrumentationConfig?.fetch\n        );\n        return [new FetchInstrumentation(instrumentationConfig?.fetch)];\n      }\n      if (instrumentationOrName === \"fetch\") {\n        diag.debug(\n          \"@vercel/otel: Configure instrumentations: fetch\",\n          instrumentationConfig?.fetch\n        );\n        return new FetchInstrumentation(instrumentationConfig?.fetch);\n      }\n      return instrumentationOrName;\n    })\n    .flat();\n}\n\nfunction parsePropagators(\n  arg: PropagatorOrName[] | undefined,\n  configuration: Configuration,\n  env: Env\n): TextMapPropagator[] {\n  const envPropagators =\n    process.env.OTEL_PROPAGATORS &&\n      env.OTEL_PROPAGATORS && env.OTEL_PROPAGATORS.length > 0\n      ? env.OTEL_PROPAGATORS\n      : undefined;\n  return (arg ?? envPropagators ?? [\"auto\"])\n    .map((propagatorOrName) => {\n      if (propagatorOrName === \"none\") {\n        return [];\n      }\n      if (propagatorOrName === \"auto\") {\n        const autoList: { name: string; propagator: TextMapPropagator }[] = [];\n        autoList.push({\n          name: \"tracecontext\",\n          propagator: new W3CTraceContextPropagator(),\n        });\n        autoList.push({\n          name: \"baggage\",\n          propagator: new W3CBaggagePropagator(),\n        });\n\n        diag.debug(\n          `@vercel/otel: Configure propagators: ${autoList\n            .map((i) => i.name)\n            .join(\", \")}`\n        );\n        return autoList.map((i) => i.propagator);\n      }\n      if (propagatorOrName === \"experimental-vercel-trace\") {\n        diag.debug(\"@vercel/otel: Configure propagator: vercel-runtime\");\n        return new VercelRuntimePropagator();\n      }\n      if (propagatorOrName === \"tracecontext\") {\n        diag.debug(\"@vercel/otel: Configure propagator: tracecontext\");\n        return new W3CTraceContextPropagator();\n      }\n      if (propagatorOrName === \"baggage\") {\n        diag.debug(\"@vercel/otel: Configure propagator: baggage\");\n        return new W3CBaggagePropagator();\n      }\n      if (typeof propagatorOrName === \"string\") {\n        throw new Error(`Unknown propagator: \"${propagatorOrName}\"`);\n      }\n      return propagatorOrName;\n    })\n    .flat();\n}\n\nconst FALLBACK_OTEL_TRACES_SAMPLER = \"always_on\";\nconst DEFAULT_RATIO = 1;\n\n/**\n * The code below is borrowed from the https://github.com/open-telemetry/opentelemetry-js/blob/b6e532bf52c9553e51aa6d3375e85f0dd9bd67c1/packages/opentelemetry-sdk-trace-base/src/config.ts#L64\n * bacause, unfortunately, OpenTelemetry API doesn't export it directly.\n */\nfunction parseSampler(arg: SampleOrName | undefined, env: Env): Sampler {\n  if (arg && typeof arg !== \"string\") {\n    return arg;\n  }\n\n  const name =\n    arg && arg !== \"auto\"\n      ? arg\n      : env.OTEL_TRACES_SAMPLER || FALLBACK_OTEL_TRACES_SAMPLER;\n  diag.debug(\"@vercel/otel: Configure sampler: \", name);\n  switch (name) {\n    case \"always_on\":\n      return new AlwaysOnSampler();\n    case \"always_off\":\n      return new AlwaysOffSampler();\n    case \"parentbased_always_on\":\n      return new ParentBasedSampler({\n        root: new AlwaysOnSampler(),\n      });\n    case \"parentbased_always_off\":\n      return new ParentBasedSampler({\n        root: new AlwaysOffSampler(),\n      });\n    case \"traceidratio\":\n      return new TraceIdRatioBasedSampler(getSamplerProbabilityFromEnv(env));\n    case \"parentbased_traceidratio\":\n      return new ParentBasedSampler({\n        root: new TraceIdRatioBasedSampler(getSamplerProbabilityFromEnv(env)),\n      });\n    default:\n      diag.error(\n        `@vercel/otel: OTEL_TRACES_SAMPLER value \"${String(\n          env.OTEL_TRACES_SAMPLER\n        )} invalid, defaulting to ${FALLBACK_OTEL_TRACES_SAMPLER}\".`\n      );\n      return new AlwaysOnSampler();\n  }\n}\n\nfunction getSamplerProbabilityFromEnv(env: Env): number {\n  if (\n    env.OTEL_TRACES_SAMPLER_ARG === undefined ||\n    env.OTEL_TRACES_SAMPLER_ARG === \"\"\n  ) {\n    diag.error(\n      `@vercel/otel: OTEL_TRACES_SAMPLER_ARG is blank, defaulting to ${DEFAULT_RATIO}.`\n    );\n    return DEFAULT_RATIO;\n  }\n\n  diag.debug(\n    \"@vercel/otel: Configure sampler probability: \",\n    env.OTEL_TRACES_SAMPLER_ARG\n  );\n  const probability = Number(env.OTEL_TRACES_SAMPLER_ARG);\n\n  if (isNaN(probability)) {\n    diag.error(\n      `@vercel/otel: OTEL_TRACES_SAMPLER_ARG=${env.OTEL_TRACES_SAMPLER_ARG} was given, but it is invalid, defaulting to ${DEFAULT_RATIO}.`\n    );\n    return DEFAULT_RATIO;\n  }\n\n  if (probability < 0 || probability > 1) {\n    diag.error(\n      `@vercel/otel: OTEL_TRACES_SAMPLER_ARG=${env.OTEL_TRACES_SAMPLER_ARG} was given, but it is out of range ([0..1]), defaulting to ${DEFAULT_RATIO}.`\n    );\n    return DEFAULT_RATIO;\n  }\n\n  return probability;\n}\n\nfunction parseSpanProcessor(\n  arg: SpanProcessorOrName[] | undefined,\n  configuration: Configuration,\n  env: Env\n): SpanProcessor[] {\n  return [\n    ...(arg ?? [\"auto\"])\n      .map((spanProcessorOrName) => {\n        if (spanProcessorOrName === \"auto\") {\n          if (process.env.VERCEL_OTEL_ENDPOINTS) {\n            // OTEL collector is configured on 4318 port.\n            const port = process.env.VERCEL_OTEL_ENDPOINTS_PORT || \"4318\";\n            // It's important to use x-protobuf here because the Vercel collector\n            // doesn't correctly process `TimeUnixNano{low, high}` encoding.\n            const protocol =\n              process.env.VERCEL_OTEL_ENDPOINTS_PROTOCOL || \"http/protobuf\";\n            diag.debug(\n              \"@vercel/otel: Configure vercel otel collector on port: \",\n              port,\n              protocol\n            );\n            const config = {\n              url: `http://localhost:${port}/v1/traces`,\n              headers: {},\n            };\n            const exporter =\n              protocol === \"http/protobuf\"\n                ? new OTLPHttpProtoTraceExporter(config)\n                : new OTLPHttpJsonTraceExporter(config);\n            return new BatchSpanProcessor(exporter);\n          }\n\n          // Consider going throw `VERCEL_OTEL_ENDPOINTS` (otel collector) for OTLP.\n          if (\n            !configuration.traceExporter ||\n            configuration.traceExporter === \"auto\" ||\n            env.OTEL_EXPORTER_OTLP_TRACES_ENDPOINT ||\n            env.OTEL_EXPORTER_OTLP_ENDPOINT\n          ) {\n            return new BatchSpanProcessor(parseTraceExporter(env));\n          }\n\n          return undefined;\n        } else if (spanProcessorOrName === 'experimental-vercel-trace') {\n          diag.debug(\"@vercel/otel: Configure vercel-runtime exporter\");\n          return new BatchSpanProcessor(new VercelRuntimeSpanExporter());\n        }\n        return spanProcessorOrName;\n      })\n      .filter(isNotNull),\n    ...(configuration.traceExporter && configuration.traceExporter !== \"auto\"\n      ? [new BatchSpanProcessor(configuration.traceExporter)]\n      : []),\n  ];\n}\n\n/**\n * This code is moved from the https://github.com/open-telemetry/opentelemetry-js/blob/00e78efd840d3f49d9d4b025a9965e8d3f2913ad/experimental/packages/opentelemetry-sdk-node/src/TracerProviderWithEnvExporter.ts#L41\n * due to the https://github.com/open-telemetry/opentelemetry-js/issues/4212\n */\nfunction parseTraceExporter(env: Env): SpanExporter {\n  const protocol =\n    process.env.OTEL_EXPORTER_OTLP_TRACES_PROTOCOL ??\n    process.env.OTEL_EXPORTER_OTLP_PROTOCOL ??\n    \"http/protobuf\";\n  const url = buildExporterUrlFromEnv(env);\n  const headers = {\n    ...baggageUtils.parseKeyPairsIntoRecord(env.OTEL_EXPORTER_OTLP_HEADERS),\n    ...baggageUtils.parseKeyPairsIntoRecord(\n      env.OTEL_EXPORTER_OTLP_TRACES_HEADERS\n    ),\n  };\n  diag.debug(\n    \"@vercel/otel: Configure trace exporter: \",\n    protocol,\n    url,\n    `headers: ${Object.keys(headers).join(\",\") || \"<none>\"}`\n  );\n  switch (protocol) {\n    case \"http/json\":\n      return new OTLPHttpJsonTraceExporter({ url, headers });\n    case \"http/protobuf\":\n      return new OTLPHttpProtoTraceExporter({ url, headers });\n    default:\n      // \"grpc\" protocol is not supported in Edge.\n      diag.warn(\n        `@vercel/otel: Unsupported OTLP traces protocol: ${protocol}. Using http/protobuf.`\n      );\n      return new OTLPHttpProtoTraceExporter();\n  }\n}\n\nconst DEFAULT_COLLECTOR_RESOURCE_PATH = \"v1/traces\";\nconst DEFAULT_COLLECTOR_URL = `http://localhost:4318/${DEFAULT_COLLECTOR_RESOURCE_PATH}`;\n\nfunction buildExporterUrlFromEnv(env: Env): string {\n  const defaultUrlFromEnv = env.OTEL_EXPORTER_OTLP_TRACES_ENDPOINT;\n  if (defaultUrlFromEnv && typeof defaultUrlFromEnv === \"string\") {\n    return defaultUrlFromEnv;\n  }\n\n  const defaultUrlFromEnvAll = env.OTEL_EXPORTER_OTLP_ENDPOINT;\n  if (defaultUrlFromEnvAll && typeof defaultUrlFromEnvAll === \"string\") {\n    return `${defaultUrlFromEnvAll}/${DEFAULT_COLLECTOR_RESOURCE_PATH}`;\n  }\n\n  return DEFAULT_COLLECTOR_URL;\n}\n\nfunction isNotNull<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined;\n}\n","export * from \"@opentelemetry/api-logs\"","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\nimport type * as logsAPI from '@opentelemetry/api-logs';\nimport { NOOP_LOGGER } from '@opentelemetry/api-logs';\nimport { Resource } from '@opentelemetry/resources';\nimport { BindOnceFuture, merge } from '@opentelemetry/core';\n\nimport type { LoggerProviderConfig } from './types';\nimport type { LogRecordProcessor } from './LogRecordProcessor';\nimport { Logger } from './Logger';\nimport { loadDefaultConfig, reconfigureLimits } from './config';\nimport { MultiLogRecordProcessor } from './MultiLogRecordProcessor';\nimport { LoggerProviderSharedState } from './internal/LoggerProviderSharedState';\n\nexport const DEFAULT_LOGGER_NAME = 'unknown';\n\nexport class LoggerProvider implements logsAPI.LoggerProvider {\n  private _shutdownOnce: BindOnceFuture<void>;\n  private readonly _sharedState: LoggerProviderSharedState;\n\n  constructor(config: LoggerProviderConfig = {}) {\n    const {\n      resource = Resource.default(),\n      logRecordLimits,\n      forceFlushTimeoutMillis,\n    } = merge({}, loadDefaultConfig(), config);\n    this._sharedState = new LoggerProviderSharedState(\n      resource,\n      forceFlushTimeoutMillis,\n      reconfigureLimits(logRecordLimits)\n    );\n    this._shutdownOnce = new BindOnceFuture(this._shutdown, this);\n  }\n\n  /**\n   * Get a logger with the configuration of the LoggerProvider.\n   */\n  public getLogger(\n    name: string,\n    version?: string,\n    options?: logsAPI.LoggerOptions\n  ): logsAPI.Logger {\n    if (this._shutdownOnce.isCalled) {\n      diag.warn('A shutdown LoggerProvider cannot provide a Logger');\n      return NOOP_LOGGER;\n    }\n\n    if (!name) {\n      diag.warn('Logger requested without instrumentation scope name.');\n    }\n    const loggerName = name || DEFAULT_LOGGER_NAME;\n    const key = `${loggerName}@${version || ''}:${options?.schemaUrl || ''}`;\n    if (!this._sharedState.loggers.has(key)) {\n      this._sharedState.loggers.set(\n        key,\n        new Logger(\n          { name: loggerName, version, schemaUrl: options?.schemaUrl },\n          this._sharedState\n        )\n      );\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this._sharedState.loggers.get(key)!;\n  }\n\n  /**\n   * Adds a new {@link LogRecordProcessor} to this logger.\n   * @param processor the new LogRecordProcessor to be added.\n   */\n  public addLogRecordProcessor(processor: LogRecordProcessor) {\n    if (this._sharedState.registeredLogRecordProcessors.length === 0) {\n      // since we might have enabled by default a batchProcessor, we disable it\n      // before adding the new one\n      this._sharedState.activeProcessor\n        .shutdown()\n        .catch(err =>\n          diag.error(\n            'Error while trying to shutdown current log record processor',\n            err\n          )\n        );\n    }\n    this._sharedState.registeredLogRecordProcessors.push(processor);\n    this._sharedState.activeProcessor = new MultiLogRecordProcessor(\n      this._sharedState.registeredLogRecordProcessors,\n      this._sharedState.forceFlushTimeoutMillis\n    );\n  }\n\n  /**\n   * Notifies all registered LogRecordProcessor to flush any buffered data.\n   *\n   * Returns a promise which is resolved when all flushes are complete.\n   */\n  public forceFlush(): Promise<void> {\n    // do not flush after shutdown\n    if (this._shutdownOnce.isCalled) {\n      diag.warn('invalid attempt to force flush after LoggerProvider shutdown');\n      return this._shutdownOnce.promise;\n    }\n    return this._sharedState.activeProcessor.forceFlush();\n  }\n\n  /**\n   * Flush all buffered data and shut down the LoggerProvider and all registered\n   * LogRecordProcessor.\n   *\n   * Returns a promise which is resolved when all flushes are complete.\n   */\n  public shutdown(): Promise<void> {\n    if (this._shutdownOnce.isCalled) {\n      diag.warn('shutdown may only be called once per LoggerProvider');\n      return this._shutdownOnce.promise;\n    }\n    return this._shutdownOnce.call();\n  }\n\n  private _shutdown(): Promise<void> {\n    return this._sharedState.activeProcessor.shutdown();\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type * as logsAPI from '@opentelemetry/api-logs';\nimport type { InstrumentationScope } from '@opentelemetry/core';\nimport { context } from '@opentelemetry/api';\n\nimport { LogRecord } from './LogRecord';\nimport { LoggerProviderSharedState } from './internal/LoggerProviderSharedState';\n\nexport class Logger implements logsAPI.Logger {\n  constructor(\n    public readonly instrumentationScope: InstrumentationScope,\n    private _sharedState: LoggerProviderSharedState\n  ) {}\n\n  public emit(logRecord: logsAPI.LogRecord): void {\n    const currentContext = logRecord.context || context.active();\n    /**\n     * If a Logger was obtained with include_trace_context=true,\n     * the LogRecords it emits MUST automatically include the Trace Context from the active Context,\n     * if Context has not been explicitly set.\n     */\n    const logRecordInstance = new LogRecord(\n      this._sharedState,\n      this.instrumentationScope,\n      {\n        context: currentContext,\n        ...logRecord,\n      }\n    );\n    /**\n     * the explicitly passed Context,\n     * the current Context, or an empty Context if the Logger was obtained with include_trace_context=false\n     */\n    this._sharedState.activeProcessor.onEmit(logRecordInstance, currentContext);\n    /**\n     * A LogRecordProcessor may freely modify logRecord for the duration of the OnEmit call.\n     * If logRecord is needed after OnEmit returns (i.e. for asynchronous processing) only reads are permitted.\n     */\n    logRecordInstance._makeReadonly();\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AttributeValue, diag } from '@opentelemetry/api';\nimport type * as logsAPI from '@opentelemetry/api-logs';\nimport * as api from '@opentelemetry/api';\nimport {\n  timeInputToHrTime,\n  isAttributeValue,\n  InstrumentationScope,\n} from '@opentelemetry/core';\nimport type { IResource } from '@opentelemetry/resources';\n\nimport type { ReadableLogRecord } from './export/ReadableLogRecord';\nimport type { LogRecordLimits } from './types';\nimport { LogAttributes } from '@opentelemetry/api-logs';\nimport { LoggerProviderSharedState } from './internal/LoggerProviderSharedState';\n\nexport class LogRecord implements ReadableLogRecord {\n  readonly hrTime: api.HrTime;\n  readonly hrTimeObserved: api.HrTime;\n  readonly spanContext?: api.SpanContext;\n  readonly resource: IResource;\n  readonly instrumentationScope: InstrumentationScope;\n  readonly attributes: logsAPI.LogAttributes = {};\n  private _severityText?: string;\n  private _severityNumber?: logsAPI.SeverityNumber;\n  private _body?: string;\n  private totalAttributesCount: number = 0;\n\n  private _isReadonly: boolean = false;\n  private readonly _logRecordLimits: Required<LogRecordLimits>;\n\n  set severityText(severityText: string | undefined) {\n    if (this._isLogRecordReadonly()) {\n      return;\n    }\n    this._severityText = severityText;\n  }\n  get severityText(): string | undefined {\n    return this._severityText;\n  }\n\n  set severityNumber(severityNumber: logsAPI.SeverityNumber | undefined) {\n    if (this._isLogRecordReadonly()) {\n      return;\n    }\n    this._severityNumber = severityNumber;\n  }\n  get severityNumber(): logsAPI.SeverityNumber | undefined {\n    return this._severityNumber;\n  }\n\n  set body(body: string | undefined) {\n    if (this._isLogRecordReadonly()) {\n      return;\n    }\n    this._body = body;\n  }\n  get body(): string | undefined {\n    return this._body;\n  }\n\n  get droppedAttributesCount(): number {\n    return this.totalAttributesCount - Object.keys(this.attributes).length;\n  }\n\n  constructor(\n    _sharedState: LoggerProviderSharedState,\n    instrumentationScope: InstrumentationScope,\n    logRecord: logsAPI.LogRecord\n  ) {\n    const {\n      timestamp,\n      observedTimestamp,\n      severityNumber,\n      severityText,\n      body,\n      attributes = {},\n      context,\n    } = logRecord;\n\n    const now = Date.now();\n    this.hrTime = timeInputToHrTime(timestamp ?? now);\n    this.hrTimeObserved = timeInputToHrTime(observedTimestamp ?? now);\n\n    if (context) {\n      const spanContext = api.trace.getSpanContext(context);\n      if (spanContext && api.isSpanContextValid(spanContext)) {\n        this.spanContext = spanContext;\n      }\n    }\n    this.severityNumber = severityNumber;\n    this.severityText = severityText;\n    this.body = body;\n    this.resource = _sharedState.resource;\n    this.instrumentationScope = instrumentationScope;\n    this._logRecordLimits = _sharedState.logRecordLimits;\n    this.setAttributes(attributes);\n  }\n\n  public setAttribute(key: string, value?: LogAttributes | AttributeValue) {\n    if (this._isLogRecordReadonly()) {\n      return this;\n    }\n    if (value === null) {\n      return this;\n    }\n    if (key.length === 0) {\n      api.diag.warn(`Invalid attribute key: ${key}`);\n      return this;\n    }\n    if (\n      !isAttributeValue(value) &&\n      !(\n        typeof value === 'object' &&\n        !Array.isArray(value) &&\n        Object.keys(value).length > 0\n      )\n    ) {\n      api.diag.warn(`Invalid attribute value set for key: ${key}`);\n      return this;\n    }\n    this.totalAttributesCount += 1;\n    if (\n      Object.keys(this.attributes).length >=\n        this._logRecordLimits.attributeCountLimit &&\n      !Object.prototype.hasOwnProperty.call(this.attributes, key)\n    ) {\n      return this;\n    }\n    if (isAttributeValue(value)) {\n      this.attributes[key] = this._truncateToSize(value);\n    } else {\n      this.attributes[key] = value;\n    }\n    return this;\n  }\n\n  public setAttributes(attributes: LogAttributes) {\n    for (const [k, v] of Object.entries(attributes)) {\n      this.setAttribute(k, v);\n    }\n    return this;\n  }\n\n  public setBody(body: string) {\n    this.body = body;\n    return this;\n  }\n\n  public setSeverityNumber(severityNumber: logsAPI.SeverityNumber) {\n    this.severityNumber = severityNumber;\n    return this;\n  }\n\n  public setSeverityText(severityText: string) {\n    this.severityText = severityText;\n    return this;\n  }\n\n  /**\n   * @internal\n   * A LogRecordProcessor may freely modify logRecord for the duration of the OnEmit call.\n   * If logRecord is needed after OnEmit returns (i.e. for asynchronous processing) only reads are permitted.\n   */\n  _makeReadonly() {\n    this._isReadonly = true;\n  }\n\n  private _truncateToSize(value: AttributeValue): AttributeValue {\n    const limit = this._logRecordLimits.attributeValueLengthLimit;\n    // Check limit\n    if (limit <= 0) {\n      // Negative values are invalid, so do not truncate\n      api.diag.warn(`Attribute value limit must be positive, got ${limit}`);\n      return value;\n    }\n\n    // String\n    if (typeof value === 'string') {\n      return this._truncateToLimitUtil(value, limit);\n    }\n\n    // Array of strings\n    if (Array.isArray(value)) {\n      return (value as []).map(val =>\n        typeof val === 'string' ? this._truncateToLimitUtil(val, limit) : val\n      );\n    }\n\n    // Other types, no need to apply value length limit\n    return value;\n  }\n\n  private _truncateToLimitUtil(value: string, limit: number): string {\n    if (value.length <= limit) {\n      return value;\n    }\n    return value.substring(0, limit);\n  }\n\n  private _isLogRecordReadonly(): boolean {\n    if (this._isReadonly) {\n      diag.warn('Can not execute the operation on emitted log record');\n    }\n    return this._isReadonly;\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  getEnv,\n  getEnvWithoutDefaults,\n} from '@opentelemetry/core';\nimport { LogRecordLimits } from './types';\n\nexport function loadDefaultConfig() {\n  return {\n    forceFlushTimeoutMillis: 30000,\n    logRecordLimits: {\n      attributeValueLengthLimit:\n        getEnv().OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n      attributeCountLimit: getEnv().OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT,\n    },\n    includeTraceContext: true,\n  };\n}\n\n/**\n * When general limits are provided and model specific limits are not,\n * configures the model specific limits by using the values from the general ones.\n * @param logRecordLimits User provided limits configuration\n */\nexport function reconfigureLimits(\n  logRecordLimits: LogRecordLimits\n): Required<LogRecordLimits> {\n  const parsedEnvConfig = getEnvWithoutDefaults();\n\n  return {\n    /**\n     * Reassign log record attribute count limit to use first non null value defined by user or use default value\n     */\n    attributeCountLimit:\n      logRecordLimits.attributeCountLimit ??\n      parsedEnvConfig.OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT ??\n      parsedEnvConfig.OTEL_ATTRIBUTE_COUNT_LIMIT ??\n      DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n    /**\n     * Reassign log record attribute value length limit to use first non null value defined by user or use default value\n     */\n    attributeValueLengthLimit:\n      logRecordLimits.attributeValueLengthLimit ??\n      parsedEnvConfig.OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT ??\n      parsedEnvConfig.OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT ??\n      DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  };\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { callWithTimeout } from '@opentelemetry/core';\nimport type { Context } from '@opentelemetry/api';\nimport type { LogRecordProcessor } from './LogRecordProcessor';\nimport type { LogRecord } from './LogRecord';\n\n/**\n * Implementation of the {@link LogRecordProcessor} that simply forwards all\n * received events to a list of {@link LogRecordProcessor}s.\n */\nexport class MultiLogRecordProcessor implements LogRecordProcessor {\n  constructor(\n    public readonly processors: LogRecordProcessor[],\n    public readonly forceFlushTimeoutMillis: number\n  ) {}\n\n  public async forceFlush(): Promise<void> {\n    const timeout = this.forceFlushTimeoutMillis;\n    await Promise.all(\n      this.processors.map(processor =>\n        callWithTimeout(processor.forceFlush(), timeout)\n      )\n    );\n  }\n\n  public onEmit(logRecord: LogRecord, context?: Context): void {\n    this.processors.forEach(processors =>\n      processors.onEmit(logRecord, context)\n    );\n  }\n\n  public async shutdown(): Promise<void> {\n    await Promise.all(this.processors.map(processor => processor.shutdown()));\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '@opentelemetry/api';\nimport { LogRecordProcessor } from '../LogRecordProcessor';\nimport { ReadableLogRecord } from './ReadableLogRecord';\n\nexport class NoopLogRecordProcessor implements LogRecordProcessor {\n  forceFlush(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  onEmit(_logRecord: ReadableLogRecord, _context: Context): void {}\n\n  shutdown(): Promise<void> {\n    return Promise.resolve();\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@opentelemetry/api-logs';\nimport { IResource } from '@opentelemetry/resources';\nimport { LogRecordProcessor } from '../LogRecordProcessor';\nimport { LogRecordLimits } from '../types';\nimport { NoopLogRecordProcessor } from '../export/NoopLogRecordProcessor';\n\nexport class LoggerProviderSharedState {\n  readonly loggers: Map<string, Logger> = new Map();\n  activeProcessor: LogRecordProcessor;\n  readonly registeredLogRecordProcessors: LogRecordProcessor[] = [];\n\n  constructor(\n    readonly resource: IResource,\n    readonly forceFlushTimeoutMillis: number,\n    readonly logRecordLimits: Required<LogRecordLimits>\n  ) {\n    this.activeProcessor = new NoopLogRecordProcessor();\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * AggregationTemporality indicates the way additive quantities are expressed.\n */\nexport enum AggregationTemporality {\n  DELTA,\n  CUMULATIVE,\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MetricAttributes } from '@opentelemetry/api';\nimport { InstrumentationScope } from '@opentelemetry/core';\n\nexport type Maybe<T> = T | undefined;\n\nexport function isNotNullish<T>(item: Maybe<T>): item is T {\n  return item !== undefined && item !== null;\n}\n\n/**\n * Converting the unordered attributes into unique identifier string.\n * @param attributes user provided unordered MetricAttributes.\n */\nexport function hashAttributes(attributes: MetricAttributes): string {\n  let keys = Object.keys(attributes);\n  if (keys.length === 0) return '';\n\n  // Return a string that is stable on key orders.\n  keys = keys.sort();\n  return JSON.stringify(keys.map(key => [key, attributes[key]]));\n}\n\n/**\n * Converting the instrumentation scope object to a unique identifier string.\n * @param instrumentationScope\n */\nexport function instrumentationScopeId(\n  instrumentationScope: InstrumentationScope\n): string {\n  return `${instrumentationScope.name}:${instrumentationScope.version ?? ''}:${\n    instrumentationScope.schemaUrl ?? ''\n  }`;\n}\n\n/**\n * Error that is thrown on timeouts.\n */\nexport class TimeoutError extends Error {\n  constructor(message?: string) {\n    super(message);\n\n    // manually adjust prototype to retain `instanceof` functionality when targeting ES5, see:\n    // https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, TimeoutError.prototype);\n  }\n}\n\n/**\n * Adds a timeout to a promise and rejects if the specified timeout has elapsed. Also rejects if the specified promise\n * rejects, and resolves if the specified promise resolves.\n *\n * <p> NOTE: this operation will continue even after it throws a {@link TimeoutError}.\n *\n * @param promise promise to use with timeout.\n * @param timeout the timeout in milliseconds until the returned promise is rejected.\n */\nexport function callWithTimeout<T>(\n  promise: Promise<T>,\n  timeout: number\n): Promise<T> {\n  let timeoutHandle: ReturnType<typeof setTimeout>;\n\n  const timeoutPromise = new Promise<never>(function timeoutFunction(\n    _resolve,\n    reject\n  ) {\n    timeoutHandle = setTimeout(function timeoutHandler() {\n      reject(new TimeoutError('Operation timed out.'));\n    }, timeout);\n  });\n\n  return Promise.race([promise, timeoutPromise]).then(\n    result => {\n      clearTimeout(timeoutHandle);\n      return result;\n    },\n    reason => {\n      clearTimeout(timeoutHandle);\n      throw reason;\n    }\n  );\n}\n\nexport interface PromiseAllSettledFulfillResult<T> {\n  status: 'fulfilled';\n  value: T;\n}\n\nexport interface PromiseAllSettledRejectionResult {\n  status: 'rejected';\n  reason: unknown;\n}\n\nexport type PromiseAllSettledResult<T> =\n  | PromiseAllSettledFulfillResult<T>\n  | PromiseAllSettledRejectionResult;\n\n/**\n * Node.js v12.9 lower and browser compatible `Promise.allSettled`.\n */\nexport async function PromiseAllSettled<T>(\n  promises: Promise<T>[]\n): Promise<PromiseAllSettledResult<T>[]> {\n  return Promise.all(\n    promises.map<Promise<PromiseAllSettledResult<T>>>(async p => {\n      try {\n        const ret = await p;\n        return {\n          status: 'fulfilled',\n          value: ret,\n        };\n      } catch (e) {\n        return {\n          status: 'rejected',\n          reason: e,\n        };\n      }\n    })\n  );\n}\n\nexport function isPromiseAllSettledRejectionResult(\n  it: PromiseAllSettledResult<unknown>\n): it is PromiseAllSettledRejectionResult {\n  return it.status === 'rejected';\n}\n\n/**\n * Node.js v11.0 lower and browser compatible `Array.prototype.flatMap`.\n */\nexport function FlatMap<T, R>(arr: T[], fn: (it: T) => R[]): R[] {\n  const result: R[] = [];\n  arr.forEach(it => {\n    result.push(...fn(it));\n  });\n  return result;\n}\n\nexport function setEquals(lhs: Set<unknown>, rhs: Set<unknown>): boolean {\n  if (lhs.size !== rhs.size) {\n    return false;\n  }\n  for (const item of lhs) {\n    if (!rhs.has(item)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Binary search the sorted array to the find lower bound for the value.\n * @param arr\n * @param value\n * @returns\n */\nexport function binarySearchLB(arr: number[], value: number): number {\n  let lo = 0;\n  let hi = arr.length - 1;\n\n  while (hi - lo > 1) {\n    const mid = Math.trunc((hi + lo) / 2);\n    if (arr[mid] <= value) {\n      lo = mid;\n    } else {\n      hi = mid - 1;\n    }\n  }\n\n  if (arr[hi] <= value) {\n    return hi;\n  } else if (arr[lo] <= value) {\n    return lo;\n  }\n  return -1;\n}\n\nexport function equalsCaseInsensitive(lhs: string, rhs: string): boolean {\n  return lhs.toLowerCase() === rhs.toLowerCase();\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MetricOptions, ValueType, diag } from '@opentelemetry/api';\nimport { View } from './view/View';\nimport { equalsCaseInsensitive } from './utils';\n\n/**\n * Supported types of metric instruments.\n */\nexport enum InstrumentType {\n  COUNTER = 'COUNTER',\n  HISTOGRAM = 'HISTOGRAM',\n  UP_DOWN_COUNTER = 'UP_DOWN_COUNTER',\n  OBSERVABLE_COUNTER = 'OBSERVABLE_COUNTER',\n  OBSERVABLE_GAUGE = 'OBSERVABLE_GAUGE',\n  OBSERVABLE_UP_DOWN_COUNTER = 'OBSERVABLE_UP_DOWN_COUNTER',\n}\n\n/**\n * An internal interface describing the instrument.\n *\n * This is intentionally distinguished from the public MetricDescriptor (a.k.a. InstrumentDescriptor)\n * which may not contains internal fields like metric advice.\n */\nexport interface InstrumentDescriptor {\n  readonly name: string;\n  readonly description: string;\n  readonly unit: string;\n  readonly type: InstrumentType;\n  readonly valueType: ValueType;\n  /**\n   * @experimental\n   *\n   * This is intentionally not using the API's type as it's only available from @opentelemetry/api 1.7.0 and up.\n   * In SDK 2.0 we'll be able to bump the minimum API version and remove this workaround.\n   */\n  readonly advice: {\n    /**\n     * Hint the explicit bucket boundaries for SDK if the metric has been\n     * aggregated with a HistogramAggregator.\n     */\n    explicitBucketBoundaries?: number[];\n  };\n}\n\nexport function createInstrumentDescriptor(\n  name: string,\n  type: InstrumentType,\n  options?: MetricOptions\n): InstrumentDescriptor {\n  if (!isValidName(name)) {\n    diag.warn(\n      `Invalid metric name: \"${name}\". The metric name should be a ASCII string with a length no greater than 255 characters.`\n    );\n  }\n  return {\n    name,\n    type,\n    description: options?.description ?? '',\n    unit: options?.unit ?? '',\n    valueType: options?.valueType ?? ValueType.DOUBLE,\n    advice: options?.advice ?? {},\n  };\n}\n\nexport function createInstrumentDescriptorWithView(\n  view: View,\n  instrument: InstrumentDescriptor\n): InstrumentDescriptor {\n  return {\n    name: view.name ?? instrument.name,\n    description: view.description ?? instrument.description,\n    type: instrument.type,\n    unit: instrument.unit,\n    valueType: instrument.valueType,\n    advice: instrument.advice,\n  };\n}\n\nexport function isDescriptorCompatibleWith(\n  descriptor: InstrumentDescriptor,\n  otherDescriptor: InstrumentDescriptor\n) {\n  // Names are case-insensitive strings.\n  return (\n    equalsCaseInsensitive(descriptor.name, otherDescriptor.name) &&\n    descriptor.unit === otherDescriptor.unit &&\n    descriptor.type === otherDescriptor.type &&\n    descriptor.valueType === otherDescriptor.valueType\n  );\n}\n\n// ASCII string with a length no greater than 255 characters.\n// NB: the first character counted separately from the rest.\nconst NAME_REGEXP = /^[a-z][a-z0-9_.\\-/]{0,254}$/i;\nexport function isValidName(name: string): boolean {\n  return name.match(NAME_REGEXP) != null;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  diag,\n  MeterProvider as IMeterProvider,\n  Meter as IMeter,\n  MeterOptions,\n  createNoopMeter,\n} from '@opentelemetry/api';\nimport { IResource, Resource } from '@opentelemetry/resources';\nimport { MetricReader } from './export/MetricReader';\nimport { MeterProviderSharedState } from './state/MeterProviderSharedState';\nimport { MetricCollector } from './state/MetricCollector';\nimport { ForceFlushOptions, ShutdownOptions } from './types';\nimport { View } from './view/View';\n\n/**\n * MeterProviderOptions provides an interface for configuring a MeterProvider.\n */\nexport interface MeterProviderOptions {\n  /** Resource associated with metric telemetry  */\n  resource?: IResource;\n  views?: View[];\n}\n\n/**\n * This class implements the {@link MeterProvider} interface.\n */\nexport class MeterProvider implements IMeterProvider {\n  private _sharedState: MeterProviderSharedState;\n  private _shutdown = false;\n\n  constructor(options?: MeterProviderOptions) {\n    const resource = Resource.default().merge(\n      options?.resource ?? Resource.empty()\n    );\n    this._sharedState = new MeterProviderSharedState(resource);\n    if (options?.views != null && options.views.length > 0) {\n      for (const view of options.views) {\n        this._sharedState.viewRegistry.addView(view);\n      }\n    }\n  }\n\n  /**\n   * Get a meter with the configuration of the MeterProvider.\n   */\n  getMeter(name: string, version = '', options: MeterOptions = {}): IMeter {\n    // https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/metrics/sdk.md#meter-creation\n    if (this._shutdown) {\n      diag.warn('A shutdown MeterProvider cannot provide a Meter');\n      return createNoopMeter();\n    }\n\n    return this._sharedState.getMeterSharedState({\n      name,\n      version,\n      schemaUrl: options.schemaUrl,\n    }).meter;\n  }\n\n  /**\n   * Register a {@link MetricReader} to the meter provider. After the\n   * registration, the MetricReader can start metrics collection.\n   *\n   * @param metricReader the metric reader to be registered.\n   */\n  addMetricReader(metricReader: MetricReader) {\n    const collector = new MetricCollector(this._sharedState, metricReader);\n    metricReader.setMetricProducer(collector);\n    this._sharedState.metricCollectors.push(collector);\n  }\n\n  /**\n   * Flush all buffered data and shut down the MeterProvider and all registered\n   * MetricReaders.\n   *\n   * Returns a promise which is resolved when all flushes are complete.\n   */\n  async shutdown(options?: ShutdownOptions): Promise<void> {\n    if (this._shutdown) {\n      diag.warn('shutdown may only be called once per MeterProvider');\n      return;\n    }\n\n    this._shutdown = true;\n\n    await Promise.all(\n      this._sharedState.metricCollectors.map(collector => {\n        return collector.shutdown(options);\n      })\n    );\n  }\n\n  /**\n   * Notifies all registered MetricReaders to flush any buffered data.\n   *\n   * Returns a promise which is resolved when all flushes are complete.\n   */\n  async forceFlush(options?: ForceFlushOptions): Promise<void> {\n    // do not flush after shutdown\n    if (this._shutdown) {\n      diag.warn('invalid attempt to force flush after MeterProvider shutdown');\n      return;\n    }\n\n    await Promise.all(\n      this._sharedState.metricCollectors.map(collector => {\n        return collector.forceFlush(options);\n      })\n    );\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationScope } from '@opentelemetry/core';\nimport { InstrumentDescriptor } from '../InstrumentDescriptor';\nimport { InstrumentSelector } from './InstrumentSelector';\nimport { MeterSelector } from './MeterSelector';\nimport { View } from './View';\n\nexport class ViewRegistry {\n  private _registeredViews: View[] = [];\n\n  addView(view: View) {\n    this._registeredViews.push(view);\n  }\n\n  findViews(\n    instrument: InstrumentDescriptor,\n    meter: InstrumentationScope\n  ): View[] {\n    const views = this._registeredViews.filter(registeredView => {\n      return (\n        this._matchInstrument(registeredView.instrumentSelector, instrument) &&\n        this._matchMeter(registeredView.meterSelector, meter)\n      );\n    });\n\n    return views;\n  }\n\n  private _matchInstrument(\n    selector: InstrumentSelector,\n    instrument: InstrumentDescriptor\n  ): boolean {\n    return (\n      (selector.getType() === undefined ||\n        instrument.type === selector.getType()) &&\n      selector.getNameFilter().match(instrument.name) &&\n      selector.getUnitFilter().match(instrument.unit)\n    );\n  }\n\n  private _matchMeter(\n    selector: MeterSelector,\n    meter: InstrumentationScope\n  ): boolean {\n    return (\n      selector.getNameFilter().match(meter.name) &&\n      (meter.version === undefined ||\n        selector.getVersionFilter().match(meter.version)) &&\n      (meter.schemaUrl === undefined ||\n        selector.getSchemaUrlFilter().match(meter.schemaUrl))\n    );\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  context as contextApi,\n  diag,\n  Context,\n  MetricAttributes,\n  ValueType,\n  UpDownCounter,\n  Counter,\n  Histogram,\n  Observable,\n  ObservableCallback,\n  ObservableCounter,\n  ObservableGauge,\n  ObservableUpDownCounter,\n} from '@opentelemetry/api';\nimport { millisToHrTime } from '@opentelemetry/core';\nimport { InstrumentDescriptor } from './InstrumentDescriptor';\nimport { ObservableRegistry } from './state/ObservableRegistry';\nimport {\n  AsyncWritableMetricStorage,\n  WritableMetricStorage,\n} from './state/WritableMetricStorage';\n\nexport class SyncInstrument {\n  constructor(\n    private _writableMetricStorage: WritableMetricStorage,\n    protected _descriptor: InstrumentDescriptor\n  ) {}\n\n  protected _record(\n    value: number,\n    attributes: MetricAttributes = {},\n    context: Context = contextApi.active()\n  ) {\n    if (typeof value !== 'number') {\n      diag.warn(\n        `non-number value provided to metric ${this._descriptor.name}: ${value}`\n      );\n      return;\n    }\n    if (\n      this._descriptor.valueType === ValueType.INT &&\n      !Number.isInteger(value)\n    ) {\n      diag.warn(\n        `INT value type cannot accept a floating-point value for ${this._descriptor.name}, ignoring the fractional digits.`\n      );\n      value = Math.trunc(value);\n      // ignore non-finite values.\n      if (!Number.isInteger(value)) {\n        return;\n      }\n    }\n    this._writableMetricStorage.record(\n      value,\n      attributes,\n      context,\n      millisToHrTime(Date.now())\n    );\n  }\n}\n\n/**\n * The class implements {@link UpDownCounter} interface.\n */\nexport class UpDownCounterInstrument\n  extends SyncInstrument\n  implements UpDownCounter\n{\n  /**\n   * Increment value of counter by the input. Inputs may be negative.\n   */\n  add(value: number, attributes?: MetricAttributes, ctx?: Context): void {\n    this._record(value, attributes, ctx);\n  }\n}\n\n/**\n * The class implements {@link Counter} interface.\n */\nexport class CounterInstrument extends SyncInstrument implements Counter {\n  /**\n   * Increment value of counter by the input. Inputs may not be negative.\n   */\n  add(value: number, attributes?: MetricAttributes, ctx?: Context): void {\n    if (value < 0) {\n      diag.warn(\n        `negative value provided to counter ${this._descriptor.name}: ${value}`\n      );\n      return;\n    }\n\n    this._record(value, attributes, ctx);\n  }\n}\n\n/**\n * The class implements {@link Histogram} interface.\n */\nexport class HistogramInstrument extends SyncInstrument implements Histogram {\n  /**\n   * Records a measurement. Value of the measurement must not be negative.\n   */\n  record(value: number, attributes?: MetricAttributes, ctx?: Context): void {\n    if (value < 0) {\n      diag.warn(\n        `negative value provided to histogram ${this._descriptor.name}: ${value}`\n      );\n      return;\n    }\n    this._record(value, attributes, ctx);\n  }\n}\n\nexport class ObservableInstrument implements Observable {\n  /** @internal */\n  _metricStorages: AsyncWritableMetricStorage[];\n  /** @internal */\n  _descriptor: InstrumentDescriptor;\n\n  constructor(\n    descriptor: InstrumentDescriptor,\n    metricStorages: AsyncWritableMetricStorage[],\n    private _observableRegistry: ObservableRegistry\n  ) {\n    this._descriptor = descriptor;\n    this._metricStorages = metricStorages;\n  }\n\n  /**\n   * @see {Observable.addCallback}\n   */\n  addCallback(callback: ObservableCallback) {\n    this._observableRegistry.addCallback(callback, this);\n  }\n\n  /**\n   * @see {Observable.removeCallback}\n   */\n  removeCallback(callback: ObservableCallback) {\n    this._observableRegistry.removeCallback(callback, this);\n  }\n}\n\nexport class ObservableCounterInstrument\n  extends ObservableInstrument\n  implements ObservableCounter {}\nexport class ObservableGaugeInstrument\n  extends ObservableInstrument\n  implements ObservableGauge {}\nexport class ObservableUpDownCounterInstrument\n  extends ObservableInstrument\n  implements ObservableUpDownCounter {}\n\nexport function isObservableInstrument(\n  it: unknown\n): it is ObservableInstrument {\n  return it instanceof ObservableInstrument;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Meter as IMeter,\n  MetricOptions,\n  Histogram,\n  Counter,\n  UpDownCounter,\n  ObservableGauge,\n  ObservableCounter,\n  ObservableUpDownCounter,\n  BatchObservableCallback,\n  Observable,\n} from '@opentelemetry/api';\nimport {\n  createInstrumentDescriptor,\n  InstrumentType,\n} from './InstrumentDescriptor';\nimport {\n  CounterInstrument,\n  HistogramInstrument,\n  ObservableCounterInstrument,\n  ObservableGaugeInstrument,\n  ObservableUpDownCounterInstrument,\n  UpDownCounterInstrument,\n} from './Instruments';\nimport { MeterSharedState } from './state/MeterSharedState';\n\n/**\n * This class implements the {@link IMeter} interface.\n */\nexport class Meter implements IMeter {\n  constructor(private _meterSharedState: MeterSharedState) {}\n\n  /**\n   * Create a {@link Histogram} instrument.\n   */\n  createHistogram(name: string, options?: MetricOptions): Histogram {\n    const descriptor = createInstrumentDescriptor(\n      name,\n      InstrumentType.HISTOGRAM,\n      options\n    );\n    const storage = this._meterSharedState.registerMetricStorage(descriptor);\n    return new HistogramInstrument(storage, descriptor);\n  }\n\n  /**\n   * Create a {@link Counter} instrument.\n   */\n  createCounter(name: string, options?: MetricOptions): Counter {\n    const descriptor = createInstrumentDescriptor(\n      name,\n      InstrumentType.COUNTER,\n      options\n    );\n    const storage = this._meterSharedState.registerMetricStorage(descriptor);\n    return new CounterInstrument(storage, descriptor);\n  }\n\n  /**\n   * Create a {@link UpDownCounter} instrument.\n   */\n  createUpDownCounter(name: string, options?: MetricOptions): UpDownCounter {\n    const descriptor = createInstrumentDescriptor(\n      name,\n      InstrumentType.UP_DOWN_COUNTER,\n      options\n    );\n    const storage = this._meterSharedState.registerMetricStorage(descriptor);\n    return new UpDownCounterInstrument(storage, descriptor);\n  }\n\n  /**\n   * Create a {@link ObservableGauge} instrument.\n   */\n  createObservableGauge(\n    name: string,\n    options?: MetricOptions\n  ): ObservableGauge {\n    const descriptor = createInstrumentDescriptor(\n      name,\n      InstrumentType.OBSERVABLE_GAUGE,\n      options\n    );\n    const storages =\n      this._meterSharedState.registerAsyncMetricStorage(descriptor);\n    return new ObservableGaugeInstrument(\n      descriptor,\n      storages,\n      this._meterSharedState.observableRegistry\n    );\n  }\n\n  /**\n   * Create a {@link ObservableCounter} instrument.\n   */\n  createObservableCounter(\n    name: string,\n    options?: MetricOptions\n  ): ObservableCounter {\n    const descriptor = createInstrumentDescriptor(\n      name,\n      InstrumentType.OBSERVABLE_COUNTER,\n      options\n    );\n    const storages =\n      this._meterSharedState.registerAsyncMetricStorage(descriptor);\n    return new ObservableCounterInstrument(\n      descriptor,\n      storages,\n      this._meterSharedState.observableRegistry\n    );\n  }\n\n  /**\n   * Create a {@link ObservableUpDownCounter} instrument.\n   */\n  createObservableUpDownCounter(\n    name: string,\n    options?: MetricOptions\n  ): ObservableUpDownCounter {\n    const descriptor = createInstrumentDescriptor(\n      name,\n      InstrumentType.OBSERVABLE_UP_DOWN_COUNTER,\n      options\n    );\n    const storages =\n      this._meterSharedState.registerAsyncMetricStorage(descriptor);\n    return new ObservableUpDownCounterInstrument(\n      descriptor,\n      storages,\n      this._meterSharedState.observableRegistry\n    );\n  }\n\n  /**\n   * @see {@link Meter.addBatchObservableCallback}\n   */\n  addBatchObservableCallback(\n    callback: BatchObservableCallback,\n    observables: Observable[]\n  ) {\n    this._meterSharedState.observableRegistry.addBatchCallback(\n      callback,\n      observables\n    );\n  }\n\n  /**\n   * @see {@link Meter.removeBatchObservableCallback}\n   */\n  removeBatchObservableCallback(\n    callback: BatchObservableCallback,\n    observables: Observable[]\n  ) {\n    this._meterSharedState.observableRegistry.removeBatchCallback(\n      callback,\n      observables\n    );\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HrTime } from '@opentelemetry/api';\nimport { MetricData } from '../export/MetricData';\nimport { Maybe } from '../utils';\nimport { MetricCollectorHandle } from './MetricCollector';\nimport {\n  createInstrumentDescriptor,\n  InstrumentDescriptor,\n} from '../InstrumentDescriptor';\n\n/**\n * Internal interface.\n *\n * Represents a storage from which we can collect metrics.\n */\nexport abstract class MetricStorage {\n  constructor(protected _instrumentDescriptor: InstrumentDescriptor) {}\n\n  /**\n   * Collects the metrics from this storage.\n   *\n   * Note: This is a stateful operation and may reset any interval-related\n   * state for the MetricCollector.\n   */\n  abstract collect(\n    collector: MetricCollectorHandle,\n    collectionTime: HrTime\n  ): Maybe<MetricData>;\n\n  getInstrumentDescriptor(): Readonly<InstrumentDescriptor> {\n    return this._instrumentDescriptor;\n  }\n\n  updateDescription(description: string): void {\n    this._instrumentDescriptor = createInstrumentDescriptor(\n      this._instrumentDescriptor.name,\n      this._instrumentDescriptor.type,\n      {\n        description: description,\n        valueType: this._instrumentDescriptor.valueType,\n        unit: this._instrumentDescriptor.unit,\n        advice: this._instrumentDescriptor.advice,\n      }\n    );\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MetricAttributes } from '@opentelemetry/api';\nimport { hashAttributes } from '../utils';\n\nexport interface Hash<ValueType, HashCodeType> {\n  (value: ValueType): HashCodeType;\n}\n\nexport class HashMap<KeyType, ValueType, HashCodeType> {\n  private _valueMap = new Map<HashCodeType, ValueType>();\n  private _keyMap = new Map<HashCodeType, KeyType>();\n\n  constructor(private _hash: Hash<KeyType, HashCodeType>) {}\n\n  get(key: KeyType, hashCode?: HashCodeType) {\n    hashCode ??= this._hash(key);\n    return this._valueMap.get(hashCode);\n  }\n\n  getOrDefault(key: KeyType, defaultFactory: () => ValueType) {\n    const hash = this._hash(key);\n    if (this._valueMap.has(hash)) {\n      return this._valueMap.get(hash);\n    }\n    const val = defaultFactory();\n    if (!this._keyMap.has(hash)) {\n      this._keyMap.set(hash, key);\n    }\n    this._valueMap.set(hash, val);\n    return val;\n  }\n\n  set(key: KeyType, value: ValueType, hashCode?: HashCodeType) {\n    hashCode ??= this._hash(key);\n    if (!this._keyMap.has(hashCode)) {\n      this._keyMap.set(hashCode, key);\n    }\n    this._valueMap.set(hashCode, value);\n  }\n\n  has(key: KeyType, hashCode?: HashCodeType) {\n    hashCode ??= this._hash(key);\n    return this._valueMap.has(hashCode);\n  }\n\n  *keys(): IterableIterator<[KeyType, HashCodeType]> {\n    const keyIterator = this._keyMap.entries();\n    let next = keyIterator.next();\n    while (next.done !== true) {\n      yield [next.value[1], next.value[0]];\n      next = keyIterator.next();\n    }\n  }\n\n  *entries(): IterableIterator<[KeyType, ValueType, HashCodeType]> {\n    const valueIterator = this._valueMap.entries();\n    let next = valueIterator.next();\n    while (next.done !== true) {\n      // next.value[0] here can not be undefined\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      yield [this._keyMap.get(next.value[0])!, next.value[1], next.value[0]];\n      next = valueIterator.next();\n    }\n  }\n\n  get size() {\n    return this._valueMap.size;\n  }\n}\n\nexport class AttributeHashMap<ValueType> extends HashMap<\n  MetricAttributes,\n  ValueType,\n  string\n> {\n  constructor() {\n    super(hashAttributes);\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, HrTime, MetricAttributes } from '@opentelemetry/api';\nimport { Maybe } from '../utils';\nimport { Accumulation, Aggregator } from '../aggregator/types';\nimport { AttributeHashMap } from './HashMap';\n\n/**\n * Internal interface.\n *\n * Allows synchronous collection of metrics. This processor should allow\n * allocation of new aggregation cells for metrics and convert cumulative\n * recording to delta data points.\n */\nexport class DeltaMetricProcessor<T extends Maybe<Accumulation>> {\n  private _activeCollectionStorage = new AttributeHashMap<T>();\n  // TODO: find a reasonable mean to clean the memo;\n  // https://github.com/open-telemetry/opentelemetry-specification/pull/2208\n  private _cumulativeMemoStorage = new AttributeHashMap<T>();\n\n  constructor(private _aggregator: Aggregator<T>) {}\n\n  record(\n    value: number,\n    attributes: MetricAttributes,\n    _context: Context,\n    collectionTime: HrTime\n  ) {\n    const accumulation = this._activeCollectionStorage.getOrDefault(\n      attributes,\n      () => this._aggregator.createAccumulation(collectionTime)\n    );\n    accumulation?.record(value);\n  }\n\n  batchCumulate(\n    measurements: AttributeHashMap<number>,\n    collectionTime: HrTime\n  ) {\n    Array.from(measurements.entries()).forEach(\n      ([attributes, value, hashCode]) => {\n        const accumulation =\n          this._aggregator.createAccumulation(collectionTime);\n        accumulation?.record(value);\n        let delta = accumulation;\n        // Diff with recorded cumulative memo.\n        if (this._cumulativeMemoStorage.has(attributes, hashCode)) {\n          // has() returned true, previous is present.\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          const previous = this._cumulativeMemoStorage.get(\n            attributes,\n            hashCode\n          )!;\n          delta = this._aggregator.diff(previous, accumulation);\n        }\n        // Merge with uncollected active delta.\n        if (this._activeCollectionStorage.has(attributes, hashCode)) {\n          // has() returned true, previous is present.\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          const active = this._activeCollectionStorage.get(\n            attributes,\n            hashCode\n          )!;\n          delta = this._aggregator.merge(active, delta);\n        }\n\n        // Save the current record and the delta record.\n        this._cumulativeMemoStorage.set(attributes, accumulation, hashCode);\n        this._activeCollectionStorage.set(attributes, delta, hashCode);\n      }\n    );\n  }\n\n  /**\n   * Returns a collection of delta metrics. Start time is the when first\n   * time event collected.\n   */\n  collect() {\n    const unreportedDelta = this._activeCollectionStorage;\n    this._activeCollectionStorage = new AttributeHashMap();\n    return unreportedDelta;\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HrTime } from '@opentelemetry/api';\nimport {\n  Accumulation,\n  AccumulationRecord,\n  Aggregator,\n} from '../aggregator/types';\nimport { MetricData } from '../export/MetricData';\nimport { InstrumentDescriptor } from '../InstrumentDescriptor';\nimport { AggregationTemporality } from '../export/AggregationTemporality';\nimport { Maybe } from '../utils';\nimport { MetricCollectorHandle } from './MetricCollector';\nimport { AttributeHashMap } from './HashMap';\n\n/**\n * Remembers what was presented to a specific exporter.\n */\ninterface LastReportedHistory<T extends Maybe<Accumulation>> {\n  /**\n   * The last accumulation of metric data.\n   */\n  accumulations: AttributeHashMap<T>;\n  /**\n   * The timestamp the data was reported.\n   */\n  collectionTime: HrTime;\n  /**\n   * The AggregationTemporality used to aggregate reports.\n   */\n  aggregationTemporality: AggregationTemporality;\n}\n\n/**\n * Internal interface.\n *\n * Provides unique reporting for each collector. Allows synchronous collection\n * of metrics and reports given temporality values.\n */\nexport class TemporalMetricProcessor<T extends Maybe<Accumulation>> {\n  private _unreportedAccumulations = new Map<\n    MetricCollectorHandle,\n    AttributeHashMap<T>[]\n  >();\n  private _reportHistory = new Map<\n    MetricCollectorHandle,\n    LastReportedHistory<T>\n  >();\n\n  constructor(\n    private _aggregator: Aggregator<T>,\n    collectorHandles: MetricCollectorHandle[]\n  ) {\n    collectorHandles.forEach(handle => {\n      this._unreportedAccumulations.set(handle, []);\n    });\n  }\n\n  /**\n   * Builds the {@link MetricData} streams to report against a specific MetricCollector.\n   * @param collector The information of the MetricCollector.\n   * @param collectors The registered collectors.\n   * @param instrumentDescriptor The instrumentation descriptor that these metrics generated with.\n   * @param currentAccumulations The current accumulation of metric data from instruments.\n   * @param collectionTime The current collection timestamp.\n   * @returns The {@link MetricData} points or `null`.\n   */\n  buildMetrics(\n    collector: MetricCollectorHandle,\n    instrumentDescriptor: InstrumentDescriptor,\n    currentAccumulations: AttributeHashMap<T>,\n    collectionTime: HrTime\n  ): Maybe<MetricData> {\n    this._stashAccumulations(currentAccumulations);\n    const unreportedAccumulations =\n      this._getMergedUnreportedAccumulations(collector);\n\n    let result = unreportedAccumulations;\n    let aggregationTemporality: AggregationTemporality;\n    // Check our last report time.\n    if (this._reportHistory.has(collector)) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const last = this._reportHistory.get(collector)!;\n      const lastCollectionTime = last.collectionTime;\n      aggregationTemporality = last.aggregationTemporality;\n\n      // Use aggregation temporality + instrument to determine if we do a merge or a diff of\n      // previous. We have the following four scenarios:\n      // 1. Cumulative Aggregation (temporality) + Delta recording (sync instrument).\n      //    Here we merge with our last record to get a cumulative aggregation.\n      // 2. Cumulative Aggregation + Cumulative recording (async instrument).\n      //    Cumulative records are converted to delta recording with DeltaMetricProcessor.\n      //    Here we merge with our last record to get a cumulative aggregation.\n      // 3. Delta Aggregation + Delta recording\n      //    Calibrate the startTime of metric streams to be the reader's lastCollectionTime.\n      // 4. Delta Aggregation + Cumulative recording.\n      //    Cumulative records are converted to delta recording with DeltaMetricProcessor.\n      //    Calibrate the startTime of metric streams to be the reader's lastCollectionTime.\n      if (aggregationTemporality === AggregationTemporality.CUMULATIVE) {\n        // We need to make sure the current delta recording gets merged into the previous cumulative\n        // for the next cumulative recording.\n        result = TemporalMetricProcessor.merge(\n          last.accumulations,\n          unreportedAccumulations,\n          this._aggregator\n        );\n      } else {\n        result = TemporalMetricProcessor.calibrateStartTime(\n          last.accumulations,\n          unreportedAccumulations,\n          lastCollectionTime\n        );\n      }\n    } else {\n      // Call into user code to select aggregation temporality for the instrument.\n      aggregationTemporality = collector.selectAggregationTemporality(\n        instrumentDescriptor.type\n      );\n    }\n\n    // Update last reported (cumulative) accumulation.\n    this._reportHistory.set(collector, {\n      accumulations: result,\n      collectionTime,\n      aggregationTemporality,\n    });\n\n    const accumulationRecords = AttributesMapToAccumulationRecords(result);\n\n    // do not convert to metric data if there is nothing to convert.\n    if (accumulationRecords.length === 0) {\n      return undefined;\n    }\n\n    return this._aggregator.toMetricData(\n      instrumentDescriptor,\n      aggregationTemporality,\n      accumulationRecords,\n      /* endTime */ collectionTime\n    );\n  }\n\n  private _stashAccumulations(currentAccumulation: AttributeHashMap<T>) {\n    const registeredCollectors = this._unreportedAccumulations.keys();\n    for (const collector of registeredCollectors) {\n      let stash = this._unreportedAccumulations.get(collector);\n      if (stash === undefined) {\n        stash = [];\n        this._unreportedAccumulations.set(collector, stash);\n      }\n      stash.push(currentAccumulation);\n    }\n  }\n\n  private _getMergedUnreportedAccumulations(collector: MetricCollectorHandle) {\n    let result = new AttributeHashMap<T>();\n    const unreportedList = this._unreportedAccumulations.get(collector);\n    this._unreportedAccumulations.set(collector, []);\n    if (unreportedList === undefined) {\n      return result;\n    }\n    for (const it of unreportedList) {\n      result = TemporalMetricProcessor.merge(result, it, this._aggregator);\n    }\n    return result;\n  }\n\n  static merge<T extends Maybe<Accumulation>>(\n    last: AttributeHashMap<T>,\n    current: AttributeHashMap<T>,\n    aggregator: Aggregator<T>\n  ) {\n    const result = last;\n    const iterator = current.entries();\n    let next = iterator.next();\n    while (next.done !== true) {\n      const [key, record, hash] = next.value;\n      if (last.has(key, hash)) {\n        const lastAccumulation = last.get(key, hash);\n        // last.has() returned true, lastAccumulation is present.\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const accumulation = aggregator.merge(lastAccumulation!, record);\n        result.set(key, accumulation, hash);\n      } else {\n        result.set(key, record, hash);\n      }\n\n      next = iterator.next();\n    }\n    return result;\n  }\n\n  /**\n   * Calibrate the reported metric streams' startTime to lastCollectionTime. Leaves\n   * the new stream to be the initial observation time unchanged.\n   */\n  static calibrateStartTime<T extends Maybe<Accumulation>>(\n    last: AttributeHashMap<T>,\n    current: AttributeHashMap<T>,\n    lastCollectionTime: HrTime\n  ) {\n    for (const [key, hash] of last.keys()) {\n      const currentAccumulation = current.get(key, hash);\n      currentAccumulation?.setStartTime(lastCollectionTime);\n    }\n    return current;\n  }\n}\n\n// TypeScript complains about converting 3 elements tuple to AccumulationRecord<T>.\nfunction AttributesMapToAccumulationRecords<T>(\n  map: AttributeHashMap<T>\n): AccumulationRecord<T>[] {\n  return Array.from(map.entries()) as unknown as AccumulationRecord<T>[];\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HrTime } from '@opentelemetry/api';\nimport { Accumulation, Aggregator } from '../aggregator/types';\nimport { InstrumentDescriptor } from '../InstrumentDescriptor';\nimport { AttributesProcessor } from '../view/AttributesProcessor';\nimport { MetricStorage } from './MetricStorage';\nimport { MetricData } from '../export/MetricData';\nimport { DeltaMetricProcessor } from './DeltaMetricProcessor';\nimport { TemporalMetricProcessor } from './TemporalMetricProcessor';\nimport { Maybe } from '../utils';\nimport { MetricCollectorHandle } from './MetricCollector';\nimport { AttributeHashMap } from './HashMap';\nimport { AsyncWritableMetricStorage } from './WritableMetricStorage';\n\n/**\n * Internal interface.\n *\n * Stores and aggregates {@link MetricData} for asynchronous instruments.\n */\nexport class AsyncMetricStorage<T extends Maybe<Accumulation>>\n  extends MetricStorage\n  implements AsyncWritableMetricStorage\n{\n  private _deltaMetricStorage: DeltaMetricProcessor<T>;\n  private _temporalMetricStorage: TemporalMetricProcessor<T>;\n\n  constructor(\n    _instrumentDescriptor: InstrumentDescriptor,\n    aggregator: Aggregator<T>,\n    private _attributesProcessor: AttributesProcessor,\n    collectorHandles: MetricCollectorHandle[]\n  ) {\n    super(_instrumentDescriptor);\n    this._deltaMetricStorage = new DeltaMetricProcessor(aggregator);\n    this._temporalMetricStorage = new TemporalMetricProcessor(\n      aggregator,\n      collectorHandles\n    );\n  }\n\n  record(measurements: AttributeHashMap<number>, observationTime: HrTime) {\n    const processed = new AttributeHashMap<number>();\n    Array.from(measurements.entries()).forEach(([attributes, value]) => {\n      processed.set(this._attributesProcessor.process(attributes), value);\n    });\n    this._deltaMetricStorage.batchCumulate(processed, observationTime);\n  }\n\n  /**\n   * Collects the metrics from this storage. The ObservableCallback is invoked\n   * during the collection.\n   *\n   * Note: This is a stateful operation and may reset any interval-related\n   * state for the MetricCollector.\n   */\n  collect(\n    collector: MetricCollectorHandle,\n    collectionTime: HrTime\n  ): Maybe<MetricData> {\n    const accumulations = this._deltaMetricStorage.collect();\n\n    return this._temporalMetricStorage.buildMetrics(\n      collector,\n      this._instrumentDescriptor,\n      accumulations,\n      collectionTime\n    );\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MetricStorage } from './MetricStorage';\nimport {\n  InstrumentDescriptor,\n  isDescriptorCompatibleWith,\n} from '../InstrumentDescriptor';\nimport * as api from '@opentelemetry/api';\nimport {\n  getConflictResolutionRecipe,\n  getIncompatibilityDetails,\n} from '../view/RegistrationConflicts';\nimport { MetricCollectorHandle } from './MetricCollector';\n\ntype StorageMap = Map<string, MetricStorage[]>;\n\n/**\n * Internal class for storing {@link MetricStorage}\n */\nexport class MetricStorageRegistry {\n  private readonly _sharedRegistry: StorageMap = new Map();\n  private readonly _perCollectorRegistry = new Map<\n    MetricCollectorHandle,\n    StorageMap\n  >();\n\n  static create() {\n    return new MetricStorageRegistry();\n  }\n\n  getStorages(collector: MetricCollectorHandle): MetricStorage[] {\n    let storages: MetricStorage[] = [];\n    for (const metricStorages of this._sharedRegistry.values()) {\n      storages = storages.concat(metricStorages);\n    }\n\n    const perCollectorStorages = this._perCollectorRegistry.get(collector);\n    if (perCollectorStorages != null) {\n      for (const metricStorages of perCollectorStorages.values()) {\n        storages = storages.concat(metricStorages);\n      }\n    }\n\n    return storages;\n  }\n\n  register(storage: MetricStorage) {\n    this._registerStorage(storage, this._sharedRegistry);\n  }\n\n  registerForCollector(\n    collector: MetricCollectorHandle,\n    storage: MetricStorage\n  ) {\n    let storageMap = this._perCollectorRegistry.get(collector);\n    if (storageMap == null) {\n      storageMap = new Map();\n      this._perCollectorRegistry.set(collector, storageMap);\n    }\n    this._registerStorage(storage, storageMap);\n  }\n\n  findOrUpdateCompatibleStorage<T extends MetricStorage>(\n    expectedDescriptor: InstrumentDescriptor\n  ): T | null {\n    const storages = this._sharedRegistry.get(expectedDescriptor.name);\n    if (storages === undefined) {\n      return null;\n    }\n\n    // If the descriptor is compatible, the type of their metric storage\n    // (either SyncMetricStorage or AsyncMetricStorage) must be compatible.\n    return this._findOrUpdateCompatibleStorage<T>(expectedDescriptor, storages);\n  }\n\n  findOrUpdateCompatibleCollectorStorage<T extends MetricStorage>(\n    collector: MetricCollectorHandle,\n    expectedDescriptor: InstrumentDescriptor\n  ): T | null {\n    const storageMap = this._perCollectorRegistry.get(collector);\n    if (storageMap === undefined) {\n      return null;\n    }\n\n    const storages = storageMap.get(expectedDescriptor.name);\n    if (storages === undefined) {\n      return null;\n    }\n\n    // If the descriptor is compatible, the type of their metric storage\n    // (either SyncMetricStorage or AsyncMetricStorage) must be compatible.\n    return this._findOrUpdateCompatibleStorage<T>(expectedDescriptor, storages);\n  }\n\n  private _registerStorage(storage: MetricStorage, storageMap: StorageMap) {\n    const descriptor = storage.getInstrumentDescriptor();\n    const storages = storageMap.get(descriptor.name);\n\n    if (storages === undefined) {\n      storageMap.set(descriptor.name, [storage]);\n      return;\n    }\n\n    storages.push(storage);\n  }\n\n  private _findOrUpdateCompatibleStorage<T extends MetricStorage>(\n    expectedDescriptor: InstrumentDescriptor,\n    existingStorages: MetricStorage[]\n  ): T | null {\n    let compatibleStorage = null;\n\n    for (const existingStorage of existingStorages) {\n      const existingDescriptor = existingStorage.getInstrumentDescriptor();\n\n      if (isDescriptorCompatibleWith(existingDescriptor, expectedDescriptor)) {\n        // Use the longer description if it does not match.\n        if (existingDescriptor.description !== expectedDescriptor.description) {\n          if (\n            expectedDescriptor.description.length >\n            existingDescriptor.description.length\n          ) {\n            existingStorage.updateDescription(expectedDescriptor.description);\n          }\n\n          api.diag.warn(\n            'A view or instrument with the name ',\n            expectedDescriptor.name,\n            ' has already been registered, but has a different description and is incompatible with another registered view.\\n',\n            'Details:\\n',\n            getIncompatibilityDetails(existingDescriptor, expectedDescriptor),\n            'The longer description will be used.\\nTo resolve the conflict:',\n            getConflictResolutionRecipe(existingDescriptor, expectedDescriptor)\n          );\n        }\n        // Storage is fully compatible. There will never be more than one pre-existing fully compatible storage.\n        compatibleStorage = existingStorage as T;\n      } else {\n        // The implementation SHOULD warn about duplicate instrument registration\n        // conflicts after applying View configuration.\n        api.diag.warn(\n          'A view or instrument with the name ',\n          expectedDescriptor.name,\n          ' has already been registered and is incompatible with another registered view.\\n',\n          'Details:\\n',\n          getIncompatibilityDetails(existingDescriptor, expectedDescriptor),\n          'To resolve the conflict:\\n',\n          getConflictResolutionRecipe(existingDescriptor, expectedDescriptor)\n        );\n      }\n    }\n\n    return compatibleStorage;\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentSelectorCriteria } from './InstrumentSelector';\nimport { InstrumentDescriptor } from '../InstrumentDescriptor';\n\nexport function getIncompatibilityDetails(\n  existing: InstrumentDescriptor,\n  otherDescriptor: InstrumentDescriptor\n) {\n  let incompatibility = '';\n  if (existing.unit !== otherDescriptor.unit) {\n    incompatibility += `\\t- Unit '${existing.unit}' does not match '${otherDescriptor.unit}'\\n`;\n  }\n  if (existing.type !== otherDescriptor.type) {\n    incompatibility += `\\t- Type '${existing.type}' does not match '${otherDescriptor.type}'\\n`;\n  }\n  if (existing.valueType !== otherDescriptor.valueType) {\n    incompatibility += `\\t- Value Type '${existing.valueType}' does not match '${otherDescriptor.valueType}'\\n`;\n  }\n  if (existing.description !== otherDescriptor.description) {\n    incompatibility += `\\t- Description '${existing.description}' does not match '${otherDescriptor.description}'\\n`;\n  }\n\n  return incompatibility;\n}\n\nexport function getValueTypeConflictResolutionRecipe(\n  existing: InstrumentDescriptor,\n  otherDescriptor: InstrumentDescriptor\n) {\n  return `\\t- use valueType '${existing.valueType}' on instrument creation or use an instrument name other than '${otherDescriptor.name}'`;\n}\n\nexport function getUnitConflictResolutionRecipe(\n  existing: InstrumentDescriptor,\n  otherDescriptor: InstrumentDescriptor\n) {\n  return `\\t- use unit '${existing.unit}' on instrument creation or use an instrument name other than '${otherDescriptor.name}'`;\n}\n\nexport function getTypeConflictResolutionRecipe(\n  existing: InstrumentDescriptor,\n  otherDescriptor: InstrumentDescriptor\n) {\n  const selector: InstrumentSelectorCriteria = {\n    name: otherDescriptor.name,\n    type: otherDescriptor.type,\n    unit: otherDescriptor.unit,\n  };\n\n  const selectorString = JSON.stringify(selector);\n\n  return `\\t- create a new view with a name other than '${existing.name}' and InstrumentSelector '${selectorString}'`;\n}\n\nexport function getDescriptionResolutionRecipe(\n  existing: InstrumentDescriptor,\n  otherDescriptor: InstrumentDescriptor\n): string {\n  const selector: InstrumentSelectorCriteria = {\n    name: otherDescriptor.name,\n    type: otherDescriptor.type,\n    unit: otherDescriptor.unit,\n  };\n\n  const selectorString = JSON.stringify(selector);\n\n  return `\\t- create a new view with a name other than '${existing.name}' and InstrumentSelector '${selectorString}'\n    \\t- OR - create a new view with the name ${existing.name} and description '${existing.description}' and InstrumentSelector ${selectorString}\n    \\t- OR - create a new view with the name ${otherDescriptor.name} and description '${existing.description}' and InstrumentSelector ${selectorString}`;\n}\n\nexport function getConflictResolutionRecipe(\n  existing: InstrumentDescriptor,\n  otherDescriptor: InstrumentDescriptor\n): string {\n  // Conflicts that cannot be solved via views.\n  if (existing.valueType !== otherDescriptor.valueType) {\n    return getValueTypeConflictResolutionRecipe(existing, otherDescriptor);\n  }\n\n  if (existing.unit !== otherDescriptor.unit) {\n    return getUnitConflictResolutionRecipe(existing, otherDescriptor);\n  }\n\n  // Conflicts that can be solved via views.\n  if (existing.type !== otherDescriptor.type) {\n    // this will automatically solve possible description conflicts.\n    return getTypeConflictResolutionRecipe(existing, otherDescriptor);\n  }\n\n  if (existing.description !== otherDescriptor.description) {\n    return getDescriptionResolutionRecipe(existing, otherDescriptor);\n  }\n\n  return '';\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, HrTime, MetricAttributes } from '@opentelemetry/api';\nimport { WritableMetricStorage } from './WritableMetricStorage';\n\n/**\n * Internal interface.\n */\nexport class MultiMetricStorage implements WritableMetricStorage {\n  constructor(private readonly _backingStorages: WritableMetricStorage[]) {}\n\n  record(\n    value: number,\n    attributes: MetricAttributes,\n    context: Context,\n    recordTime: HrTime\n  ) {\n    this._backingStorages.forEach(it => {\n      it.record(value, attributes, context, recordTime);\n    });\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  diag,\n  HrTime,\n  BatchObservableCallback,\n  Observable,\n  ObservableCallback,\n} from '@opentelemetry/api';\nimport { isObservableInstrument, ObservableInstrument } from '../Instruments';\nimport {\n  BatchObservableResultImpl,\n  ObservableResultImpl,\n} from '../ObservableResult';\nimport {\n  callWithTimeout,\n  PromiseAllSettled,\n  isPromiseAllSettledRejectionResult,\n  setEquals,\n} from '../utils';\n\n/**\n * Records for single instrument observable callback.\n */\ninterface ObservableCallbackRecord {\n  callback: ObservableCallback;\n  instrument: ObservableInstrument;\n}\n\n/**\n * Records for multiple instruments observable callback.\n */\ninterface BatchObservableCallbackRecord {\n  callback: BatchObservableCallback;\n  instruments: Set<ObservableInstrument>;\n}\n\n/**\n * An internal interface for managing ObservableCallbacks.\n *\n * Every registered callback associated with a set of instruments are be evaluated\n * exactly once during collection prior to reading data for that instrument.\n */\nexport class ObservableRegistry {\n  private _callbacks: ObservableCallbackRecord[] = [];\n  private _batchCallbacks: BatchObservableCallbackRecord[] = [];\n\n  addCallback(callback: ObservableCallback, instrument: ObservableInstrument) {\n    const idx = this._findCallback(callback, instrument);\n    if (idx >= 0) {\n      return;\n    }\n    this._callbacks.push({ callback, instrument });\n  }\n\n  removeCallback(\n    callback: ObservableCallback,\n    instrument: ObservableInstrument\n  ) {\n    const idx = this._findCallback(callback, instrument);\n    if (idx < 0) {\n      return;\n    }\n    this._callbacks.splice(idx, 1);\n  }\n\n  addBatchCallback(\n    callback: BatchObservableCallback,\n    instruments: Observable[]\n  ) {\n    // Create a set of unique instruments.\n    const observableInstruments = new Set(\n      instruments.filter(isObservableInstrument)\n    );\n    if (observableInstruments.size === 0) {\n      diag.error(\n        'BatchObservableCallback is not associated with valid instruments',\n        instruments\n      );\n      return;\n    }\n    const idx = this._findBatchCallback(callback, observableInstruments);\n    if (idx >= 0) {\n      return;\n    }\n    this._batchCallbacks.push({ callback, instruments: observableInstruments });\n  }\n\n  removeBatchCallback(\n    callback: BatchObservableCallback,\n    instruments: Observable[]\n  ) {\n    // Create a set of unique instruments.\n    const observableInstruments = new Set(\n      instruments.filter(isObservableInstrument)\n    );\n    const idx = this._findBatchCallback(callback, observableInstruments);\n    if (idx < 0) {\n      return;\n    }\n    this._batchCallbacks.splice(idx, 1);\n  }\n\n  /**\n   * @returns a promise of rejected reasons for invoking callbacks.\n   */\n  async observe(\n    collectionTime: HrTime,\n    timeoutMillis?: number\n  ): Promise<unknown[]> {\n    const callbackFutures = this._observeCallbacks(\n      collectionTime,\n      timeoutMillis\n    );\n    const batchCallbackFutures = this._observeBatchCallbacks(\n      collectionTime,\n      timeoutMillis\n    );\n\n    const results = await PromiseAllSettled([\n      ...callbackFutures,\n      ...batchCallbackFutures,\n    ]);\n\n    const rejections = results\n      .filter(isPromiseAllSettledRejectionResult)\n      .map(it => it.reason);\n    return rejections;\n  }\n\n  private _observeCallbacks(observationTime: HrTime, timeoutMillis?: number) {\n    return this._callbacks.map(async ({ callback, instrument }) => {\n      const observableResult = new ObservableResultImpl(\n        instrument._descriptor.name,\n        instrument._descriptor.valueType\n      );\n      let callPromise: Promise<void> = Promise.resolve(\n        callback(observableResult)\n      );\n      if (timeoutMillis != null) {\n        callPromise = callWithTimeout(callPromise, timeoutMillis);\n      }\n      await callPromise;\n      instrument._metricStorages.forEach(metricStorage => {\n        metricStorage.record(observableResult._buffer, observationTime);\n      });\n    });\n  }\n\n  private _observeBatchCallbacks(\n    observationTime: HrTime,\n    timeoutMillis?: number\n  ) {\n    return this._batchCallbacks.map(async ({ callback, instruments }) => {\n      const observableResult = new BatchObservableResultImpl();\n      let callPromise: Promise<void> = Promise.resolve(\n        callback(observableResult)\n      );\n      if (timeoutMillis != null) {\n        callPromise = callWithTimeout(callPromise, timeoutMillis);\n      }\n      await callPromise;\n      instruments.forEach(instrument => {\n        const buffer = observableResult._buffer.get(instrument);\n        if (buffer == null) {\n          return;\n        }\n        instrument._metricStorages.forEach(metricStorage => {\n          metricStorage.record(buffer, observationTime);\n        });\n      });\n    });\n  }\n\n  private _findCallback(\n    callback: ObservableCallback,\n    instrument: ObservableInstrument\n  ) {\n    return this._callbacks.findIndex(record => {\n      return record.callback === callback && record.instrument === instrument;\n    });\n  }\n\n  private _findBatchCallback(\n    callback: BatchObservableCallback,\n    instruments: Set<ObservableInstrument>\n  ) {\n    return this._batchCallbacks.findIndex(record => {\n      return (\n        record.callback === callback &&\n        setEquals(record.instruments, instruments)\n      );\n    });\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  diag,\n  ObservableResult,\n  MetricAttributes,\n  ValueType,\n  BatchObservableResult,\n  Observable,\n} from '@opentelemetry/api';\nimport { AttributeHashMap } from './state/HashMap';\nimport { isObservableInstrument, ObservableInstrument } from './Instruments';\n\n/**\n * The class implements {@link ObservableResult} interface.\n */\nexport class ObservableResultImpl implements ObservableResult {\n  /**\n   * @internal\n   */\n  _buffer = new AttributeHashMap<number>();\n\n  constructor(\n    private _instrumentName: string,\n    private _valueType: ValueType\n  ) {}\n\n  /**\n   * Observe a measurement of the value associated with the given attributes.\n   */\n  observe(value: number, attributes: MetricAttributes = {}): void {\n    if (typeof value !== 'number') {\n      diag.warn(\n        `non-number value provided to metric ${this._instrumentName}: ${value}`\n      );\n      return;\n    }\n    if (this._valueType === ValueType.INT && !Number.isInteger(value)) {\n      diag.warn(\n        `INT value type cannot accept a floating-point value for ${this._instrumentName}, ignoring the fractional digits.`\n      );\n      value = Math.trunc(value);\n      // ignore non-finite values.\n      if (!Number.isInteger(value)) {\n        return;\n      }\n    }\n    this._buffer.set(attributes, value);\n  }\n}\n\n/**\n * The class implements {@link BatchObservableCallback} interface.\n */\nexport class BatchObservableResultImpl implements BatchObservableResult {\n  /**\n   * @internal\n   */\n  _buffer: Map<ObservableInstrument, AttributeHashMap<number>> = new Map();\n\n  /**\n   * Observe a measurement of the value associated with the given attributes.\n   */\n  observe(\n    metric: Observable,\n    value: number,\n    attributes: MetricAttributes = {}\n  ): void {\n    if (!isObservableInstrument(metric)) {\n      return;\n    }\n    let map = this._buffer.get(metric);\n    if (map == null) {\n      map = new AttributeHashMap();\n      this._buffer.set(metric, map);\n    }\n    if (typeof value !== 'number') {\n      diag.warn(\n        `non-number value provided to metric ${metric._descriptor.name}: ${value}`\n      );\n      return;\n    }\n    if (\n      metric._descriptor.valueType === ValueType.INT &&\n      !Number.isInteger(value)\n    ) {\n      diag.warn(\n        `INT value type cannot accept a floating-point value for ${metric._descriptor.name}, ignoring the fractional digits.`\n      );\n      value = Math.trunc(value);\n      // ignore non-finite values.\n      if (!Number.isInteger(value)) {\n        return;\n      }\n    }\n    map.set(attributes, value);\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, HrTime, MetricAttributes } from '@opentelemetry/api';\nimport { WritableMetricStorage } from './WritableMetricStorage';\nimport { Accumulation, Aggregator } from '../aggregator/types';\nimport { InstrumentDescriptor } from '../InstrumentDescriptor';\nimport { AttributesProcessor } from '../view/AttributesProcessor';\nimport { MetricStorage } from './MetricStorage';\nimport { MetricData } from '../export/MetricData';\nimport { DeltaMetricProcessor } from './DeltaMetricProcessor';\nimport { TemporalMetricProcessor } from './TemporalMetricProcessor';\nimport { Maybe } from '../utils';\nimport { MetricCollectorHandle } from './MetricCollector';\n\n/**\n * Internal interface.\n *\n * Stores and aggregates {@link MetricData} for synchronous instruments.\n */\nexport class SyncMetricStorage<T extends Maybe<Accumulation>>\n  extends MetricStorage\n  implements WritableMetricStorage\n{\n  private _deltaMetricStorage: DeltaMetricProcessor<T>;\n  private _temporalMetricStorage: TemporalMetricProcessor<T>;\n\n  constructor(\n    instrumentDescriptor: InstrumentDescriptor,\n    aggregator: Aggregator<T>,\n    private _attributesProcessor: AttributesProcessor,\n    collectorHandles: MetricCollectorHandle[]\n  ) {\n    super(instrumentDescriptor);\n    this._deltaMetricStorage = new DeltaMetricProcessor(aggregator);\n    this._temporalMetricStorage = new TemporalMetricProcessor(\n      aggregator,\n      collectorHandles\n    );\n  }\n\n  record(\n    value: number,\n    attributes: MetricAttributes,\n    context: Context,\n    recordTime: HrTime\n  ) {\n    attributes = this._attributesProcessor.process(attributes, context);\n    this._deltaMetricStorage.record(value, attributes, context, recordTime);\n  }\n\n  /**\n   * Collects the metrics from this storage.\n   *\n   * Note: This is a stateful operation and may reset any interval-related\n   * state for the MetricCollector.\n   */\n  collect(\n    collector: MetricCollectorHandle,\n    collectionTime: HrTime\n  ): Maybe<MetricData> {\n    const accumulations = this._deltaMetricStorage.collect();\n\n    return this._temporalMetricStorage.buildMetrics(\n      collector,\n      this._instrumentDescriptor,\n      accumulations,\n      collectionTime\n    );\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, MetricAttributes } from '@opentelemetry/api';\n\n/**\n * The {@link AttributesProcessor} is responsible for customizing which\n * attribute(s) are to be reported as metrics dimension(s) and adding\n * additional dimension(s) from the {@link Context}.\n */\nexport abstract class AttributesProcessor {\n  /**\n   * Process the metric instrument attributes.\n   *\n   * @param incoming The metric instrument attributes.\n   * @param context The active context when the instrument is synchronous.\n   * `undefined` otherwise.\n   */\n  abstract process(\n    incoming: MetricAttributes,\n    context?: Context\n  ): MetricAttributes;\n\n  static Noop() {\n    return NOOP;\n  }\n}\n\nexport class NoopAttributesProcessor extends AttributesProcessor {\n  process(incoming: MetricAttributes, _context?: Context) {\n    return incoming;\n  }\n}\n\n/**\n * {@link AttributesProcessor} that filters by allowed attribute names and drops any names that are not in the\n * allow list.\n */\nexport class FilteringAttributesProcessor extends AttributesProcessor {\n  constructor(private _allowedAttributeNames: string[]) {\n    super();\n  }\n\n  process(incoming: MetricAttributes, _context: Context): MetricAttributes {\n    const filteredAttributes: MetricAttributes = {};\n    Object.keys(incoming)\n      .filter(attributeName =>\n        this._allowedAttributeNames.includes(attributeName)\n      )\n      .forEach(\n        attributeName =>\n          (filteredAttributes[attributeName] = incoming[attributeName])\n      );\n    return filteredAttributes;\n  }\n}\n\nconst NOOP = new NoopAttributesProcessor();\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HrTime } from '@opentelemetry/api';\nimport { InstrumentationScope } from '@opentelemetry/core';\nimport { MetricCollectOptions } from '../export/MetricProducer';\nimport { ScopeMetrics } from '../export/MetricData';\nimport {\n  createInstrumentDescriptorWithView,\n  InstrumentDescriptor,\n} from '../InstrumentDescriptor';\nimport { Meter } from '../Meter';\nimport { isNotNullish, Maybe } from '../utils';\nimport { AsyncMetricStorage } from './AsyncMetricStorage';\nimport { MeterProviderSharedState } from './MeterProviderSharedState';\nimport { MetricCollectorHandle } from './MetricCollector';\nimport { MetricStorageRegistry } from './MetricStorageRegistry';\nimport { MultiMetricStorage } from './MultiWritableMetricStorage';\nimport { ObservableRegistry } from './ObservableRegistry';\nimport { SyncMetricStorage } from './SyncMetricStorage';\nimport { Accumulation, Aggregator } from '../aggregator/types';\nimport { AttributesProcessor } from '../view/AttributesProcessor';\nimport { MetricStorage } from './MetricStorage';\n\n/**\n * An internal record for shared meter provider states.\n */\nexport class MeterSharedState {\n  metricStorageRegistry = new MetricStorageRegistry();\n  observableRegistry = new ObservableRegistry();\n  meter: Meter;\n\n  constructor(\n    private _meterProviderSharedState: MeterProviderSharedState,\n    private _instrumentationScope: InstrumentationScope\n  ) {\n    this.meter = new Meter(this);\n  }\n\n  registerMetricStorage(descriptor: InstrumentDescriptor) {\n    const storages = this._registerMetricStorage(descriptor, SyncMetricStorage);\n\n    if (storages.length === 1) {\n      return storages[0];\n    }\n    return new MultiMetricStorage(storages);\n  }\n\n  registerAsyncMetricStorage(descriptor: InstrumentDescriptor) {\n    const storages = this._registerMetricStorage(\n      descriptor,\n      AsyncMetricStorage\n    );\n\n    return storages;\n  }\n\n  /**\n   * @param collector opaque handle of {@link MetricCollector} which initiated the collection.\n   * @param collectionTime the HrTime at which the collection was initiated.\n   * @param options options for collection.\n   * @returns the list of metric data collected.\n   */\n  async collect(\n    collector: MetricCollectorHandle,\n    collectionTime: HrTime,\n    options?: MetricCollectOptions\n  ): Promise<ScopeMetricsResult | null> {\n    /**\n     * 1. Call all observable callbacks first.\n     * 2. Collect metric result for the collector.\n     */\n    const errors = await this.observableRegistry.observe(\n      collectionTime,\n      options?.timeoutMillis\n    );\n    const storages = this.metricStorageRegistry.getStorages(collector);\n\n    // prevent more allocations if there are no storages.\n    if (storages.length === 0) {\n      return null;\n    }\n\n    const metricDataList = storages\n      .map(metricStorage => {\n        return metricStorage.collect(collector, collectionTime);\n      })\n      .filter(isNotNullish);\n\n    // skip this scope if no data was collected (storage created, but no data observed)\n    if (metricDataList.length === 0) {\n      return { errors };\n    }\n\n    return {\n      scopeMetrics: {\n        scope: this._instrumentationScope,\n        metrics: metricDataList,\n      },\n      errors,\n    };\n  }\n\n  private _registerMetricStorage<\n    MetricStorageType extends MetricStorageConstructor,\n    R extends InstanceType<MetricStorageType>,\n  >(\n    descriptor: InstrumentDescriptor,\n    MetricStorageType: MetricStorageType\n  ): R[] {\n    const views = this._meterProviderSharedState.viewRegistry.findViews(\n      descriptor,\n      this._instrumentationScope\n    );\n    let storages = views.map(view => {\n      const viewDescriptor = createInstrumentDescriptorWithView(\n        view,\n        descriptor\n      );\n      const compatibleStorage =\n        this.metricStorageRegistry.findOrUpdateCompatibleStorage<R>(\n          viewDescriptor\n        );\n      if (compatibleStorage != null) {\n        return compatibleStorage;\n      }\n      const aggregator = view.aggregation.createAggregator(viewDescriptor);\n      const viewStorage = new MetricStorageType(\n        viewDescriptor,\n        aggregator,\n        view.attributesProcessor,\n        this._meterProviderSharedState.metricCollectors\n      ) as R;\n      this.metricStorageRegistry.register(viewStorage);\n      return viewStorage;\n    });\n\n    // Fallback to the per-collector aggregations if no view is configured for the instrument.\n    if (storages.length === 0) {\n      const perCollectorAggregations =\n        this._meterProviderSharedState.selectAggregations(descriptor.type);\n      const collectorStorages = perCollectorAggregations.map(\n        ([collector, aggregation]) => {\n          const compatibleStorage =\n            this.metricStorageRegistry.findOrUpdateCompatibleCollectorStorage<R>(\n              collector,\n              descriptor\n            );\n          if (compatibleStorage != null) {\n            return compatibleStorage;\n          }\n          const aggregator = aggregation.createAggregator(descriptor);\n          const storage = new MetricStorageType(\n            descriptor,\n            aggregator,\n            AttributesProcessor.Noop(),\n            [collector]\n          ) as R;\n          this.metricStorageRegistry.registerForCollector(collector, storage);\n          return storage;\n        }\n      );\n      storages = storages.concat(collectorStorages);\n    }\n\n    return storages;\n  }\n}\n\ninterface ScopeMetricsResult {\n  scopeMetrics?: ScopeMetrics;\n  errors: unknown[];\n}\n\ninterface MetricStorageConstructor {\n  new (\n    instrumentDescriptor: InstrumentDescriptor,\n    aggregator: Aggregator<Maybe<Accumulation>>,\n    attributesProcessor: AttributesProcessor,\n    collectors: MetricCollectorHandle[]\n  ): MetricStorage;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationScope } from '@opentelemetry/core';\nimport { IResource } from '@opentelemetry/resources';\nimport { Aggregation, InstrumentType } from '..';\nimport { instrumentationScopeId } from '../utils';\nimport { ViewRegistry } from '../view/ViewRegistry';\nimport { MeterSharedState } from './MeterSharedState';\nimport { MetricCollector, MetricCollectorHandle } from './MetricCollector';\n\n/**\n * An internal record for shared meter provider states.\n */\nexport class MeterProviderSharedState {\n  viewRegistry = new ViewRegistry();\n\n  metricCollectors: MetricCollector[] = [];\n\n  meterSharedStates: Map<string, MeterSharedState> = new Map();\n\n  constructor(public resource: IResource) {}\n\n  getMeterSharedState(instrumentationScope: InstrumentationScope) {\n    const id = instrumentationScopeId(instrumentationScope);\n    let meterSharedState = this.meterSharedStates.get(id);\n    if (meterSharedState == null) {\n      meterSharedState = new MeterSharedState(this, instrumentationScope);\n      this.meterSharedStates.set(id, meterSharedState);\n    }\n    return meterSharedState;\n  }\n\n  selectAggregations(instrumentType: InstrumentType) {\n    const result: [MetricCollectorHandle, Aggregation][] = [];\n    for (const collector of this.metricCollectors) {\n      result.push([collector, collector.selectAggregation(instrumentType)]);\n    }\n    return result;\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { millisToHrTime } from '@opentelemetry/core';\nimport { AggregationTemporalitySelector } from '../export/AggregationSelector';\nimport { CollectionResult, ScopeMetrics } from '../export/MetricData';\nimport { MetricProducer, MetricCollectOptions } from '../export/MetricProducer';\nimport { MetricReader } from '../export/MetricReader';\nimport { InstrumentType } from '../InstrumentDescriptor';\nimport { ForceFlushOptions, ShutdownOptions } from '../types';\nimport { MeterProviderSharedState } from './MeterProviderSharedState';\n\n/**\n * An internal opaque interface that the MetricReader receives as\n * MetricProducer. It acts as the storage key to the internal metric stream\n * state for each MetricReader.\n */\nexport class MetricCollector implements MetricProducer {\n  constructor(\n    private _sharedState: MeterProviderSharedState,\n    private _metricReader: MetricReader\n  ) {}\n\n  async collect(options?: MetricCollectOptions): Promise<CollectionResult> {\n    const collectionTime = millisToHrTime(Date.now());\n    const scopeMetrics: ScopeMetrics[] = [];\n    const errors: unknown[] = [];\n\n    const meterCollectionPromises = Array.from(\n      this._sharedState.meterSharedStates.values()\n    ).map(async meterSharedState => {\n      const current = await meterSharedState.collect(\n        this,\n        collectionTime,\n        options\n      );\n\n      // only add scope metrics if available\n      if (current?.scopeMetrics != null) {\n        scopeMetrics.push(current.scopeMetrics);\n      }\n\n      // only add errors if available\n      if (current?.errors != null) {\n        errors.push(...current.errors);\n      }\n    });\n    await Promise.all(meterCollectionPromises);\n\n    return {\n      resourceMetrics: {\n        resource: this._sharedState.resource,\n        scopeMetrics: scopeMetrics,\n      },\n      errors: errors,\n    };\n  }\n\n  /**\n   * Delegates for MetricReader.forceFlush.\n   */\n  async forceFlush(options?: ForceFlushOptions): Promise<void> {\n    await this._metricReader.forceFlush(options);\n  }\n\n  /**\n   * Delegates for MetricReader.shutdown.\n   */\n  async shutdown(options?: ShutdownOptions): Promise<void> {\n    await this._metricReader.shutdown(options);\n  }\n\n  selectAggregationTemporality(instrumentType: InstrumentType) {\n    return this._metricReader.selectAggregationTemporality(instrumentType);\n  }\n\n  selectAggregation(instrumentType: InstrumentType) {\n    return this._metricReader.selectAggregation(instrumentType);\n  }\n}\n\n/**\n * An internal interface for MetricCollector. Exposes the necessary\n * information for metric collection.\n */\nexport interface MetricCollectorHandle {\n  selectAggregationTemporality: AggregationTemporalitySelector;\n}\n","import type { Attributes, Context } from \"@opentelemetry/api\";\nimport { diag, SpanKind } from \"@opentelemetry/api\";\nimport type {\n  Span,\n  ReadableSpan,\n  SpanProcessor,\n} from \"@opentelemetry/sdk-trace-base\";\nimport { getVercelRequestContext } from \"../vercel-request-context/api\";\nimport { getVercelRequestContextAttributes } from \"../vercel-request-context/attributes\";\nimport { isSampled } from \"../util/sampled\";\nimport type { AttributesFromHeaders } from \"../types\";\n\n/** @internal */\nexport class CompositeSpanProcessor implements SpanProcessor {\n  private readonly rootSpanIds = new Map<\n    string,\n    { rootSpanId: string; open: Span[] }\n  >();\n  private readonly waitSpanEnd = new Map<string, () => void>();\n\n  constructor(\n    private processors: SpanProcessor[],\n    private attributesFromHeaders: AttributesFromHeaders | undefined\n  ) {}\n\n  forceFlush(): Promise<void> {\n    return Promise.all(\n      this.processors.map((p) =>\n        p.forceFlush().catch((e) => {\n          diag.error(\"@vercel/otel: forceFlush failed:\", e);\n        })\n      )\n    ).then(() => undefined);\n  }\n\n  shutdown(): Promise<void> {\n    return Promise.all(\n      this.processors.map((p) => p.shutdown().catch(() => undefined))\n    ).then(() => undefined);\n  }\n\n  onStart(span: Span, parentContext: Context): void {\n    const { traceId, spanId, traceFlags } = span.spanContext();\n    const isRoot = !span.parentSpanId || !this.rootSpanIds.has(traceId);\n    if (isRoot) {\n      this.rootSpanIds.set(traceId, { rootSpanId: spanId, open: [] });\n    } else {\n      this.rootSpanIds.get(traceId)?.open.push(span);\n    }\n    if (isRoot && isSampled(traceFlags)) {\n      const vrc = getVercelRequestContext();\n      const vercelRequestContextAttrs = getVercelRequestContextAttributes(\n        vrc,\n        this.attributesFromHeaders\n      );\n      if (vercelRequestContextAttrs) {\n        span.setAttributes(vercelRequestContextAttrs);\n      }\n\n      // Flush the streams to avoid data loss.\n      if (vrc) {\n        vrc.waitUntil(async () => {\n          if (this.rootSpanIds.has(traceId)) {\n            // Not root has not completed yet, so no point in flushing.\n            // Need to wait for onEnd.\n            const promise = new Promise<void>((resolve) => {\n              this.waitSpanEnd.set(traceId, resolve);\n            });\n            let timer: NodeJS.Timeout | undefined;\n            await Promise.race([\n              promise,\n              new Promise((resolve) => {\n                timer = setTimeout(() => {\n                  this.waitSpanEnd.delete(traceId);\n                  resolve(undefined);\n                }, 50);\n              }),\n            ]);\n            if (timer) {\n              clearTimeout(timer);\n            }\n          }\n          return this.forceFlush();\n        });\n      }\n    }\n\n    for (const spanProcessor of this.processors) {\n      spanProcessor.onStart(span, parentContext);\n    }\n  }\n\n  onEnd(span: ReadableSpan): void {\n    const { traceId, spanId, traceFlags } = span.spanContext();\n    const sampled = isSampled(traceFlags);\n    const rootObj = this.rootSpanIds.get(traceId);\n    const isRoot = rootObj?.rootSpanId === spanId;\n\n    if (sampled) {\n      const resourceAttributes = getResourceAttributes(span);\n      if (resourceAttributes) {\n        Object.assign(span.attributes, resourceAttributes);\n      }\n    }\n\n    if (isRoot) {\n      this.rootSpanIds.delete(traceId);\n      if (rootObj.open.length > 0) {\n        for (const openSpan of rootObj.open) {\n          if (!openSpan.ended && openSpan.spanContext().spanId !== spanId) {\n            try {\n              openSpan.end();\n            } catch (e) {\n              diag.error(\"@vercel/otel: onEnd failed:\", e);\n            }\n          }\n        }\n      }\n    } else if (rootObj) {\n      for (let i = 0; i < rootObj.open.length; i++) {\n        if (rootObj.open[i]?.spanContext().spanId === spanId) {\n          rootObj.open.splice(i, 1);\n        }\n      }\n    }\n\n    for (const spanProcessor of this.processors) {\n      spanProcessor.onEnd(span);\n    }\n\n    if (isRoot) {\n      const pending = this.waitSpanEnd.get(traceId);\n      if (pending) {\n        this.waitSpanEnd.delete(traceId);\n        pending();\n      }\n    }\n  }\n}\n\nconst SPAN_KIND_NAME: { [key in SpanKind]: string } = {\n  [SpanKind.INTERNAL]: \"internal\",\n  [SpanKind.SERVER]: \"server\",\n  [SpanKind.CLIENT]: \"client\",\n  [SpanKind.PRODUCER]: \"producer\",\n  [SpanKind.CONSUMER]: \"consumer\",\n};\n\nfunction getResourceAttributes(span: ReadableSpan): Attributes | undefined {\n  const { kind, attributes } = span;\n  const {\n    \"operation.name\": operationName,\n    \"resource.name\": resourceName,\n    \"span.type\": spanTypeAttr,\n    \"next.span_type\": nextSpanType,\n    \"http.method\": httpMethod,\n    \"http.route\": httpRoute,\n  } = attributes;\n  if (operationName) {\n    return undefined;\n  }\n\n  const resourceNameResolved =\n    resourceName ??\n    (httpMethod &&\n    typeof httpMethod === \"string\" &&\n    httpRoute &&\n    typeof httpRoute === \"string\"\n      ? `${httpMethod} ${httpRoute}`\n      : httpRoute);\n\n  if (\n    span.kind === SpanKind.SERVER &&\n    httpMethod &&\n    httpRoute &&\n    typeof httpMethod === \"string\" &&\n    typeof httpRoute === \"string\"\n  ) {\n    return {\n      \"operation.name\": \"web.request\",\n      \"resource.name\": resourceNameResolved,\n    };\n  }\n\n  // Per https://github.com/DataDog/datadog-agent/blob/main/pkg/config/config_template.yaml,\n  // the default operation.name is \"library name + span kind\".\n  const libraryName = span.instrumentationLibrary.name;\n  const spanType = nextSpanType ?? spanTypeAttr;\n  if (spanType && typeof spanType === \"string\") {\n    const nextOperationName = toOperationName(libraryName, spanType);\n    if (httpRoute) {\n      return {\n        \"operation.name\": nextOperationName,\n        \"resource.name\": resourceNameResolved,\n      };\n    }\n    return { \"operation.name\": nextOperationName };\n  }\n\n  return {\n    \"operation.name\": toOperationName(\n      libraryName,\n      kind === SpanKind.INTERNAL ? \"\" : SPAN_KIND_NAME[kind]\n    ),\n  };\n}\n\nfunction toOperationName(libraryName: string, name: string): string {\n  if (!libraryName) {\n    return name;\n  }\n  let cleanLibraryName = libraryName.replace(/[ @./]/g, \"_\");\n  if (cleanLibraryName.startsWith(\"_\")) {\n    cleanLibraryName = cleanLibraryName.slice(1);\n  }\n  return name ? `${cleanLibraryName}.${name}` : cleanLibraryName;\n}\n","/**\n * TODO: Placeholder for the `@vercel/request-context-storage` package.\n * Replace with the real package once it's published.\n */\n\nimport type { SpanContext } from \"@opentelemetry/api\";\n\n/** @internal */\nexport interface VercelRequestContext {\n  waitUntil: (\n    promiseOrFunc: Promise<unknown> | (() => Promise<unknown>)\n  ) => void;\n  headers: Record<string, string | undefined>;\n  url: string;\n  telemetry?: {\n    reportSpans: (data: unknown) => void;\n    rootSpanContext?: SpanContext;\n  };\n  [key: symbol]: unknown;\n}\n\ninterface Reader {\n  get: () => VercelRequestContext | undefined;\n}\n\nconst symbol = Symbol.for(\"@vercel/request-context\");\n\ninterface GlobalWithReader {\n  [symbol]?: Reader;\n}\n\n/** @internal */\nexport function getVercelRequestContext(): VercelRequestContext | undefined {\n  const reader = (globalThis as GlobalWithReader)[symbol];\n  return reader?.get();\n}\n","import type { Attributes, TextMapGetter } from \"@opentelemetry/api\";\nimport { SemanticAttributes } from \"@opentelemetry/semantic-conventions\";\nimport { omitUndefinedAttributes } from \"../util/attributes\";\nimport { parseRequestId } from \"../util/request-id\";\nimport type { AttributesFromHeaders } from \"../types\";\nimport type { VercelRequestContext } from \"./api\";\nimport { getVercelRequestContext } from \"./api\";\n\n/** @internal */\nexport function getVercelRequestContextAttributes(\n  context: VercelRequestContext | undefined = getVercelRequestContext(),\n  attributesFromHeaders?: AttributesFromHeaders\n): Attributes | undefined {\n  if (!context) {\n    return undefined;\n  }\n\n  const rootAttrs = attributesFromHeaders\n    ? resolveAttributesFromHeaders(attributesFromHeaders, context.headers)\n    : undefined;\n\n  return omitUndefinedAttributes({\n    [SemanticAttributes.HTTP_HOST]: context.headers.host,\n    [SemanticAttributes.HTTP_USER_AGENT]: context.headers[\"user-agent\"],\n    \"http.referer\": context.headers.referer,\n\n    \"vercel.request_id\": parseRequestId(context.headers[\"x-vercel-id\"]),\n    \"vercel.matched_path\": context.headers[\"x-matched-path\"],\n    \"vercel.edge_region\": process.env.VERCEL_REGION,\n\n    ...rootAttrs,\n  });\n}\n\ntype VercelRequestContextHeaders = VercelRequestContext[\"headers\"];\n\nconst getter: TextMapGetter<VercelRequestContextHeaders> = {\n  keys(_carrier: VercelRequestContextHeaders): string[] {\n    return [];\n  },\n  get(\n    carrier: VercelRequestContextHeaders,\n    key: string\n  ): string | string[] | undefined {\n    return carrier[key.toLocaleLowerCase()];\n  },\n};\n\nfunction resolveAttributesFromHeaders(\n  attributesFromHeaders: AttributesFromHeaders,\n  headers: VercelRequestContextHeaders\n): Attributes | undefined {\n  if (typeof attributesFromHeaders === \"function\") {\n    return attributesFromHeaders(headers, getter);\n  }\n\n  const attrs: Attributes = {};\n  for (const [attrName, headerName] of Object.entries(attributesFromHeaders)) {\n    const headerValue = headers[headerName.toLocaleLowerCase()];\n    if (headerValue !== undefined) {\n      attrs[attrName] = headerValue;\n    }\n  }\n  return attrs;\n}\n","import type { Attributes } from \"@opentelemetry/api\";\n\n/** @internal */\nexport function omitUndefinedAttributes<T extends Attributes = Attributes>(\n  obj: T\n): T {\n  return Object.fromEntries(\n    Object.entries(obj).filter(([_, value]) => value !== undefined)\n  ) as T;\n}\n","/** @internal */\nexport function parseRequestId(header: string | undefined): string | undefined {\n  if (!header) {\n    return undefined;\n  }\n  const parts = header.split(\"::\");\n  return parts.at(-1);\n}\n","import { TraceFlags } from \"@opentelemetry/api\";\n\nexport function isSampled(traceFlags: number): boolean {\n  // eslint-disable-next-line no-bitwise\n  return (traceFlags & TraceFlags.SAMPLED) !== 0;\n}\n","import type { ReadableSpan, SpanExporter } from \"@opentelemetry/sdk-trace-base\";\nimport type { IExportTraceServiceRequest } from \"@opentelemetry/otlp-transformer\";\nimport { createExportTraceServiceRequest } from \"@opentelemetry/otlp-transformer/build/src/trace\";\nimport type { ExportResult } from \"@opentelemetry/core\";\nimport { OTLPExporterEdgeBase } from \"./otlp-exporter-base\";\nimport { getDefaultUrl } from \"./trace-config\";\nimport type { OTLPExporterConfig } from \"./config\";\n\n/**\n * OTLP exporter for the `http/json` protocol. Compatible with the \"edge\" runtime.\n */\nexport class OTLPHttpJsonTraceExporter implements SpanExporter {\n  /** @internal */\n  private readonly impl: Impl;\n\n  constructor(config: OTLPExporterConfig = {}) {\n    this.impl = new Impl(config);\n  }\n\n  /** See `SpanExporter#export()` */\n  export(\n    spans: ReadableSpan[],\n    resultCallback: (result: ExportResult) => void\n  ): void {\n    this.impl.export(spans, resultCallback);\n  }\n\n  /** See `SpanExporter#shutdown()` */\n  shutdown(): Promise<void> {\n    return this.impl.shutdown();\n  }\n\n  /** See `SpanExporter#forceFlush()` */\n  forceFlush(): Promise<void> {\n    return this.impl.forceFlush();\n  }\n}\n\n/** @internal */\nclass Impl extends OTLPExporterEdgeBase<\n  ReadableSpan,\n  IExportTraceServiceRequest\n> {\n  convert(spans: ReadableSpan[]): IExportTraceServiceRequest {\n    return createExportTraceServiceRequest(spans, {\n      useHex: true,\n      useLongBits: false,\n    });\n  }\n\n  override toMessage(serviceRequest: IExportTraceServiceRequest): {\n    body: string | Uint8Array | Blob;\n    contentType: string;\n    headers?: Record<string, string> | undefined;\n  } {\n    return {\n      body: JSON.stringify(serviceRequest),\n      contentType: \"application/json\",\n    };\n  }\n\n  getDefaultUrl(config: OTLPExporterConfig): string {\n    return getDefaultUrl(config);\n  }\n}\n","import type { OTLPExporterError } from \"@opentelemetry/otlp-exporter-base\";\nimport { OTLPExporterBase } from \"@opentelemetry/otlp-exporter-base/build/src/OTLPExporterBase\";\nimport { diag } from \"@opentelemetry/api\";\nimport type { OTLPExporterConfig } from \"./config\";\n\n/** @internal */\nexport abstract class OTLPExporterEdgeBase<\n  ExportItem,\n  ServiceRequest,\n> extends OTLPExporterBase<OTLPExporterConfig, ExportItem, ServiceRequest> {\n  /** @internal */\n  private _headers: Record<string, unknown> | undefined;\n\n  constructor(config: OTLPExporterConfig = {}) {\n    super(config);\n    if (config.headers) {\n      this._headers = config.headers;\n    }\n  }\n\n  onShutdown(): void {\n    diag.debug(\"@vercel/otel/otlp: onShutdown\");\n  }\n\n  onInit(): void {\n    diag.debug(\"@vercel/otel/otlp: onInit\");\n  }\n\n  send(\n    items: ExportItem[],\n    onSuccess: () => void,\n    onError: (error: OTLPExporterError) => void\n  ): void {\n    if (this._shutdownOnce.isCalled) {\n      diag.debug(\n        \"@vercel/otel/otlp: Shutdown already started. Cannot send objects\"\n      );\n      return;\n    }\n\n    const serviceRequest = this.convert(items);\n\n    let body: string | Uint8Array | Blob;\n    let contentType: string;\n    let headers: Record<string, string> | undefined;\n    try {\n      const message = this.toMessage(serviceRequest);\n      ({ body, contentType, headers } = message);\n    } catch (e) {\n      diag.warn(\"@vercel/otel/otlp: no proto\", e);\n      return;\n    }\n\n    const promise = fetch(this.url, {\n      method: \"POST\",\n      body,\n      headers: {\n        ...this._headers,\n        ...headers,\n        \"Content-Type\": contentType,\n        \"User-Agent\": \"OTel-OTLP-Exporter-JavaScript/0.46.0\",\n      },\n      // @ts-expect-error - this handles a Next.js specific issue\n      next: { internal: true },\n    })\n      .then((res) => {\n        diag.debug(\"@vercel/otel/otlp: onSuccess\", res.status, res.statusText);\n        onSuccess();\n        // Drain the response body.\n        void res.arrayBuffer().catch(() => undefined);\n      })\n      .catch((err) => {\n        diag.error(\"@vercel/otel/otlp: onError\", err);\n        onError(err as OTLPExporterError);\n      })\n      .finally(() => {\n        const index = this._sendingPromises.indexOf(promise);\n        this._sendingPromises.splice(index, 1);\n      });\n\n    this._sendingPromises.push(promise);\n  }\n\n  getDefaultUrl(_config: OTLPExporterConfig): string {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  abstract toMessage(serviceRequest: ServiceRequest): {\n    body: string | Uint8Array | Blob;\n    contentType: string;\n    headers?: Record<string, string>;\n  };\n}\n","import type { OTLPExporterConfig } from \"./config\";\n\nconst DEFAULT_COLLECTOR_RESOURCE_PATH = \"v1/traces\";\nconst DEFAULT_COLLECTOR_URL = `http://localhost:4318/${DEFAULT_COLLECTOR_RESOURCE_PATH}`;\n\n/** @internal */\nexport function getDefaultUrl(config: OTLPExporterConfig): string {\n  if (typeof config.url === \"string\") {\n    return config.url;\n  }\n  return DEFAULT_COLLECTOR_URL;\n}\n","import type { ReadableSpan, SpanExporter } from \"@opentelemetry/sdk-trace-base\";\nimport type { IExportTraceServiceRequest } from \"@opentelemetry/otlp-transformer\";\nimport { createExportTraceServiceRequest } from \"@opentelemetry/otlp-transformer/build/src/trace\";\nimport type { ExportResult } from \"@opentelemetry/core\";\nimport { OTLPExporterEdgeBase } from \"./otlp-exporter-base\";\nimport { getDefaultUrl } from \"./trace-config\";\nimport type { OTLPExporterConfig } from \"./config\";\nimport { encodeTraceServiceRequest } from \"./proto\";\n\n/**\n * OTLP exporter for the `http/protobuf` protocol. Compatible with the \"edge\" runtime.\n */\nexport class OTLPHttpProtoTraceExporter implements SpanExporter {\n  /** @internal */\n  private readonly impl: Impl;\n\n  constructor(config: OTLPExporterConfig = {}) {\n    this.impl = new Impl(config);\n  }\n\n  /** See `SpanExporter#export()` */\n  export(\n    spans: ReadableSpan[],\n    resultCallback: (result: ExportResult) => void\n  ): void {\n    this.impl.export(spans, resultCallback);\n  }\n\n  /** See `SpanExporter#shutdown()` */\n  shutdown(): Promise<void> {\n    return this.impl.shutdown();\n  }\n\n  /** See `SpanExporter#forceFlush()` */\n  forceFlush(): Promise<void> {\n    return this.impl.forceFlush();\n  }\n}\n\n/** @internal */\nclass Impl extends OTLPExporterEdgeBase<\n  ReadableSpan,\n  IExportTraceServiceRequest\n> {\n  convert(spans: ReadableSpan[]): IExportTraceServiceRequest {\n    return createExportTraceServiceRequest(spans, undefined);\n  }\n\n  override toMessage(serviceRequest: IExportTraceServiceRequest): {\n    body: string | Uint8Array | Blob;\n    contentType: string;\n    headers?: Record<string, string> | undefined;\n  } {\n    const body = encodeTraceServiceRequest(serviceRequest);\n    return {\n      body,\n      contentType: \"application/x-protobuf\",\n      headers: { accept: \"application/x-protobuf\" },\n    };\n  }\n\n  getDefaultUrl(config: OTLPExporterConfig): string {\n    return getDefaultUrl(config);\n  }\n}\n","/* eslint-disable eslint-comments/disable-enable-pair */\n/* eslint-disable camelcase */\n/* eslint-disable eqeqeq */\n\n/* eslint-disable @typescript-eslint/prefer-optional-chain */\n/* eslint-disable @typescript-eslint/prefer-for-of */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/* eslint-disable @typescript-eslint/no-unnecessary-condition */\n\n/**\n * This file is constructed by:\n *\n * 1. Clone https://github.com/open-telemetry/opentelemetry-js.git\n * 2. Run `protos:generate` in `experimental/packages/otlp-proto-exporter-base/`\n * 3. Fork `experimental/packages/otlp-proto-exporter-base/src/generated/root.js` and inline all encode methods. Throw away the rest of the code.\n *\n * The OTLP protocol is very stable, so these steps would only need to be done rarely.\n */\n\nimport type {\n  IAnyValue,\n  IArrayValue,\n  IEvent,\n  IExportTraceServiceRequest,\n  IInstrumentationScope,\n  IKeyValue,\n  IKeyValueList,\n  ILink,\n  IResource,\n  IResourceSpans,\n  IScopeSpans,\n  ISpan,\n  IStatus,\n} from \"@opentelemetry/otlp-transformer\";\nimport type { Long } from \"protobufjs/minimal\";\nimport { Writer } from \"protobufjs/minimal\";\n\nexport function encodeTraceServiceRequest(\n  message: IExportTraceServiceRequest\n): Uint8Array {\n  const writer = new Writer();\n  ExportTraceServiceRequest_encode(message, writer);\n  return writer.finish();\n}\n\nexport function ExportTraceServiceRequest_encode(\n  message: IExportTraceServiceRequest,\n  writer: Writer\n): Writer {\n  if (message.resourceSpans != null && message.resourceSpans.length)\n    for (let i = 0; i < message.resourceSpans.length; ++i)\n      ResourceSpans_encode(\n        message.resourceSpans[i]!,\n        writer.uint32(/* id 1, wireType 2 =*/ 10).fork()\n      ).ldelim();\n  return writer;\n}\n\nfunction ResourceSpans_encode(message: IResourceSpans, writer: Writer): Writer {\n  if (message.resource != null)\n    Resource_encode(\n      message.resource,\n      writer.uint32(/* id 1, wireType 2 =*/ 10).fork()\n    ).ldelim();\n  if (message.scopeSpans != null && message.scopeSpans.length)\n    for (let i = 0; i < message.scopeSpans.length; ++i)\n      ScopeSpans_encode(\n        message.scopeSpans[i]!,\n        writer.uint32(/* id 2, wireType 2 =*/ 18).fork()\n      ).ldelim();\n  if (message.schemaUrl != null)\n    writer.uint32(/* id 3, wireType 2 =*/ 26).string(message.schemaUrl);\n  return writer;\n}\n\nfunction Resource_encode(message: IResource, writer: Writer): Writer {\n  if (message.attributes != null && message.attributes.length)\n    for (let i = 0; i < message.attributes.length; ++i)\n      KeyValue_encode(\n        message.attributes[i]!,\n        writer.uint32(/* id 1, wireType 2 =*/ 10).fork()\n      ).ldelim();\n  if (message.droppedAttributesCount != null)\n    writer\n      .uint32(/* id 2, wireType 0 =*/ 16)\n      .uint32(message.droppedAttributesCount);\n  return writer;\n}\n\nfunction ScopeSpans_encode(message: IScopeSpans, writer: Writer): Writer {\n  if (message.scope != null)\n    InstrumentationScope_encode(\n      message.scope,\n      writer.uint32(/* id 1, wireType 2 =*/ 10).fork()\n    ).ldelim();\n  if (message.spans != null && message.spans.length)\n    for (let i = 0; i < message.spans.length; ++i)\n      Span_encode(\n        message.spans[i]!,\n        writer.uint32(/* id 2, wireType 2 =*/ 18).fork()\n      ).ldelim();\n  if (message.schemaUrl != null)\n    writer.uint32(/* id 3, wireType 2 =*/ 26).string(message.schemaUrl);\n  return writer;\n}\n\nfunction KeyValue_encode(message: IKeyValue, writer: Writer): Writer {\n  if (message.key != null)\n    writer.uint32(/* id 1, wireType 2 =*/ 10).string(message.key);\n  if (message.value != null)\n    AnyValue_encode(\n      message.value,\n      writer.uint32(/* id 2, wireType 2 =*/ 18).fork()\n    ).ldelim();\n  return writer;\n}\n\nfunction AnyValue_encode(message: IAnyValue, writer: Writer): Writer {\n  if (message.stringValue != null)\n    writer.uint32(/* id 1, wireType 2 =*/ 10).string(message.stringValue);\n  if (message.boolValue != null)\n    writer.uint32(/* id 2, wireType 0 =*/ 16).bool(message.boolValue);\n  if (message.intValue != null)\n    writer.uint32(/* id 3, wireType 0 =*/ 24).int64(message.intValue);\n  if (message.doubleValue != null)\n    writer.uint32(/* id 4, wireType 1 =*/ 33).double(message.doubleValue);\n  if (message.arrayValue != null)\n    ArrayValue_encode(\n      message.arrayValue,\n      writer.uint32(/* id 5, wireType 2 =*/ 42).fork()\n    ).ldelim();\n  if (message.kvlistValue != null)\n    KeyValueList_encode(\n      message.kvlistValue,\n      writer.uint32(/* id 6, wireType 2 =*/ 50).fork()\n    ).ldelim();\n  if (message.bytesValue != null)\n    writer.uint32(/* id 7, wireType 2 =*/ 58).bytes(message.bytesValue);\n  return writer;\n}\n\nfunction ArrayValue_encode(message: IArrayValue, writer: Writer): Writer {\n  if (message.values != null && message.values.length)\n    for (let i = 0; i < message.values.length; ++i)\n      AnyValue_encode(\n        message.values[i]!,\n        writer.uint32(/* id 1, wireType 2 =*/ 10).fork()\n      ).ldelim();\n  return writer;\n}\n\nfunction KeyValueList_encode(message: IKeyValueList, writer: Writer): Writer {\n  if (message.values != null && message.values.length)\n    for (let i = 0; i < message.values.length; ++i)\n      KeyValue_encode(\n        message.values[i]!,\n        writer.uint32(/* id 1, wireType 2 =*/ 10).fork()\n      ).ldelim();\n  return writer;\n}\n\nfunction InstrumentationScope_encode(\n  message: IInstrumentationScope,\n  writer: Writer\n): Writer {\n  if (message.name != null)\n    writer.uint32(/* id 1, wireType 2 =*/ 10).string(message.name);\n  if (message.version != null)\n    writer.uint32(/* id 2, wireType 2 =*/ 18).string(message.version);\n  if (message.attributes != null && message.attributes.length)\n    for (let i = 0; i < message.attributes.length; ++i)\n      KeyValue_encode(\n        message.attributes[i]!,\n        writer.uint32(/* id 3, wireType 2 =*/ 26).fork()\n      ).ldelim();\n  if (message.droppedAttributesCount != null)\n    writer\n      .uint32(/* id 4, wireType 0 =*/ 32)\n      .uint32(message.droppedAttributesCount);\n  return writer;\n}\n\nfunction Span_encode(message: ISpan, writer: Writer): Writer {\n  if (message.traceId != null)\n    writer.uint32(/* id 1, wireType 2 =*/ 10).bytes(message.traceId);\n  if (message.spanId != null)\n    writer.uint32(/* id 2, wireType 2 =*/ 18).bytes(message.spanId);\n  if (message.traceState != null)\n    writer.uint32(/* id 3, wireType 2 =*/ 26).string(message.traceState);\n  if (message.parentSpanId != null)\n    writer.uint32(/* id 4, wireType 2 =*/ 34).bytes(message.parentSpanId);\n  if (message.name != null)\n    writer.uint32(/* id 5, wireType 2 =*/ 42).string(message.name);\n  if (message.kind != null)\n    writer.uint32(/* id 6, wireType 0 =*/ 48).int32(message.kind);\n  if (message.startTimeUnixNano != null)\n    writer\n      .uint32(/* id 7, wireType 1 =*/ 57)\n      .fixed64(message.startTimeUnixNano as Long);\n  if (message.endTimeUnixNano != null)\n    writer\n      .uint32(/* id 8, wireType 1 =*/ 65)\n      .fixed64(message.endTimeUnixNano as Long);\n  if (message.attributes != null && message.attributes.length)\n    for (let i = 0; i < message.attributes.length; ++i)\n      KeyValue_encode(\n        message.attributes[i]!,\n        writer.uint32(/* id 9, wireType 2 =*/ 74).fork()\n      ).ldelim();\n  if (message.droppedAttributesCount != null)\n    writer\n      .uint32(/* id 10, wireType 0 =*/ 80)\n      .uint32(message.droppedAttributesCount);\n  if (message.events != null && message.events.length)\n    for (let i = 0; i < message.events.length; ++i)\n      Event_encode(\n        message.events[i]!,\n        writer.uint32(/* id 11, wireType 2 =*/ 90).fork()\n      ).ldelim();\n  if (message.droppedEventsCount != null)\n    writer\n      .uint32(/* id 12, wireType 0 =*/ 96)\n      .uint32(message.droppedEventsCount);\n  if (message.links != null && message.links.length)\n    for (let i = 0; i < message.links.length; ++i)\n      Link_encode(\n        message.links[i]!,\n        writer.uint32(/* id 13, wireType 2 =*/ 106).fork()\n      ).ldelim();\n  if (message.droppedLinksCount != null)\n    writer\n      .uint32(/* id 14, wireType 0 =*/ 112)\n      .uint32(message.droppedLinksCount);\n  if (message.status != null)\n    Status_encode(\n      message.status,\n      writer.uint32(/* id 15, wireType 2 =*/ 122).fork()\n    ).ldelim();\n  return writer;\n}\n\nfunction Status_encode(message: IStatus, writer: Writer): Writer {\n  if (message.message != null)\n    writer.uint32(/* id 2, wireType 2 =*/ 18).string(message.message);\n  if (message.code != null)\n    writer.uint32(/* id 3, wireType 0 =*/ 24).int32(message.code);\n  return writer;\n}\n\nfunction Event_encode(message: IEvent, writer: Writer): Writer {\n  if (message.timeUnixNano != null)\n    writer\n      .uint32(/* id 1, wireType 1 =*/ 9)\n      .fixed64(message.timeUnixNano as Long);\n  if (message.name != null)\n    writer.uint32(/* id 2, wireType 2 =*/ 18).string(message.name);\n  if (message.attributes != null && message.attributes.length)\n    for (let i = 0; i < message.attributes.length; ++i)\n      KeyValue_encode(\n        message.attributes[i]!,\n        writer.uint32(/* id 3, wireType 2 =*/ 26).fork()\n      ).ldelim();\n  if (message.droppedAttributesCount != null)\n    writer\n      .uint32(/* id 4, wireType 0 =*/ 32)\n      .uint32(message.droppedAttributesCount);\n  return writer;\n}\n\nfunction Link_encode(message: ILink, writer: Writer): Writer {\n  if (message.traceId != null)\n    writer.uint32(/* id 1, wireType 2 =*/ 10).bytes(message.traceId);\n  if (message.spanId != null)\n    writer.uint32(/* id 2, wireType 2 =*/ 18).bytes(message.spanId);\n  if (message.traceState != null)\n    writer.uint32(/* id 3, wireType 2 =*/ 26).string(message.traceState);\n  if (message.attributes != null && message.attributes.length)\n    for (let i = 0; i < message.attributes.length; ++i)\n      KeyValue_encode(\n        message.attributes[i]!,\n        writer.uint32(/* id 4, wireType 2 =*/ 34).fork()\n      ).ldelim();\n  if (message.droppedAttributesCount != null)\n    writer\n      .uint32(/* id 5, wireType 0 =*/ 40)\n      .uint32(message.droppedAttributesCount);\n  return writer;\n}\n","import {\n  SpanKind,\n  SpanStatusCode,\n  propagation,\n  context,\n  trace as traceApi,\n} from \"@opentelemetry/api\";\nimport type {\n  Attributes,\n  Span,\n  TextMapSetter,\n  TracerProvider,\n} from \"@opentelemetry/api\";\nimport type {\n  Instrumentation,\n  InstrumentationConfig,\n} from \"@opentelemetry/instrumentation\";\nimport { SemanticAttributes } from \"@opentelemetry/semantic-conventions\";\nimport { resolveTemplate } from \"../util/template\";\nimport { getVercelRequestContext } from \"../vercel-request-context/api\";\nimport { isSampled } from \"../util/sampled\";\n\n/**\n * Configuration for the \"fetch\" instrumentation.\n *\n * Some of this configuration can be overriden on a per-fetch call basis by\n * using the `opentelemetry` property in the `RequestInit` object (requires Next 14.1.1 or above).\n * This property can include:\n * - `ignore`: boolean - whether to ignore the fetch call from tracing. Overrides\n *   `ignoreUrls`.\n * - `propagateContext: boolean`: overrides `propagateContextUrls` for this call.\n * - `spanName: string`: overrides the computed span name for this call.\n * - `attributes: Attributes`: overrides the computed attributes for this call.\n */\nexport interface FetchInstrumentationConfig extends InstrumentationConfig {\n  /**\n   * A set of URL matchers (string prefix or regex) that should be ignored from tracing.\n   * By default all URLs are traced.\n   * Can be overriden by the `opentelemetry.ignore` property in the `RequestInit` object.\n   *\n   * Example: `fetch: { ignoreUrls: [/example.com/] }`.\n   */\n  ignoreUrls?: (string | RegExp)[];\n\n  /**\n   * A set of URL matchers (string prefix or regex) for which the tracing context\n   * should be propagated (see [`propagators`](Configuration#propagators)).\n   * By default the context is propagated _only_ for the\n   * [deployment URLs](https://vercel.com/docs/deployments/generated-urls), all\n   * other URLs should be enabled explicitly.\n   * Can be overriden by the `opentelemetry.propagateContext` property in the `RequestInit` object.\n   *\n   * Example: `fetch: { propagateContextUrls: [ /my.api/ ] }`.\n   */\n  propagateContextUrls?: (string | RegExp)[];\n\n  /**\n   * A set of URL matchers (string prefix or regex) for which the tracing context\n   * should not be propagated (see [`propagators`](Configuration#propagators)). This allows you to exclude a\n   * subset of URLs allowed by the [`propagateContextUrls`](FetchInstrumentationConfig#propagateContextUrls).\n   * Can be overriden by the `opentelemetry.propagateContext` property in the `RequestInit` object.\n   */\n  dontPropagateContextUrls?: (string | RegExp)[];\n\n  /**\n   * A string for the \"resource.name\" attribute that can include attribute expressions in `{}`.\n   * Can be overriden by the `opentelemetry.attributes` property in the `RequestInit` object.\n   *\n   * Example: `fetch: { resourceNameTemplate: \"{http.host}\" }`.\n   */\n  resourceNameTemplate?: string;\n\n  /**\n   * A map of attributes that should be created from the request headers. The keys of the map are\n   * attribute names and the values are request header names. If a resonse header doesn't exist, no\n   * attribute will be created for it.\n   *\n   * Example: `fetch: { attributesFromRequestHeaders: { \"attr1\": \"X-Attr\" } }`\n   */\n  attributesFromRequestHeaders?: Record<string, string>;\n\n  /**\n   * A map of attributes that should be created from the response headers. The keys of the map are\n   * attribute names and the values are response header names. If a resonse header doesn't exist, no\n   * attribute will be created for it.\n   *\n   * Example: `fetch: { attributesFromResponseHeaders: { \"attr1\": \"X-Attr\" } }`\n   */\n  attributesFromResponseHeaders?: Record<string, string>;\n}\n\ndeclare global {\n  interface RequestInit {\n    opentelemetry?: {\n      ignore?: boolean;\n      propagateContext?: boolean;\n      spanName?: string;\n      attributes?: Attributes;\n    };\n  }\n}\n\ntype InternalRequestInit = RequestInit & {\n  next?: {\n    internal: boolean;\n  };\n};\n\nexport class FetchInstrumentation implements Instrumentation {\n  instrumentationName = \"@vercel/otel/fetch\";\n  instrumentationVersion = \"1.0.0\";\n  /** @internal */\n  private config: FetchInstrumentationConfig;\n  /** @internal */\n  private originalFetch: typeof fetch | undefined;\n  /** @internal */\n  private tracerProvider: TracerProvider | undefined;\n\n  constructor(config: FetchInstrumentationConfig = {}) {\n    this.config = config;\n  }\n\n  getConfig(): FetchInstrumentationConfig {\n    return this.config;\n  }\n\n  setConfig(): void {\n    // Nothing.\n  }\n\n  setTracerProvider(tracerProvider: TracerProvider): void {\n    this.tracerProvider = tracerProvider;\n  }\n\n  setMeterProvider(): void {\n    // Nothing.\n  }\n\n  public enable(): void {\n    this.disable();\n\n    const { tracerProvider } = this;\n    if (!tracerProvider) {\n      return;\n    }\n\n    const tracer = tracerProvider.getTracer(\n      this.instrumentationName,\n      this.instrumentationVersion\n    );\n\n    const ignoreUrls = this.config.ignoreUrls ?? [];\n\n    const shouldIgnore = (\n      url: URL,\n      init: InternalRequestInit | undefined\n    ): boolean => {\n      if (init?.opentelemetry?.ignore !== undefined) {\n        return init.opentelemetry.ignore;\n      }\n      if (ignoreUrls.length === 0) {\n        return false;\n      }\n      const urlString = url.toString();\n      return ignoreUrls.some((match) => {\n        if (typeof match === \"string\") {\n          if (match === \"*\") {\n            return true;\n          }\n          return urlString.startsWith(match);\n        }\n        return match.test(urlString);\n      });\n    };\n\n    const host =\n      process.env.VERCEL_URL || process.env.NEXT_PUBLIC_VERCEL_URL || null;\n    const branchHost =\n      process.env.VERCEL_BRANCH_URL ||\n      process.env.NEXT_PUBLIC_VERCEL_BRANCH_URL ||\n      null;\n    const propagateContextUrls = this.config.propagateContextUrls ?? [];\n    const dontPropagateContextUrls = this.config.dontPropagateContextUrls ?? [];\n    const resourceNameTemplate = this.config.resourceNameTemplate;\n    const { attributesFromRequestHeaders, attributesFromResponseHeaders } =\n      this.config;\n\n    const shouldPropagate = (\n      url: URL,\n      init: InternalRequestInit | undefined\n    ): boolean => {\n      if (init?.opentelemetry?.propagateContext) {\n        return init.opentelemetry.propagateContext;\n      }\n      const urlString = url.toString();\n      if (\n        dontPropagateContextUrls.length > 0 &&\n        dontPropagateContextUrls.some((match) => {\n          if (typeof match === \"string\") {\n            if (match === \"*\") {\n              return true;\n            }\n            return urlString.startsWith(match);\n          }\n          return match.test(urlString);\n        })\n      ) {\n        return false;\n      }\n      // Allow same origin.\n      if (\n        host &&\n        url.protocol === \"https:\" &&\n        (url.host === host ||\n          url.host === branchHost ||\n          url.host === getVercelRequestContext()?.headers.host)\n      ) {\n        return true;\n      }\n      // Allow localhost for testing in a dev mode.\n      if (!host && url.protocol === \"http:\" && url.hostname === \"localhost\") {\n        return true;\n      }\n      return propagateContextUrls.some((match) => {\n        if (typeof match === \"string\") {\n          if (match === \"*\") {\n            return true;\n          }\n          return urlString.startsWith(match);\n        }\n        return match.test(urlString);\n      });\n    };\n\n    // Disable fetch tracing in Next.js.\n    process.env.NEXT_OTEL_FETCH_DISABLED = \"1\";\n\n    const originalFetch = globalThis.fetch;\n    this.originalFetch = originalFetch;\n\n    const doFetch: typeof fetch = async (input, initArg) => {\n      const init = initArg as InternalRequestInit | undefined;\n\n      // Passthrough internal requests.\n      if (init?.next?.internal) {\n        return originalFetch(input, init);\n      }\n\n      const req = new Request(\n        // The input Request must be cloned to avoid the bug\n        // on Edge runtime where the `new Request()` eagerly\n        // consumes the body of the original Request.\n        input instanceof Request ? input.clone() : input,\n        init\n      );\n      const url = new URL(req.url);\n      if (shouldIgnore(url, init)) {\n        return originalFetch(input, init);\n      }\n\n      const attrs = {\n        [SemanticAttributes.HTTP_METHOD]: req.method,\n        [SemanticAttributes.HTTP_URL]: req.url,\n        [SemanticAttributes.HTTP_HOST]: url.host,\n        [SemanticAttributes.HTTP_SCHEME]: url.protocol.replace(\":\", \"\"),\n        [SemanticAttributes.NET_PEER_NAME]: url.hostname,\n        [SemanticAttributes.NET_PEER_PORT]: url.port,\n      };\n      const resourceName = resourceNameTemplate\n        ? resolveTemplate(resourceNameTemplate, attrs)\n        : removeSearch(req.url);\n\n      const spanName =\n        init?.opentelemetry?.spanName ?? `fetch ${req.method} ${req.url}`;\n\n      const parentContext = context.active();\n\n      const span = tracer.startSpan(\n        spanName,\n        {\n          kind: SpanKind.CLIENT,\n          attributes: {\n            ...attrs,\n            \"operation.name\": `fetch.${req.method}`,\n            \"resource.name\": resourceName,\n            ...init?.opentelemetry?.attributes,\n          },\n        },\n        parentContext\n      );\n      if (!span.isRecording() || !isSampled(span.spanContext().traceFlags)) {\n        span.end();\n        return originalFetch(input, init);\n      }\n\n      if (shouldPropagate(url, init)) {\n        const fetchContext = traceApi.setSpan(parentContext, span);\n        propagation.inject(fetchContext, req.headers, HEADERS_SETTER);\n      }\n\n      if (attributesFromRequestHeaders) {\n        headersToAttributes(span, attributesFromRequestHeaders, req.headers);\n      }\n\n      try {\n        const startTime = Date.now();\n        // Remove \"content-type\" for a FormData body because undici regenerates\n        // a new multipart separator each time.\n        if (init?.body && init.body instanceof FormData) {\n          req.headers.delete(\"content-type\");\n        }\n        const res = await originalFetch(input, {\n          ...init,\n          headers: req.headers,\n        });\n        const duration = Date.now() - startTime;\n        span.setAttribute(SemanticAttributes.HTTP_STATUS_CODE, res.status);\n        span.setAttribute(\"http.response_time\", duration);\n        if (attributesFromResponseHeaders) {\n          headersToAttributes(span, attributesFromResponseHeaders, res.headers);\n        }\n        if (res.status >= 500) {\n          onError(span, `Status: ${res.status} (${res.statusText})`);\n        }\n\n        // Flush body, but non-blocking.\n        if (res.body) {\n          void pipeResponse(res).then(\n            (byteLength) => {\n              if (span.isRecording()) {\n                span.setAttribute(\n                  SemanticAttributes.HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED,\n                  byteLength\n                );\n                span.end();\n              }\n            },\n            (err) => {\n              if (span.isRecording()) {\n                onError(span, err);\n                span.end();\n              }\n            }\n          );\n        } else {\n          span.end();\n        }\n\n        return res;\n      } catch (e) {\n        onError(span, e);\n        span.end();\n        throw e;\n      }\n    };\n    globalThis.fetch = doFetch;\n  }\n\n  public disable(): void {\n    if (this.originalFetch) {\n      globalThis.fetch = this.originalFetch;\n    }\n  }\n}\n\nconst HEADERS_SETTER: TextMapSetter<Headers> = {\n  set(carrier: Headers, key: string, value: string): void {\n    carrier.set(key, value);\n  },\n};\n\nfunction removeSearch(url: string): string {\n  const index = url.indexOf(\"?\");\n  return index === -1 ? url : url.substring(0, index);\n}\n\nfunction pipeResponse(res: Response): Promise<number> {\n  let length = 0;\n  const clone = res.clone();\n  const reader = clone.body?.getReader();\n  if (!reader) {\n    return Promise.resolve(0);\n  }\n  const read = (): Promise<void> => {\n    return reader.read().then(({ done, value }) => {\n      if (done) {\n        return;\n      }\n      length += value.byteLength;\n      return read();\n    });\n  };\n  return read().then(() => length);\n}\n\nfunction onError(span: Span, err: unknown): void {\n  if (err instanceof Error) {\n    span.recordException(err);\n    span.setStatus({\n      code: SpanStatusCode.ERROR,\n      message: err.message,\n    });\n  } else {\n    const message = String(err);\n    span.setStatus({\n      code: SpanStatusCode.ERROR,\n      message,\n    });\n  }\n}\n\nfunction headersToAttributes(\n  span: Span,\n  attrsToHeadersMap: Record<string, string>,\n  headers: Headers\n): void {\n  for (const [attrName, headerName] of Object.entries(attrsToHeadersMap)) {\n    const headerValue = headers.get(headerName);\n    if (headerValue !== null) {\n      span.setAttribute(attrName, headerValue);\n    }\n  }\n}\n","import type { Attributes } from \"@opentelemetry/api\";\n\nexport function resolveTemplate(template: string, attrs: Attributes): string {\n  return template.replace(/\\{(?<temp1>[^{}]+)\\}/g, (match, key) => {\n    const value = attrs[key as string];\n    if (value !== undefined) {\n      return String(value);\n    }\n    return match;\n  });\n}\n","import {\n  createTraceState,\n  isSpanContextValid,\n  trace as traceApi,\n} from \"@opentelemetry/api\";\nimport type {\n  Context,\n  SpanContext,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n} from \"@opentelemetry/api\";\nimport { isTracingSuppressed } from \"@opentelemetry/core\";\n\nconst VERSION = \"00\";\n\nconst TRACE_PARENT_HEADER = \"traceparent\";\nconst TRACE_STATE_HEADER = \"tracestate\";\n\n/**\n * Same as the `W3CTraceContextPropagator` from `@opentelemetry/core`, but with\n * a workaround for RegExp issue in Edge.\n */\nexport class W3CTraceContextPropagator implements TextMapPropagator {\n  fields(): string[] {\n    return [TRACE_PARENT_HEADER, TRACE_STATE_HEADER];\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  inject(context: Context, carrier: any, setter: TextMapSetter): void {\n    const spanContext = traceApi.getSpanContext(context);\n    if (\n      !spanContext ||\n      isTracingSuppressed(context) ||\n      !isSpanContextValid(spanContext)\n    )\n      return;\n\n    const traceParent = `${VERSION}-${spanContext.traceId}-${\n      spanContext.spanId\n    }-0${Number(spanContext.traceFlags || 0).toString(16)}`;\n\n    setter.set(carrier, TRACE_PARENT_HEADER, traceParent);\n    if (spanContext.traceState) {\n      setter.set(\n        carrier,\n        TRACE_STATE_HEADER,\n        spanContext.traceState.serialize()\n      );\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  extract(context: Context, carrier: any, getter: TextMapGetter): Context {\n    const traceParentHeader = getter.get(carrier, TRACE_PARENT_HEADER);\n    if (!traceParentHeader) return context;\n    const traceParent = Array.isArray(traceParentHeader)\n      ? traceParentHeader[0]\n      : traceParentHeader;\n    if (typeof traceParent !== \"string\") return context;\n    const spanContext = parseTraceParent(traceParent);\n    if (!spanContext) return context;\n\n    spanContext.isRemote = true;\n\n    const traceStateHeader = getter.get(carrier, TRACE_STATE_HEADER);\n    if (traceStateHeader) {\n      // If more than one `tracestate` header is found, we merge them into a\n      // single header.\n      const state = Array.isArray(traceStateHeader)\n        ? traceStateHeader.join(\",\")\n        : traceStateHeader;\n      spanContext.traceState = createTraceState(\n        typeof state === \"string\" ? state : undefined\n      );\n    }\n    return traceApi.setSpanContext(context, spanContext);\n  }\n}\n\nfunction parseTraceParent(traceParent: string): SpanContext | null {\n  const [version, traceId, spanId, traceFlags, other] = traceParent.split(\"-\");\n  if (\n    !version ||\n    !traceId ||\n    !spanId ||\n    !traceFlags ||\n    version.length !== 2 ||\n    traceId.length !== 32 ||\n    spanId.length !== 16 ||\n    traceFlags.length !== 2\n  )\n    return null;\n\n  // According to the specification the implementation should be compatible\n  // with future versions. If there are more parts, we only reject it if it's using version 00\n  // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n  if (version === \"00\" && other) return null;\n\n  return {\n    traceId,\n    spanId,\n    traceFlags: parseInt(traceFlags, 16),\n  };\n}\n","import type { Context, TextMapPropagator } from \"@opentelemetry/api\";\nimport { diag, TraceFlags, trace as tracing } from \"@opentelemetry/api\";\nimport { getVercelRequestContext } from \"./api\";\n\nexport class VercelRuntimePropagator implements TextMapPropagator {\n  fields(): string[] {\n    return [];\n  }\n\n  inject(): void {\n    // Nothing.\n  }\n\n  extract(context: Context): Context {\n    const vrc = getVercelRequestContext();\n    if (!vrc?.telemetry) {\n      diag.warn(\"@vercel/otel: Vercel telemetry extension not found.\");\n      return context;\n    }\n\n    const { rootSpanContext } = vrc.telemetry;\n    if (!rootSpanContext) {\n      return context;\n    }\n\n    diag.debug(\n      \"@vercel/otel: Extracted root SpanContext from Vercel request context.\",\n      rootSpanContext\n    );\n    return tracing.setSpanContext(context, {\n      ...rootSpanContext,\n      isRemote: true,\n      traceFlags: rootSpanContext.traceFlags || TraceFlags.SAMPLED,\n    });\n  }\n}\n","import { diag } from \"@opentelemetry/api\";\nimport type { ReadableSpan, SpanExporter } from \"@opentelemetry/sdk-trace-base\";\nimport { ExportResultCode, type ExportResult } from \"@opentelemetry/core\";\nimport { createExportTraceServiceRequest } from \"@opentelemetry/otlp-transformer\";\nimport { getVercelRequestContext } from \"./api\";\n\nexport class VercelRuntimeSpanExporter implements SpanExporter {\n  export(\n    spans: ReadableSpan[],\n    resultCallback: (result: ExportResult) => void\n  ): void {\n    const context = getVercelRequestContext();\n    if (!context?.telemetry) {\n      diag.warn(\"@vercel/otel: no telemetry context found\");\n      resultCallback({ code: ExportResultCode.SUCCESS, error: undefined });\n      return;\n    }\n\n    try {\n      // Converts a Span to IResourceSpans > IScopeSpans > ISpan structure, which\n      // is OTLP format. It's can be directly serialized to JSON or converted\n      // to Protobuf.\n      // {\n      //   // Uses hex-encoding trace and span IDs. Otherwise, base64 is used.\n      //   useHex: true,\n      //   // Uses `{high, low}` format for timestamps. Otherwise, `unixNanon` is used.\n      //   // TODO Fix this\n      //   useLongBits: false,\n      // }\n      const data = createExportTraceServiceRequest(spans, {\n        useHex: true,\n        useLongBits: false,\n      });\n\n      context.telemetry.reportSpans(data);\n      resultCallback({ code: ExportResultCode.SUCCESS, error: undefined });\n    } catch (e) {\n      resultCallback({\n        code: ExportResultCode.FAILED,\n        error: e instanceof Error ? e : new Error(String(e)),\n      });\n    }\n  }\n\n  shutdown(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  forceFlush?(): Promise<void> {\n    return Promise.resolve();\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { OtlpEncodingOptions, Fixed64, LongBits } from './types';\nimport { HrTime } from '@opentelemetry/api';\nimport { hexToBase64, hrTimeToNanoseconds } from '@opentelemetry/core';\n\nconst NANOSECONDS = BigInt(1_000_000_000);\n\nexport function hrTimeToNanos(hrTime: HrTime): bigint {\n  return BigInt(hrTime[0]) * NANOSECONDS + BigInt(hrTime[1]);\n}\n\nexport function toLongBits(value: bigint): LongBits {\n  const low = Number(BigInt.asUintN(32, value));\n  const high = Number(BigInt.asUintN(32, value >> BigInt(32)));\n  return { low, high };\n}\n\nexport function encodeAsLongBits(hrTime: HrTime): LongBits {\n  const nanos = hrTimeToNanos(hrTime);\n  return toLongBits(nanos);\n}\n\nexport function encodeAsString(hrTime: HrTime): string {\n  const nanos = hrTimeToNanos(hrTime);\n  return nanos.toString();\n}\n\nconst encodeTimestamp =\n  typeof BigInt !== 'undefined' ? encodeAsString : hrTimeToNanoseconds;\n\nexport type HrTimeEncodeFunction = (hrTime: HrTime) => Fixed64;\nexport type SpanContextEncodeFunction = (spanContext: string) => string;\nexport type OptionalSpanContextEncodeFunction = (\n  spanContext: string | undefined\n) => string | undefined;\n\nexport interface Encoder {\n  encodeHrTime: HrTimeEncodeFunction;\n  encodeSpanContext: SpanContextEncodeFunction;\n  encodeOptionalSpanContext: OptionalSpanContextEncodeFunction;\n}\n\nfunction identity<T>(value: T): T {\n  return value;\n}\n\nfunction optionalHexToBase64(str: string | undefined): string | undefined {\n  if (str === undefined) return undefined;\n  return hexToBase64(str);\n}\n\nconst DEFAULT_ENCODER: Encoder = {\n  encodeHrTime: encodeAsLongBits,\n  encodeSpanContext: hexToBase64,\n  encodeOptionalSpanContext: optionalHexToBase64,\n};\n\nexport function getOtlpEncoder(options?: OtlpEncodingOptions): Encoder {\n  if (options === undefined) {\n    return DEFAULT_ENCODER;\n  }\n\n  const useLongBits = options.useLongBits ?? true;\n  const useHex = options.useHex ?? false;\n  return {\n    encodeHrTime: useLongBits ? encodeAsLongBits : encodeTimestamp,\n    encodeSpanContext: useHex ? identity : hexToBase64,\n    encodeOptionalSpanContext: useHex ? identity : optionalHexToBase64,\n  };\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type { IAnyValue, IKeyValue } from './types';\nimport { Attributes } from '@opentelemetry/api';\n\nexport function toAttributes(attributes: Attributes): IKeyValue[] {\n  return Object.keys(attributes).map(key => toKeyValue(key, attributes[key]));\n}\n\nexport function toKeyValue(key: string, value: unknown): IKeyValue {\n  return {\n    key: key,\n    value: toAnyValue(value),\n  };\n}\n\nexport function toAnyValue(value: unknown): IAnyValue {\n  const t = typeof value;\n  if (t === 'string') return { stringValue: value as string };\n  if (t === 'number') {\n    if (!Number.isInteger(value)) return { doubleValue: value as number };\n    return { intValue: value as number };\n  }\n  if (t === 'boolean') return { boolValue: value as boolean };\n  if (value instanceof Uint8Array) return { bytesValue: value };\n  if (Array.isArray(value))\n    return { arrayValue: { values: value.map(toAnyValue) } };\n  if (t === 'object' && value != null)\n    return {\n      kvlistValue: {\n        values: Object.entries(value as object).map(([k, v]) =>\n          toKeyValue(k, v)\n        ),\n      },\n    };\n\n  return {};\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type { Link } from '@opentelemetry/api';\nimport type { ReadableSpan, TimedEvent } from '@opentelemetry/sdk-trace-base';\nimport type { Encoder } from '../common';\nimport { toAttributes } from '../common/internal';\nimport { EStatusCode, IEvent, ILink, ISpan } from './types';\n\nexport function sdkSpanToOtlpSpan(span: ReadableSpan, encoder: Encoder): ISpan {\n  const ctx = span.spanContext();\n  const status = span.status;\n  return {\n    traceId: encoder.encodeSpanContext(ctx.traceId),\n    spanId: encoder.encodeSpanContext(ctx.spanId),\n    parentSpanId: encoder.encodeOptionalSpanContext(span.parentSpanId),\n    traceState: ctx.traceState?.serialize(),\n    name: span.name,\n    // Span kind is offset by 1 because the API does not define a value for unset\n    kind: span.kind == null ? 0 : span.kind + 1,\n    startTimeUnixNano: encoder.encodeHrTime(span.startTime),\n    endTimeUnixNano: encoder.encodeHrTime(span.endTime),\n    attributes: toAttributes(span.attributes),\n    droppedAttributesCount: span.droppedAttributesCount,\n    events: span.events.map(event => toOtlpSpanEvent(event, encoder)),\n    droppedEventsCount: span.droppedEventsCount,\n    status: {\n      // API and proto enums share the same values\n      code: status.code as unknown as EStatusCode,\n      message: status.message,\n    },\n    links: span.links.map(link => toOtlpLink(link, encoder)),\n    droppedLinksCount: span.droppedLinksCount,\n  };\n}\n\nexport function toOtlpLink(link: Link, encoder: Encoder): ILink {\n  return {\n    attributes: link.attributes ? toAttributes(link.attributes) : [],\n    spanId: encoder.encodeSpanContext(link.context.spanId),\n    traceId: encoder.encodeSpanContext(link.context.traceId),\n    traceState: link.context.traceState?.serialize(),\n    droppedAttributesCount: link.droppedAttributesCount || 0,\n  };\n}\n\nexport function toOtlpSpanEvent(\n  timedEvent: TimedEvent,\n  encoder: Encoder\n): IEvent {\n  return {\n    attributes: timedEvent.attributes\n      ? toAttributes(timedEvent.attributes)\n      : [],\n    name: timedEvent.name,\n    timeUnixNano: encoder.encodeHrTime(timedEvent.time),\n    droppedAttributesCount: timedEvent.droppedAttributesCount || 0,\n  };\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type { IResource } from '@opentelemetry/resources';\nimport type { ReadableSpan } from '@opentelemetry/sdk-trace-base';\nimport type { OtlpEncodingOptions } from '../common/types';\nimport { toAttributes } from '../common/internal';\nimport { sdkSpanToOtlpSpan } from './internal';\nimport {\n  IExportTraceServiceRequest,\n  IResourceSpans,\n  IScopeSpans,\n} from './types';\nimport { Encoder, getOtlpEncoder } from '../common';\n\nexport function createExportTraceServiceRequest(\n  spans: ReadableSpan[],\n  options?: OtlpEncodingOptions\n): IExportTraceServiceRequest {\n  const encoder = getOtlpEncoder(options);\n  return {\n    resourceSpans: spanRecordsToResourceSpans(spans, encoder),\n  };\n}\n\nfunction createResourceMap(readableSpans: ReadableSpan[]) {\n  const resourceMap: Map<IResource, Map<string, ReadableSpan[]>> = new Map();\n  for (const record of readableSpans) {\n    let ilmMap = resourceMap.get(record.resource);\n\n    if (!ilmMap) {\n      ilmMap = new Map();\n      resourceMap.set(record.resource, ilmMap);\n    }\n\n    // TODO this is duplicated in basic tracer. Consolidate on a common helper in core\n    const instrumentationLibraryKey = `${record.instrumentationLibrary.name}@${\n      record.instrumentationLibrary.version || ''\n    }:${record.instrumentationLibrary.schemaUrl || ''}`;\n    let records = ilmMap.get(instrumentationLibraryKey);\n\n    if (!records) {\n      records = [];\n      ilmMap.set(instrumentationLibraryKey, records);\n    }\n\n    records.push(record);\n  }\n\n  return resourceMap;\n}\n\nfunction spanRecordsToResourceSpans(\n  readableSpans: ReadableSpan[],\n  encoder: Encoder\n): IResourceSpans[] {\n  const resourceMap = createResourceMap(readableSpans);\n  const out: IResourceSpans[] = [];\n\n  const entryIterator = resourceMap.entries();\n  let entry = entryIterator.next();\n  while (!entry.done) {\n    const [resource, ilmMap] = entry.value;\n    const scopeResourceSpans: IScopeSpans[] = [];\n    const ilmIterator = ilmMap.values();\n    let ilmEntry = ilmIterator.next();\n    while (!ilmEntry.done) {\n      const scopeSpans = ilmEntry.value;\n      if (scopeSpans.length > 0) {\n        const { name, version, schemaUrl } =\n          scopeSpans[0].instrumentationLibrary;\n        const spans = scopeSpans.map(readableSpan =>\n          sdkSpanToOtlpSpan(readableSpan, encoder)\n        );\n\n        scopeResourceSpans.push({\n          scope: { name, version },\n          spans: spans,\n          schemaUrl: schemaUrl,\n        });\n      }\n      ilmEntry = ilmIterator.next();\n    }\n    // TODO SDK types don't provide resource schema URL at this time\n    const transformedSpans: IResourceSpans = {\n      resource: {\n        attributes: toAttributes(resource.attributes),\n        droppedAttributesCount: 0,\n      },\n      scopeSpans: scopeResourceSpans,\n      schemaUrl: undefined,\n    };\n\n    out.push(transformedSpans);\n    entry = entryIterator.next();\n  }\n\n  return out;\n}\n","import type { Configuration } from \"./types\";\nimport { Sdk } from \"./sdk\";\n\nexport type * from \"./types\";\nexport type { OTLPExporterConfig } from \"./exporters/config\";\nexport { OTLPHttpJsonTraceExporter } from \"./exporters/exporter-trace-otlp-http-fetch\";\nexport { OTLPHttpProtoTraceExporter } from \"./exporters/exporter-trace-otlp-proto-fetch\";\nexport {\n  type FetchInstrumentationConfig,\n  FetchInstrumentation,\n} from \"./instrumentations/fetch\";\n\n/**\n * Registers the OpenTelemetry SDK with the specified service name and the default configuration.\n * Should be included in the `instrumentation.ts`. For example:\n *\n * ```ts\n * import { registerOTel } from \"@vercel/otel\";\n *\n * export function register() {\n *   registerOTel({\n *     serviceName: \"my-app\",\n *     ...\n *   });\n * }\n * ```\n *\n * @param optionsOrServiceName - Either a service name as a string or a configuration object.\n */\nexport function registerOTel(\n  optionsOrServiceName?: Configuration | string\n): void {\n  let options: Configuration;\n  if (!optionsOrServiceName) {\n    options = {};\n  } else if (typeof optionsOrServiceName === \"string\") {\n    options = { serviceName: optionsOrServiceName };\n  } else {\n    options = optionsOrServiceName;\n  }\n  const sdk = new Sdk(options);\n  sdk.start();\n}\n"],"names":["api_exports","api_star","init_api","__esmMin","__reExport","api_1","SUPPRESS_TRACING_KEY","suppressTracing","context","exports","unsuppressTracing","isTracingSuppressed","exports","api_1","constants_1","serializeKeyPairs","keyPairs","hValue","current","value","exports","getKeyPairs","baggage","key","entry","parsePairKeyValue","valueProps","keyPairPart","separatorIndex","metadata","parseKeyPairsIntoRecord","keyPair","headers","api_1","suppress_tracing_1","constants_1","utils_1","W3CBaggagePropagator","context","carrier","setter","baggage","keyPairs","pair","headerValue","getter","baggageString","entry","keyPair","baggageEntry","exports","AnchoredClock","systemClock","monotonicClock","delta","exports","api_1","sanitizeAttributes","attributes","out","key","val","isAttributeKey","isAttributeValue","exports","isHomogeneousAttributeValueArray","isValidPrimitiveAttributeValue","arr","type","element","api_1","loggingErrorHandler","ex","stringifyException","exports","flattenException","result","current","propertyName","value","logging_error_handler_1","delegateHandler","setGlobalErrorHandler","handler","exports","globalErrorHandler","ex","TracesSamplerValues","exports","exports","api_1","sampling_1","globalThis_1","DEFAULT_LIST_SEPARATOR","ENVIRONMENT_BOOLEAN_KEYS","isEnvVarABoolean","key","ENVIRONMENT_NUMBERS_KEYS","isEnvVarANumber","ENVIRONMENT_LISTS_KEYS","isEnvVarAList","exports","parseBoolean","environment","values","value","parseNumber","name","min","max","parseStringList","output","input","separator","givenValue","v","logLevelMap","setLogLevelFromEnv","theLevel","parseEnvironment","env","getEnvWithoutDefaults","environment_1","globalThis_1","getEnv","globalEnv","exports","hexToBase64","hexStr","hexStrLen","hexAsciiCharsStr","i","hexPair","hexVal","exports","SPAN_ID_BYTES","TRACE_ID_BYTES","RandomIdGenerator","getIdGenerator","exports","SHARED_CHAR_CODES_ARRAY","bytes","i","exports","exports","exports","__exportStar","exports","exports","__exportStar","exports","__exportStar","exports","version_1","semantic_conventions_1","exports","unrefTimer","_timer","exports","__exportStar","exports","platform_1","NANOSECOND_DIGITS","NANOSECOND_DIGITS_IN_MILLIS","MILLISECONDS_TO_NANOSECONDS","SECOND_TO_NANOSECONDS","millisToHrTime","epochMillis","epochSeconds","seconds","nanos","exports","getTimeOrigin","timeOrigin","perf","hrTime","performanceNow","now","addHrTimes","timeInputToHrTime","time","isTimeInputHrTime","hrTimeDuration","startTime","endTime","hrTimeToTimeStamp","precision","tmp","nanoString","hrTimeToNanoseconds","hrTimeToMilliseconds","hrTimeToMicroseconds","value","isTimeInput","time1","time2","out","ExportResultCode","exports","api_1","CompositePropagator","config","_a","p","x","y","context","carrier","setter","propagator","err","getter","ctx","exports","VALID_KEY_CHAR_RANGE","VALID_KEY","VALID_VENDOR_KEY","VALID_KEY_REGEX","VALID_VALUE_BASE_REGEX","INVALID_VALUE_COMMA_EQUAL_REGEX","validateKey","key","exports","validateValue","value","validators_1","MAX_TRACE_STATE_ITEMS","MAX_TRACE_STATE_LEN","LIST_MEMBERS_SEPARATOR","LIST_MEMBER_KEY_VALUE_SPLITTER","TraceState","_TraceState","rawTraceState","key","value","traceState","agg","part","listMember","exports","api_1","suppress_tracing_1","TraceState_1","exports","VERSION","VERSION_PART","TRACE_ID_PART","PARENT_ID_PART","FLAGS_PART","TRACE_PARENT_REGEX","parseTraceParent","traceParent","match","W3CTraceContextPropagator","context","carrier","setter","spanContext","getter","traceParentHeader","traceStateHeader","state","api_1","RPC_METADATA_KEY","RPCType","exports","setRPCMetadata","context","meta","deleteRPCMetadata","getRPCMetadata","api_1","AlwaysOffSampler","exports","api_1","AlwaysOnSampler","exports","api_1","global_error_handler_1","AlwaysOffSampler_1","AlwaysOnSampler_1","ParentBasedSampler","config","_a","_b","_c","_d","context","traceId","spanName","spanKind","attributes","links","parentContext","exports","api_1","TraceIdRatioBasedSampler","_ratio","context","traceId","ratio","accumulation","i","pos","part","exports","objectTag","nullTag","undefinedTag","funcProto","funcToString","objectCtorString","getPrototype","overArg","objectProto","hasOwnProperty","symToStringTag","nativeObjectToString","func","transform","arg","isPlainObject","value","isObjectLike","baseGetTag","proto","Ctor","exports","getRawTag","objectToString","isOwn","tag","unmasked","result","lodash_merge_1","MAX_LEVEL","merge","args","result","objects","mergeTwoObjects","exports","takeValue","value","isArray","one","two","level","isPrimitive","isFunction","j","isObject","keys","i","key","shouldMerge","twoValue","obj1","obj2","wasObjectReferenced","arr1","arr2","obj","arr","info","TimeoutError","_TimeoutError","message","exports","callWithTimeout","promise","timeout","timeoutHandle","timeoutPromise","_resolve","reject","result","reason","urlMatches","url","urlToMatch","exports","isUrlIgnored","ignoredUrls","ignoreUrl","isWrapped","func","exports","Deferred","resolve","reject","val","err","exports","promise_1","BindOnceFuture","_callback","_that","args","val","err","exports","api_1","suppress_tracing_1","_export","exporter","arg","resolve","result","exports","__exportStar","exports","exporter_1","parseInstrumentationOptions","options","instrumentations","i","j","option","results","exports","enableInstrumentations","tracerProvider","meterProvider","instrumentation","disableInstrumentations","api_1","autoLoaderUtils_1","registerInstrumentations","options","instrumentations","tracerProvider","meterProvider","exports","async_hooks_exports","async_hooks_star","init_async_hooks","__esmMin","__reExport","events_exports","events_star","init_events","__esmMin","__reExport","events_1","ADD_LISTENER_METHODS","AbstractAsyncHooksContextManager","context","target","manager","contextWrapper","args","ee","methodName","original","contextManager","event","listener","events","_a","patchedListener","map","listeners","exports","api_1","async_hooks_1","AbstractAsyncHooksContextManager_1","AsyncLocalStorageContextManager","_a","context","fn","thisArg","args","cb","exports","toAttributes","attributes","key","toKeyValue","exports","value","toAnyValue","t","k","v","internal_1","sdkSpanToOtlpSpan","span","encoder","ctx","status","_a","event","toOtlpSpanEvent","link","toOtlpLink","exports","timedEvent","core_1","NANOSECONDS","hrTimeToNanos","hrTime","exports","toLongBits","value","low","high","encodeAsLongBits","nanos","encodeAsString","encodeTimestamp","identity","optionalHexToBase64","str","DEFAULT_ENCODER","getOtlpEncoder","options","useLongBits","_a","useHex","_b","internal_1","internal_2","common_1","createExportTraceServiceRequest","spans","options","encoder","spanRecordsToResourceSpans","exports","createResourceMap","readableSpans","resourceMap","record","ilmMap","instrumentationLibraryKey","records","out","entryIterator","entry","resource","scopeResourceSpans","ilmIterator","ilmEntry","scopeSpans","name","version","schemaUrl","readableSpan","transformedSpans","api_1","core_1","DEFAULT_TRACE_TIMEOUT","exports","parseHeaders","partialHeaders","headers","key","value","appendResourcePathToUrl","url","path","appendRootPathToUrlIfNeeded","parsedUrl","configureExporterTimeout","timeoutMillis","invalidTimeout","getExporterTimeoutFromEnv","definedTimeout","_a","timeout","defaultTimeout","isExportRetryable","statusCode","parseRetryAfterToMills","retryAfter","seconds","delay","api_1","core_1","util_1","OTLPExporterBase","config","items","resultCallback","error","resolve","reject","e","exports","require_aspromise","__commonJSMin","exports","module","asPromise","fn","ctx","params","offset","index","pending","resolve","reject","err","require_base64","__commonJSMin","exports","base64","string","p","b64","s64","i","buffer","start","end","parts","chunk","j","t","b","invalidEncoding","offset","require_eventemitter","__commonJSMin","exports","module","EventEmitter","evt","fn","ctx","listeners","i","args","require_float","__commonJSMin","exports","module","factory","f32","f8b","le","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloat_ieee754","writeUint","sign","exponent","mantissa","writeUintLE","writeUintBE","readFloat_ieee754","readUint","uint","readUintLE","readUintBE","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","require_inquire","__commonJSMin","exports","module","inquire","moduleName","require_utf8","__commonJSMin","exports","utf8","string","len","c","i","buffer","start","end","parts","chunk","t","offset","c1","c2","require_pool","__commonJSMin","exports","module","pool","alloc","slice","size","SIZE","MAX","slab","offset","buf","require_longbits","__commonJSMin","exports","module","LongBits","util","lo","hi","zero","zeroHash","value","sign","unsigned","charCodeAt","hash","mask","part0","part1","part2","require_minimal","__commonJSMin","exports","util","value","obj","prop","Buffer","sizeOrArray","hash","unsigned","bits","merge","dst","src","ifNotSet","keys","i","str","newError","name","CustomError","message","properties","fieldNames","fieldMap","encoding","size","require_writer","__commonJSMin","exports","module","Writer","util","BufferWriter","LongBits","base64","utf8","Op","fn","len","val","noop","State","writer","create","size","writeByte","buf","pos","writeVarint32","VarintOp","value","writeVarint64","bits","writeFixed32","writeBytes","i","head","tail","BufferWriter_","require_writer_buffer","__commonJSMin","exports","module","BufferWriter","Writer","util","val","buf","pos","i","value","len","writeStringBuffer","require_reader","__commonJSMin","exports","module","Reader","util","BufferReader","LongBits","utf8","indexOutOfRange","reader","writeLength","buffer","create_array","create","value","readLongVarint","bits","i","readFixed32_end","buf","end","readFixed64","length","start","nativeBuffer","bytes","wireType","BufferReader_","fn","require_reader_buffer","__commonJSMin","exports","module","BufferReader","Reader","util","buffer","len","require_service","__commonJSMin","exports","module","Service","util","rpcImpl","requestDelimited","responseDelimited","rpcCall","method","requestCtor","responseCtor","request","callback","self","err","response","endedByRPC","require_rpc","__commonJSMin","exports","rpc","require_roots","__commonJSMin","exports","module","require_index_minimal","__commonJSMin","exports","protobuf","configure","require_minimal","__commonJSMin","exports","module","init_api","import_core","init_api","import_core","import_semantic_conventions","ExceptionEventName","Span","parentTracer","context","spanName","spanContext","kind","parentSpanId","links","startTime","_deprecatedClock","attributes","now","key","value","_b","__values","_c","_d","__read","k","v","name","attributesOrStartTime","timeStamp","status","endTime","inp","msDuration","exception","time","ExceptionEventName","limit","_this","val","init_api","import_core","SamplingDecision","AlwaysOffSampler","SamplingDecision","AlwaysOnSampler","SamplingDecision","init_api","import_core","ParentBasedSampler","config","AlwaysOnSampler","_a","_b","AlwaysOffSampler","_c","_d","context","traceId","spanName","spanKind","attributes","links","parentContext","init_api","TraceIdRatioBasedSampler","_ratio","context","traceId","SamplingDecision","ratio","accumulation","i","pos","part","env","FALLBACK_OTEL_TRACES_SAMPLER","DEFAULT_RATIO","loadDefaultConfig","buildSamplerFromEnv","environment","AlwaysOnSampler","AlwaysOffSampler","ParentBasedSampler","TraceIdRatioBasedSampler","getSamplerProbabilityFromEnv","probability","import_core","mergeConfig","userConfig","perInstanceDefaults","buildSamplerFromEnv","DEFAULT_CONFIG","loadDefaultConfig","target","reconfigureLimits","spanLimits","parsedEnvConfig","_f","_e","_d","_b","_a","_c","_m","_l","_k","_h","_g","_j","init_api","import_core","BatchSpanProcessorBase","_exporter","config","env","_span","_parentContext","span","_this","resolve","reject","promises","count","i","j","timer","spans","doExport","result","_a","pendingResources","resource","err","flush","e","BatchSpanProcessor","_super","__extends","_exporter","config","_this","BatchSpanProcessorBase","SPAN_ID_BYTES","TRACE_ID_BYTES","RandomIdGenerator","getIdGenerator","SHARED_CHAR_CODES_ARRAY","getIdGenerator","bytes","i","Tracer","instrumentationLibrary","config","_tracerProvider","localConfig","mergeConfig","RandomIdGenerator","name","options","context","parentSpan","nonRecordingSpan","parentSpanContext","spanId","traceId","traceState","parentSpanId","spanKind","_a","links","_b","link","attributes","samplingResult","_c","traceFlags","spanContext","initAttributes","span","Span","arg2","arg3","arg4","opts","ctx","fn","parentContext","contextWithSpanSet","init_api","import_core","init_api","import_semantic_conventions","import_core","defaultServiceName","Resource","attributes","asyncAttributesPromise","_this","_a","asyncAttributes","err","defaultServiceName","other","mergedSyncAttributes","__assign","mergedAttributesPromise","_c","__read","thisAsyncAttributes","otherAsyncAttributes","_b","init_api","import_core","import_semantic_conventions","EnvDetectorSync","_config","attributes","env","rawAttributes","serviceName","parsedAttributes","e","Resource","rawEnvAttributes","rawAttributes_1","__values","rawAttributes_1_1","rawAttribute","keyValuePair","_b","__read","key","value","name","str","i","ch","envDetectorSync","init_api","isPromiseLike","val","detectResourcesSync","config","resources","_a","d","resourceOrPromise_1","resource_1","isPromiseLike","createPromise","__awaiter","resolvedResource","Resource","e","mergedResources","acc","resource","logResources","resourceDebugString","import_core","MultiSpanProcessor","_spanProcessors","promises","_b","__values","_c","spanProcessor","resolve","error","span","context","reject","NoopSpanProcessor","_span","_context","ForceFlushState","BasicTracerProvider","config","mergedConfig","loadDefaultConfig","reconfigureLimits","_a","Resource","defaultExporter","batchProcessor","BatchSpanProcessor","NoopSpanProcessor","name","version","options","key","Tracer","spanProcessor","err","MultiSpanProcessor","timeout","promises","resolve","state","timeoutInterval","error","reject","results","errors","result","_this","uniquePropagatorNames","propagators","propagator","validPropagators","list","item","exporterName","exporter","init_api","api_logs_exports","__reExport","api_logs_star","import_autoLoader","init_api","import_core","init_api","init_api","import_core","LogRecord","_sharedState","instrumentationScope","logRecord","timestamp","observedTimestamp","severityNumber","severityText","body","_a","attributes","context","now","spanContext","key","value","_b","__values","_c","_d","__read","k","v","_this","limit","val","Logger","instrumentationScope","_sharedState","logRecord","currentContext","logRecordInstance","LogRecord","__assign","import_core","loadDefaultConfig","reconfigureLimits","logRecordLimits","parsedEnvConfig","_c","_b","_a","_f","_e","_d","import_core","MultiLogRecordProcessor","processors","forceFlushTimeoutMillis","timeout","processor","_a","logRecord","context","NoopLogRecordProcessor","_logRecord","_context","LoggerProviderSharedState","resource","forceFlushTimeoutMillis","logRecordLimits","NoopLogRecordProcessor","DEFAULT_LOGGER_NAME","LoggerProvider","config","_a","loadDefaultConfig","_b","resource","Resource","logRecordLimits","forceFlushTimeoutMillis","LoggerProviderSharedState","reconfigureLimits","name","version","options","loggerName","key","Logger","processor","err","MultiLogRecordProcessor","AggregationTemporality","isNotNullish","item","hashAttributes","attributes","keys","key","instrumentationScopeId","instrumentationScope","_a","_b","TimeoutError","_super","__extends","message","_this","callWithTimeout","promise","timeout","timeoutHandle","timeoutPromise","_resolve","reject","TimeoutError","result","reason","PromiseAllSettled","promises","p","__awaiter","_this","ret","_a","e_1","isPromiseAllSettledRejectionResult","it","setEquals","lhs","rhs","lhs_1","__values","lhs_1_1","item","equalsCaseInsensitive","lhs","rhs","init_api","InstrumentType","createInstrumentDescriptor","name","type","options","isValidName","_a","_b","_c","_d","createInstrumentDescriptorWithView","view","instrument","isDescriptorCompatibleWith","descriptor","otherDescriptor","equalsCaseInsensitive","NAME_REGEXP","init_api","ViewRegistry","view","instrument","meter","_this","views","registeredView","selector","init_api","import_core","SyncInstrument","_writableMetricStorage","_descriptor","value","attributes","context","contextApi","UpDownCounterInstrument","_super","__extends","value","attributes","ctx","SyncInstrument","CounterInstrument","_super","__extends","value","attributes","ctx","SyncInstrument","HistogramInstrument","_super","__extends","value","attributes","ctx","SyncInstrument","ObservableInstrument","descriptor","metricStorages","_observableRegistry","callback","ObservableCounterInstrument","_super","__extends","ObservableInstrument","ObservableGaugeInstrument","_super","__extends","ObservableInstrument","ObservableUpDownCounterInstrument","_super","__extends","ObservableInstrument","isObservableInstrument","it","ObservableInstrument","Meter","_meterSharedState","name","options","descriptor","createInstrumentDescriptor","InstrumentType","storage","HistogramInstrument","CounterInstrument","UpDownCounterInstrument","storages","ObservableGaugeInstrument","ObservableCounterInstrument","ObservableUpDownCounterInstrument","callback","observables","MetricStorage","_instrumentDescriptor","description","createInstrumentDescriptor","HashMap","_hash","key","hashCode","defaultFactory","hash","val","value","keyIterator","next","_a","valueIterator","AttributeHashMap","_super","__extends","hashAttributes","HashMap","DeltaMetricProcessor","_aggregator","AttributeHashMap","value","attributes","_context","collectionTime","_this","accumulation","measurements","_a","_b","__read","hashCode","delta","previous","active","unreportedDelta","TemporalMetricProcessor","_aggregator","collectorHandles","_this","handle","collector","instrumentDescriptor","currentAccumulations","collectionTime","unreportedAccumulations","result","aggregationTemporality","last","lastCollectionTime","AggregationTemporality","accumulationRecords","AttributesMapToAccumulationRecords","currentAccumulation","registeredCollectors","registeredCollectors_1","__values","registeredCollectors_1_1","stash","AttributeHashMap","unreportedList","unreportedList_1","unreportedList_1_1","it_1","current","aggregator","iterator","next","_a","__read","key","record","hash","lastAccumulation","accumulation","_b","_c","_d","AttributesMapToAccumulationRecords","map","AsyncMetricStorage","_super","__extends","_instrumentDescriptor","aggregator","_attributesProcessor","collectorHandles","_this","DeltaMetricProcessor","TemporalMetricProcessor","measurements","observationTime","processed","AttributeHashMap","_a","_b","__read","attributes","value","collector","collectionTime","accumulations","MetricStorage","init_api","getIncompatibilityDetails","existing","otherDescriptor","incompatibility","getValueTypeConflictResolutionRecipe","getUnitConflictResolutionRecipe","getTypeConflictResolutionRecipe","selector","selectorString","getDescriptionResolutionRecipe","getConflictResolutionRecipe","MetricStorageRegistry","collector","storages","_c","__values","_d","metricStorages","perCollectorStorages","_e","_f","storage","storageMap","expectedDescriptor","descriptor","existingStorages","compatibleStorage","existingStorages_1","existingStorages_1_1","existingStorage","existingDescriptor","isDescriptorCompatibleWith","getIncompatibilityDetails","getConflictResolutionRecipe","MultiMetricStorage","_backingStorages","value","attributes","context","recordTime","it","init_api","init_api","ObservableResultImpl","_instrumentName","_valueType","AttributeHashMap","value","attributes","BatchObservableResultImpl","metric","value","attributes","isObservableInstrument","map","AttributeHashMap","ObservableRegistry","callback","instrument","idx","instruments","observableInstruments","isObservableInstrument","collectionTime","timeoutMillis","callbackFutures","batchCallbackFutures","PromiseAllSettled","__spreadArray","__read","results","_a","rejections","isPromiseAllSettledRejectionResult","it","observationTime","_this","observableResult","ObservableResultImpl","callPromise","callWithTimeout","_b","metricStorage","BatchObservableResultImpl","buffer","record","setEquals","SyncMetricStorage","_super","__extends","instrumentDescriptor","aggregator","_attributesProcessor","collectorHandles","_this","DeltaMetricProcessor","TemporalMetricProcessor","value","attributes","context","recordTime","collector","collectionTime","accumulations","MetricStorage","AttributesProcessor","NOOP","NoopAttributesProcessor","_super","__extends","incoming","_context","AttributesProcessor","FilteringAttributesProcessor","_super","__extends","_allowedAttributeNames","_this","incoming","_context","filteredAttributes","attributeName","AttributesProcessor","NOOP","NoopAttributesProcessor","MeterSharedState","_meterProviderSharedState","_instrumentationScope","MetricStorageRegistry","ObservableRegistry","Meter","descriptor","storages","SyncMetricStorage","MultiMetricStorage","AsyncMetricStorage","collector","collectionTime","options","errors","_a","metricDataList","metricStorage","isNotNullish","MetricStorageType","_this","views","view","viewDescriptor","createInstrumentDescriptorWithView","compatibleStorage","aggregator","viewStorage","perCollectorAggregations","collectorStorages","_b","__read","aggregation","storage","AttributesProcessor","MeterProviderSharedState","resource","ViewRegistry","instrumentationScope","id","instrumentationScopeId","meterSharedState","MeterSharedState","instrumentType","result","_b","__values","_c","collector","import_core","MetricCollector","_sharedState","_metricReader","options","collectionTime","scopeMetrics","errors","meterCollectionPromises","meterSharedState","__awaiter","_this","current","_a","__spreadArray","__read","instrumentType","MeterProvider","options","resource","Resource","_b","MeterProviderSharedState","_c","__values","_d","view","name","version","metricReader","collector","MetricCollector","_a","import_semantic_conventions","import_environment","import_AsyncLocalStorageContextManager","import_core","init_api","symbol","getVercelRequestContext","import_semantic_conventions","omitUndefinedAttributes","obj","_","value","parseRequestId","header","getVercelRequestContextAttributes","context","getVercelRequestContext","attributesFromHeaders","rootAttrs","resolveAttributesFromHeaders","omitUndefinedAttributes","parseRequestId","getter","_carrier","carrier","key","headers","attrs","attrName","headerName","headerValue","init_api","isSampled","traceFlags","CompositeSpanProcessor","processors","attributesFromHeaders","p","e","span","parentContext","traceId","spanId","traceFlags","isRoot","isSampled","vrc","getVercelRequestContext","vercelRequestContextAttrs","getVercelRequestContextAttributes","promise","resolve","timer","spanProcessor","sampled","rootObj","resourceAttributes","getResourceAttributes","openSpan","i","pending","SPAN_KIND_NAME","kind","attributes","operationName","resourceName","spanTypeAttr","nextSpanType","httpMethod","httpRoute","resourceNameResolved","libraryName","spanType","nextOperationName","toOperationName","name","cleanLibraryName","import_trace","import_OTLPExporterBase","init_api","OTLPExporterEdgeBase","config","items","onSuccess","onError","serviceRequest","body","contentType","headers","e","promise","res","err","index","_config","DEFAULT_COLLECTOR_RESOURCE_PATH","DEFAULT_COLLECTOR_URL","getDefaultUrl","config","OTLPHttpJsonTraceExporter","config","Impl","spans","resultCallback","OTLPExporterEdgeBase","serviceRequest","getDefaultUrl","import_trace","import_minimal","encodeTraceServiceRequest","message","writer","ExportTraceServiceRequest_encode","i","ResourceSpans_encode","Resource_encode","ScopeSpans_encode","KeyValue_encode","InstrumentationScope_encode","Span_encode","AnyValue_encode","ArrayValue_encode","KeyValueList_encode","Event_encode","Link_encode","Status_encode","OTLPHttpProtoTraceExporter","config","Impl","spans","resultCallback","OTLPExporterEdgeBase","serviceRequest","encodeTraceServiceRequest","getDefaultUrl","init_api","import_semantic_conventions","resolveTemplate","template","attrs","match","key","value","FetchInstrumentation","config","tracerProvider","tracer","ignoreUrls","shouldIgnore","url","init","urlString","match","host","branchHost","propagateContextUrls","dontPropagateContextUrls","resourceNameTemplate","attributesFromRequestHeaders","attributesFromResponseHeaders","shouldPropagate","getVercelRequestContext","originalFetch","doFetch","input","initArg","req","attrs","resourceName","resolveTemplate","removeSearch","spanName","parentContext","span","isSampled","fetchContext","traceApi","HEADERS_SETTER","headersToAttributes","startTime","res","duration","onError","pipeResponse","byteLength","err","e","carrier","key","value","index","length","reader","read","done","message","attrsToHeadersMap","headers","attrName","headerName","headerValue","init_api","import_core","VERSION","TRACE_PARENT_HEADER","TRACE_STATE_HEADER","W3CTraceContextPropagator","context","carrier","setter","spanContext","traceApi","traceParent","getter","traceParentHeader","parseTraceParent","traceStateHeader","state","version","traceId","spanId","traceFlags","other","init_api","VercelRuntimePropagator","context","vrc","getVercelRequestContext","rootSpanContext","tracing","init_api","import_core","import_core","NANOSECONDS","hrTimeToNanos","hrTime","toLongBits","value","low","high","encodeAsLongBits","nanos","encodeAsString","encodeTimestamp","identity","optionalHexToBase64","str","DEFAULT_ENCODER","getOtlpEncoder","options","useLongBits","_a","useHex","_b","toAttributes","attributes","key","toKeyValue","value","toAnyValue","t","_a","_b","__read","k","v","sdkSpanToOtlpSpan","span","encoder","ctx","status","_a","toAttributes","event","toOtlpSpanEvent","link","toOtlpLink","timedEvent","createExportTraceServiceRequest","spans","options","encoder","getOtlpEncoder","spanRecordsToResourceSpans","createResourceMap","readableSpans","resourceMap","readableSpans_1","__values","readableSpans_1_1","record","ilmMap","instrumentationLibraryKey","records","out","entryIterator","entry","_a","__read","resource","scopeResourceSpans","ilmIterator","ilmEntry","scopeSpans","_b","name_1","version","schemaUrl","readableSpan","sdkSpanToOtlpSpan","transformedSpans","toAttributes","VercelRuntimeSpanExporter","spans","resultCallback","context","getVercelRequestContext","data","createExportTraceServiceRequest","e","logLevelMap","Sdk","configuration","env","getEnv","runtime","disabled","idGenerator","RandomIdGenerator","contextManager","serviceName","resource","Resource","omitUndefinedAttributes","resourceDetectors","envDetectorSync","internalConfig","detectResourcesSync","propagators","parsePropagators","traceSampler","parseSampler","spanProcessors","parseSpanProcessor","spanLimits","tracerProvider","BasicTracerProvider","CompositeSpanProcessor","loggerProvider","LoggerProvider","meterProvider","MeterProvider","instrumentations","parseInstrumentations","promises","disableInstrumentations","processEnv","arg","instrumentationConfig","instrumentationOrName","FetchInstrumentation","envPropagators","propagatorOrName","autoList","W3CTraceContextPropagator","i","VercelRuntimePropagator","FALLBACK_OTEL_TRACES_SAMPLER","DEFAULT_RATIO","name","AlwaysOnSampler","AlwaysOffSampler","ParentBasedSampler","TraceIdRatioBasedSampler","getSamplerProbabilityFromEnv","probability","spanProcessorOrName","port","protocol","config","exporter","OTLPHttpProtoTraceExporter","OTLPHttpJsonTraceExporter","BatchSpanProcessor","parseTraceExporter","VercelRuntimeSpanExporter","isNotNull","url","buildExporterUrlFromEnv","headers","DEFAULT_COLLECTOR_RESOURCE_PATH","DEFAULT_COLLECTOR_URL","defaultUrlFromEnv","defaultUrlFromEnvAll","x","registerOTel","optionsOrServiceName","options","Sdk"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147]}},
    {"offset": {"line": 9419, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9424, "column": 0}, "map": {"version":3,"file":"AbstractAsyncHooksContextManager.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/context-async-hooks/src/AbstractAsyncHooksContextManager.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContextManager, Context } from '@opentelemetry/api';\nimport { EventEmitter } from 'events';\n\ntype Func<T> = (...args: unknown[]) => T;\n\n/**\n * Store a map for each event of all original listeners and their \"patched\"\n * version. So when a listener is removed by the user, the corresponding\n * patched function will be also removed.\n */\ninterface PatchMap {\n  [name: string]: WeakMap<Func<void>, Func<void>>;\n}\n\nconst ADD_LISTENER_METHODS = [\n  'addListener' as const,\n  'on' as const,\n  'once' as const,\n  'prependListener' as const,\n  'prependOnceListener' as const,\n];\n\nexport abstract class AbstractAsyncHooksContextManager\n  implements ContextManager\n{\n  abstract active(): Context;\n\n  abstract with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    context: Context,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F>;\n\n  abstract enable(): this;\n\n  abstract disable(): this;\n\n  /**\n   * Binds a the certain context or the active one to the target function and then returns the target\n   * @param context A context (span) to be bind to target\n   * @param target a function or event emitter. When target or one of its callbacks is called,\n   *  the provided context will be used as the active context for the duration of the call.\n   */\n  bind<T>(context: Context, target: T): T {\n    if (target instanceof EventEmitter) {\n      return this._bindEventEmitter(context, target);\n    }\n\n    if (typeof target === 'function') {\n      return this._bindFunction(context, target);\n    }\n    return target;\n  }\n\n  private _bindFunction<T extends Function>(context: Context, target: T): T {\n    const manager = this;\n    const contextWrapper = function (this: never, ...args: unknown[]) {\n      return manager.with(context, () => target.apply(this, args));\n    };\n    Object.defineProperty(contextWrapper, 'length', {\n      enumerable: false,\n      configurable: true,\n      writable: false,\n      value: target.length,\n    });\n    /**\n     * It isn't possible to tell Typescript that contextWrapper is the same as T\n     * so we forced to cast as any here.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return contextWrapper as any;\n  }\n\n  /**\n   * By default, EventEmitter call their callback with their context, which we do\n   * not want, instead we will bind a specific context to all callbacks that\n   * go through it.\n   * @param context the context we want to bind\n   * @param ee EventEmitter an instance of EventEmitter to patch\n   */\n  private _bindEventEmitter<T extends EventEmitter>(\n    context: Context,\n    ee: T\n  ): T {\n    const map = this._getPatchMap(ee);\n    if (map !== undefined) return ee;\n    this._createPatchMap(ee);\n\n    // patch methods that add a listener to propagate context\n    ADD_LISTENER_METHODS.forEach(methodName => {\n      if (ee[methodName] === undefined) return;\n      ee[methodName] = this._patchAddListener(ee, ee[methodName], context);\n    });\n    // patch methods that remove a listener\n    if (typeof ee.removeListener === 'function') {\n      ee.removeListener = this._patchRemoveListener(ee, ee.removeListener);\n    }\n    if (typeof ee.off === 'function') {\n      ee.off = this._patchRemoveListener(ee, ee.off);\n    }\n    // patch method that remove all listeners\n    if (typeof ee.removeAllListeners === 'function') {\n      ee.removeAllListeners = this._patchRemoveAllListeners(\n        ee,\n        ee.removeAllListeners\n      );\n    }\n    return ee;\n  }\n\n  /**\n   * Patch methods that remove a given listener so that we match the \"patched\"\n   * version of that listener (the one that propagate context).\n   * @param ee EventEmitter instance\n   * @param original reference to the patched method\n   */\n  private _patchRemoveListener(ee: EventEmitter, original: Function) {\n    const contextManager = this;\n    return function (this: never, event: string, listener: Func<void>) {\n      const events = contextManager._getPatchMap(ee)?.[event];\n      if (events === undefined) {\n        return original.call(this, event, listener);\n      }\n      const patchedListener = events.get(listener);\n      return original.call(this, event, patchedListener || listener);\n    };\n  }\n\n  /**\n   * Patch methods that remove all listeners so we remove our\n   * internal references for a given event.\n   * @param ee EventEmitter instance\n   * @param original reference to the patched method\n   */\n  private _patchRemoveAllListeners(ee: EventEmitter, original: Function) {\n    const contextManager = this;\n    return function (this: never, event: string) {\n      const map = contextManager._getPatchMap(ee);\n      if (map !== undefined) {\n        if (arguments.length === 0) {\n          contextManager._createPatchMap(ee);\n        } else if (map[event] !== undefined) {\n          delete map[event];\n        }\n      }\n      return original.apply(this, arguments);\n    };\n  }\n\n  /**\n   * Patch methods on an event emitter instance that can add listeners so we\n   * can force them to propagate a given context.\n   * @param ee EventEmitter instance\n   * @param original reference to the patched method\n   * @param [context] context to propagate when calling listeners\n   */\n  private _patchAddListener(\n    ee: EventEmitter,\n    original: Function,\n    context: Context\n  ) {\n    const contextManager = this;\n    return function (this: never, event: string, listener: Func<void>) {\n      /**\n       * This check is required to prevent double-wrapping the listener.\n       * The implementation for ee.once wraps the listener and calls ee.on.\n       * Without this check, we would wrap that wrapped listener.\n       * This causes an issue because ee.removeListener depends on the onceWrapper\n       * to properly remove the listener. If we wrap their wrapper, we break\n       * that detection.\n       */\n      if (contextManager._wrapped) {\n        return original.call(this, event, listener);\n      }\n      let map = contextManager._getPatchMap(ee);\n      if (map === undefined) {\n        map = contextManager._createPatchMap(ee);\n      }\n      let listeners = map[event];\n      if (listeners === undefined) {\n        listeners = new WeakMap();\n        map[event] = listeners;\n      }\n      const patchedListener = contextManager.bind(context, listener);\n      // store a weak reference of the user listener to ours\n      listeners.set(listener, patchedListener);\n\n      /**\n       * See comment at the start of this function for the explanation of this property.\n       */\n      contextManager._wrapped = true;\n      try {\n        return original.call(this, event, patchedListener);\n      } finally {\n        contextManager._wrapped = false;\n      }\n    };\n  }\n\n  private _createPatchMap(ee: EventEmitter): PatchMap {\n    const map = Object.create(null);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (ee as any)[this._kOtListeners] = map;\n    return map;\n  }\n  private _getPatchMap(ee: EventEmitter): PatchMap | undefined {\n    return (ee as never)[this._kOtListeners];\n  }\n\n  private readonly _kOtListeners = Symbol('OtListeners');\n  private _wrapped = false;\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAGH,MAAA,6BAAsC;AAatC,MAAM,oBAAoB,GAAG;IAC3B,aAAsB;IACtB,IAAa;IACb,MAAe;IACf,iBAA0B;IAC1B,qBAA8B;CAC/B,CAAC;AAEF,MAAsB,gCAAgC;IAAtD,aAAA;QA4LmB,IAAA,CAAA,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;QAC/C,IAAA,CAAA,QAAQ,GAAG,KAAK,CAAC;IAC3B,CAAC;IA9KC;;;;;OAKG,CACH,IAAI,CAAI,OAAgB,EAAE,MAAS,EAAA;QACjC,IAAI,MAAM,YAAY,SAAA,YAAY,EAAE;YAClC,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;SAChD;QAED,IAAI,OAAO,MAAM,KAAK,UAAU,EAAE;YAChC,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;SAC5C;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAEO,aAAa,CAAqB,OAAgB,EAAE,MAAS,EAAA;QACnE,MAAM,OAAO,GAAG,IAAI,CAAC;QACrB,MAAM,cAAc,GAAG,SAAuB,GAAG,IAAe;YAC9D,OAAO,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAG,CAAD,KAAO,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;QAC/D,CAAC,CAAC;QACF,MAAM,CAAC,cAAc,CAAC,cAAc,EAAE,QAAQ,EAAE;YAC9C,UAAU,EAAE,KAAK;YACjB,YAAY,EAAE,IAAI;YAClB,QAAQ,EAAE,KAAK;YACf,KAAK,EAAE,MAAM,CAAC,MAAM;SACrB,CAAC,CAAC;QACH;;;WAGG,CACH,8DAA8D;QAC9D,OAAO,cAAqB,CAAC;IAC/B,CAAC;IAED;;;;;;OAMG,CACK,iBAAiB,CACvB,OAAgB,EAChB,EAAK,EAAA;QAEL,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;QAClC,IAAI,GAAG,KAAK,SAAS,EAAE,OAAO,EAAE,CAAC;QACjC,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;QAEzB,yDAAyD;QACzD,oBAAoB,CAAC,OAAO,EAAC,UAAU,CAAC,EAAE;YACxC,IAAI,EAAE,CAAC,UAAU,CAAC,KAAK,SAAS,EAAE,OAAO;YACzC,EAAE,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,EAAE,EAAE,EAAE,CAAC,UAAU,CAAC,EAAE,OAAO,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC;QACH,uCAAuC;QACvC,IAAI,OAAO,EAAE,CAAC,cAAc,KAAK,UAAU,EAAE;YAC3C,EAAE,CAAC,cAAc,GAAG,IAAI,CAAC,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAAC,cAAc,CAAC,CAAC;SACtE;QACD,IAAI,OAAO,EAAE,CAAC,GAAG,KAAK,UAAU,EAAE;YAChC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;SAChD;QACD,yCAAyC;QACzC,IAAI,OAAO,EAAE,CAAC,kBAAkB,KAAK,UAAU,EAAE;YAC/C,EAAE,CAAC,kBAAkB,GAAG,IAAI,CAAC,wBAAwB,CACnD,EAAE,EACF,EAAE,CAAC,kBAAkB,CACtB,CAAC;SACH;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;IAED;;;;;OAKG,CACK,oBAAoB,CAAC,EAAgB,EAAE,QAAkB,EAAA;QAC/D,MAAM,cAAc,GAAG,IAAI,CAAC;QAC5B,OAAO,SAAuB,KAAa,EAAE,QAAoB;;YAC/D,MAAM,MAAM,GAAG,CAAA,KAAA,cAAc,CAAC,YAAY,CAAC,EAAE,CAAC,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,EAAA,CAAG,KAAK,CAAC,CAAC;YACxD,IAAI,MAAM,KAAK,SAAS,EAAE;gBACxB,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;aAC7C;YACD,MAAM,eAAe,GAAG,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC7C,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,eAAe,IAAI,QAAQ,CAAC,CAAC;QACjE,CAAC,CAAC;IACJ,CAAC;IAED;;;;;OAKG,CACK,wBAAwB,CAAC,EAAgB,EAAE,QAAkB,EAAA;QACnE,MAAM,cAAc,GAAG,IAAI,CAAC;QAC5B,OAAO,SAAuB,KAAa;YACzC,MAAM,GAAG,GAAG,cAAc,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;YAC5C,IAAI,GAAG,KAAK,SAAS,EAAE;gBACrB,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC1B,cAAc,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;iBACpC,MAAM,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,SAAS,EAAE;oBACnC,OAAO,GAAG,CAAC,KAAK,CAAC,CAAC;iBACnB;aACF;YACD,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACzC,CAAC,CAAC;IACJ,CAAC;IAED;;;;;;OAMG,CACK,iBAAiB,CACvB,EAAgB,EAChB,QAAkB,EAClB,OAAgB,EAAA;QAEhB,MAAM,cAAc,GAAG,IAAI,CAAC;QAC5B,OAAO,SAAuB,KAAa,EAAE,QAAoB;YAC/D;;;;;;;eAOG,CACH,IAAI,cAAc,CAAC,QAAQ,EAAE;gBAC3B,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;aAC7C;YACD,IAAI,GAAG,GAAG,cAAc,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;YAC1C,IAAI,GAAG,KAAK,SAAS,EAAE;gBACrB,GAAG,GAAG,cAAc,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;aAC1C;YACD,IAAI,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;YAC3B,IAAI,SAAS,KAAK,SAAS,EAAE;gBAC3B,SAAS,GAAG,IAAI,OAAO,EAAE,CAAC;gBAC1B,GAAG,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;aACxB;YACD,MAAM,eAAe,GAAG,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;YAC/D,sDAAsD;YACtD,SAAS,CAAC,GAAG,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;YAEzC;;eAEG,CACH,cAAc,CAAC,QAAQ,GAAG,IAAI,CAAC;YAC/B,IAAI;gBACF,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,eAAe,CAAC,CAAC;aACpD,QAAS;gBACR,cAAc,CAAC,QAAQ,GAAG,KAAK,CAAC;aACjC;QACH,CAAC,CAAC;IACJ,CAAC;IAEO,eAAe,CAAC,EAAgB,EAAA;QACtC,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAChC,8DAA8D;QAC7D,EAAU,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,GAAG,CAAC;QACtC,OAAO,GAAG,CAAC;IACb,CAAC;IACO,YAAY,CAAC,EAAgB,EAAA;QACnC,OAAQ,EAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC3C,CAAC;CAIF;AA9LD,QAAA,gCAAA,GAAA,iCA8LC","ignoreList":[0]}},
    {"offset": {"line": 9603, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9608, "column": 0}, "map": {"version":3,"file":"AsyncHooksContextManager.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/context-async-hooks/src/AsyncHooksContextManager.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, ROOT_CONTEXT } from '@opentelemetry/api';\nimport * as asyncHooks from 'async_hooks';\nimport { AbstractAsyncHooksContextManager } from './AbstractAsyncHooksContextManager';\n\nexport class AsyncHooksContextManager extends AbstractAsyncHooksContextManager {\n  private _asyncHook: asyncHooks.AsyncHook;\n  private _contexts: Map<number, Context> = new Map();\n  private _stack: Array<Context | undefined> = [];\n\n  constructor() {\n    super();\n    this._asyncHook = asyncHooks.createHook({\n      init: this._init.bind(this),\n      before: this._before.bind(this),\n      after: this._after.bind(this),\n      destroy: this._destroy.bind(this),\n      promiseResolve: this._destroy.bind(this),\n    });\n  }\n\n  active(): Context {\n    return this._stack[this._stack.length - 1] ?? ROOT_CONTEXT;\n  }\n\n  with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    context: Context,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F> {\n    this._enterContext(context);\n    try {\n      return fn.call(thisArg!, ...args);\n    } finally {\n      this._exitContext();\n    }\n  }\n\n  enable(): this {\n    this._asyncHook.enable();\n    return this;\n  }\n\n  disable(): this {\n    this._asyncHook.disable();\n    this._contexts.clear();\n    this._stack = [];\n    return this;\n  }\n\n  /**\n   * Init hook will be called when userland create a async context, setting the\n   * context as the current one if it exist.\n   * @param uid id of the async context\n   * @param type the resource type\n   */\n  private _init(uid: number, type: string) {\n    // ignore TIMERWRAP as they combine timers with same timeout which can lead to\n    // false context propagation. TIMERWRAP has been removed in node 11\n    // every timer has it's own `Timeout` resource anyway which is used to propagate\n    // context.\n    if (type === 'TIMERWRAP') return;\n\n    const context = this._stack[this._stack.length - 1];\n    if (context !== undefined) {\n      this._contexts.set(uid, context);\n    }\n  }\n\n  /**\n   * Destroy hook will be called when a given context is no longer used so we can\n   * remove its attached context.\n   * @param uid uid of the async context\n   */\n  private _destroy(uid: number) {\n    this._contexts.delete(uid);\n  }\n\n  /**\n   * Before hook is called just before executing a async context.\n   * @param uid uid of the async context\n   */\n  private _before(uid: number) {\n    const context = this._contexts.get(uid);\n    if (context !== undefined) {\n      this._enterContext(context);\n    }\n  }\n\n  /**\n   * After hook is called just after completing the execution of a async context.\n   */\n  private _after() {\n    this._exitContext();\n  }\n\n  /**\n   * Set the given context as active\n   */\n  private _enterContext(context: Context) {\n    this._stack.push(context);\n  }\n\n  /**\n   * Remove the context at the root of the stack\n   */\n  private _exitContext() {\n    this._stack.pop();\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9714, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9719, "column": 0}, "map": {"version":3,"file":"AsyncLocalStorageContextManager.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/context-async-hooks/src/AsyncLocalStorageContextManager.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, ROOT_CONTEXT } from '@opentelemetry/api';\nimport { AsyncLocalStorage } from 'async_hooks';\nimport { AbstractAsyncHooksContextManager } from './AbstractAsyncHooksContextManager';\n\nexport class AsyncLocalStorageContextManager extends AbstractAsyncHooksContextManager {\n  private _asyncLocalStorage: AsyncLocalStorage<Context>;\n\n  constructor() {\n    super();\n    this._asyncLocalStorage = new AsyncLocalStorage();\n  }\n\n  active(): Context {\n    return this._asyncLocalStorage.getStore() ?? ROOT_CONTEXT;\n  }\n\n  with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    context: Context,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F> {\n    const cb = thisArg == null ? fn : fn.bind(thisArg);\n    return this._asyncLocalStorage.run(context, cb as never, ...args);\n  }\n\n  enable(): this {\n    return this;\n  }\n\n  disable(): this {\n    this._asyncLocalStorage.disable();\n    return this;\n  }\n}\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,MAAA,sCAA2D;AAC3D,MAAA,uCAAgD;AAChD,MAAA,mFAAsF;AAEtF,MAAa,+BAAgC,SAAQ,mCAAA,gCAAgC;IAGnF,aAAA;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,kBAAkB,GAAG,IAAI,cAAA,iBAAiB,EAAE,CAAC;IACpD,CAAC;IAED,MAAM,GAAA;;QACJ,OAAO,CAAA,KAAA,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,MAAA,YAAY,CAAC;IAC5D,CAAC;IAED,IAAI,CACF,OAAgB,EAChB,EAAK,EACL,OAA8B,EAC9B,GAAG,IAAO,EAAA;QAEV,MAAM,EAAE,GAAG,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,OAAO,EAAE,EAAW,EAAE,GAAG,IAAI,CAAC,CAAC;IACpE,CAAC;IAED,MAAM,GAAA;QACJ,OAAO,IAAI,CAAC;IACd,CAAC;IAED,OAAO,GAAA;QACL,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;QAClC,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AA9BD,QAAA,+BAAA,GAAA,gCA8BC","ignoreList":[0]}},
    {"offset": {"line": 9763, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9768, "column": 0}, "map": {"version":3,"file":"index.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/context-async-hooks/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { AsyncHooksContextManager } from './AsyncHooksContextManager';\nexport { AsyncLocalStorageContextManager } from './AsyncLocalStorageContextManager';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,IAAA,mEAAsE;AAA7D,OAAA,cAAA,CAAA,SAAA,4BAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,2BAAA,wBAAwB;IAAA;AAAA,GAAA;AACjC,IAAA,iFAAoF;AAA3E,OAAA,cAAA,CAAA,SAAA,mCAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,kCAAA,+BAA+B;IAAA;AAAA,GAAA","ignoreList":[0]}},
    {"offset": {"line": 9801, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9807, "column": 0}, "map": {"version":3,"file":"index.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/propagator-b3/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { B3Propagator } from './B3Propagator';\nexport {\n  B3_CONTEXT_HEADER,\n  X_B3_FLAGS,\n  X_B3_PARENT_SPAN_ID,\n  X_B3_SAMPLED,\n  X_B3_SPAN_ID,\n  X_B3_TRACE_ID,\n} from './constants';\nexport { B3InjectEncoding, B3PropagatorConfig } from './types';\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0]}},
    {"offset": {"line": 9826, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9840, "column": 0}, "map": {"version":3,"file":"types.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/propagator-b3/src/types.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Enumeration of B3 inject encodings */\nexport enum B3InjectEncoding {\n  SINGLE_HEADER,\n  MULTI_HEADER,\n}\n\n/** Configuration for the B3Propagator */\nexport interface B3PropagatorConfig {\n  injectEncoding?: B3InjectEncoding;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG,CAEH,uCAAA,EAAyC;;;AACzC,IAAY,gBAGX;AAHD,CAAA,SAAY,gBAAgB;IAC1B,gBAAA,CAAA,gBAAA,CAAA,gBAAA,GAAA,EAAA,GAAA,eAAa,CAAA;IACb,gBAAA,CAAA,gBAAA,CAAA,eAAA,GAAA,EAAA,GAAA,cAAY,CAAA;AACd,CAAC,EAHW,gBAAgB,IAAA,CAAhB,gBAAgB,GAAA,CAAA,CAAA,GAG3B","ignoreList":[0]}},
    {"offset": {"line": 9862, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9868, "column": 0}, "map": {"version":3,"file":"suppress-tracing.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/core/src/trace/suppress-tracing.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, createContextKey } from '@opentelemetry/api';\n\nconst SUPPRESS_TRACING_KEY = createContextKey(\n  'OpenTelemetry SDK Context Key SUPPRESS_TRACING'\n);\n\nexport function suppressTracing(context: Context): Context {\n  return context.setValue(SUPPRESS_TRACING_KEY, true);\n}\n\nexport function unsuppressTracing(context: Context): Context {\n  return context.deleteValue(SUPPRESS_TRACING_KEY);\n}\n\nexport function isTracingSuppressed(context: Context): boolean {\n  return context.getValue(SUPPRESS_TRACING_KEY) === true;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;;;AAEH,OAAO,EAAW,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;;AAE/D,IAAM,oBAAoB,wLAAG,mBAAA,AAAgB,EAC3C,gDAAgD,CACjD,CAAC;AAEI,SAAU,eAAe,CAAC,OAAgB;IAC9C,OAAO,OAAO,CAAC,QAAQ,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;AACtD,CAAC;AAEK,SAAU,iBAAiB,CAAC,OAAgB;IAChD,OAAO,OAAO,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAC;AACnD,CAAC;AAEK,SAAU,mBAAmB,CAAC,OAAgB;IAClD,OAAO,OAAO,CAAC,QAAQ,CAAC,oBAAoB,CAAC,KAAK,IAAI,CAAC;AACzD,CAAC","ignoreList":[0]}},
    {"offset": {"line": 9899, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9905, "column": 0}, "map": {"version":3,"file":"constants.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/propagator-b3/src/constants.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** B3 single-header key */\nexport const B3_CONTEXT_HEADER = 'b3';\n\n/* b3 multi-header keys */\nexport const X_B3_TRACE_ID = 'x-b3-traceid';\nexport const X_B3_SPAN_ID = 'x-b3-spanid';\nexport const X_B3_SAMPLED = 'x-b3-sampled';\nexport const X_B3_PARENT_SPAN_ID = 'x-b3-parentspanid';\nexport const X_B3_FLAGS = 'x-b3-flags';\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG,CAEH,yBAAA,EAA2B;;;;;;;;AACpB,IAAM,iBAAiB,GAAG,IAAI,CAAC;AAG/B,IAAM,aAAa,GAAG,cAAc,CAAC;AACrC,IAAM,YAAY,GAAG,aAAa,CAAC;AACnC,IAAM,YAAY,GAAG,cAAc,CAAC;AACpC,IAAM,mBAAmB,GAAG,mBAAmB,CAAC;AAChD,IAAM,UAAU,GAAG,YAAY,CAAC","ignoreList":[0]}},
    {"offset": {"line": 9933, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9939, "column": 0}, "map": {"version":3,"file":"common.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/propagator-b3/src/common.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createContextKey } from '@opentelemetry/api';\n\n/** shared context for storing an extracted b3 debug flag */\nexport const B3_DEBUG_FLAG_KEY = createContextKey(\n  'OpenTelemetry Context Key B3 Debug Flag'\n);\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAEH,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;;AAG/C,IAAM,iBAAiB,wLAAG,mBAAA,AAAgB,EAC/C,yCAAyC,CAC1C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 9959, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9965, "column": 0}, "map": {"version":3,"file":"B3MultiPropagator.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/propagator-b3/src/B3MultiPropagator.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  isSpanContextValid,\n  isValidSpanId,\n  isValidTraceId,\n  trace,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n  TraceFlags,\n} from '@opentelemetry/api';\nimport { isTracingSuppressed } from '@opentelemetry/core';\nimport { B3_DEBUG_FLAG_KEY } from './common';\nimport {\n  X_B3_FLAGS,\n  X_B3_PARENT_SPAN_ID,\n  X_B3_SAMPLED,\n  X_B3_SPAN_ID,\n  X_B3_TRACE_ID,\n} from './constants';\n\nconst VALID_SAMPLED_VALUES = new Set([true, 'true', 'True', '1', 1]);\nconst VALID_UNSAMPLED_VALUES = new Set([false, 'false', 'False', '0', 0]);\n\nfunction isValidSampledValue(sampled: TraceFlags | undefined): boolean {\n  return sampled === TraceFlags.SAMPLED || sampled === TraceFlags.NONE;\n}\n\nfunction parseHeader(header: unknown) {\n  return Array.isArray(header) ? header[0] : header;\n}\n\nfunction getHeaderValue(carrier: unknown, getter: TextMapGetter, key: string) {\n  const header = getter.get(carrier, key);\n  return parseHeader(header);\n}\n\nfunction getTraceId(carrier: unknown, getter: TextMapGetter): string {\n  const traceId = getHeaderValue(carrier, getter, X_B3_TRACE_ID);\n  if (typeof traceId === 'string') {\n    return traceId.padStart(32, '0');\n  }\n  return '';\n}\n\nfunction getSpanId(carrier: unknown, getter: TextMapGetter): string {\n  const spanId = getHeaderValue(carrier, getter, X_B3_SPAN_ID);\n  if (typeof spanId === 'string') {\n    return spanId;\n  }\n  return '';\n}\n\nfunction getDebug(carrier: unknown, getter: TextMapGetter): string | undefined {\n  const debug = getHeaderValue(carrier, getter, X_B3_FLAGS);\n  return debug === '1' ? '1' : undefined;\n}\n\nfunction getTraceFlags(\n  carrier: unknown,\n  getter: TextMapGetter\n): TraceFlags | undefined {\n  const traceFlags = getHeaderValue(carrier, getter, X_B3_SAMPLED);\n  const debug = getDebug(carrier, getter);\n  if (debug === '1' || VALID_SAMPLED_VALUES.has(traceFlags)) {\n    return TraceFlags.SAMPLED;\n  }\n  if (traceFlags === undefined || VALID_UNSAMPLED_VALUES.has(traceFlags)) {\n    return TraceFlags.NONE;\n  }\n  // This indicates to isValidSampledValue that this is not valid\n  return;\n}\n\n/**\n * Propagator for the B3 multiple-header HTTP format.\n * Based on: https://github.com/openzipkin/b3-propagation\n */\nexport class B3MultiPropagator implements TextMapPropagator {\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    const spanContext = trace.getSpanContext(context);\n    if (\n      !spanContext ||\n      !isSpanContextValid(spanContext) ||\n      isTracingSuppressed(context)\n    )\n      return;\n\n    const debug = context.getValue(B3_DEBUG_FLAG_KEY);\n    setter.set(carrier, X_B3_TRACE_ID, spanContext.traceId);\n    setter.set(carrier, X_B3_SPAN_ID, spanContext.spanId);\n    // According to the B3 spec, if the debug flag is set,\n    // the sampled flag shouldn't be propagated as well.\n    if (debug === '1') {\n      setter.set(carrier, X_B3_FLAGS, debug);\n    } else if (spanContext.traceFlags !== undefined) {\n      // We set the header only if there is an existing sampling decision.\n      // Otherwise we will omit it => Absent.\n      setter.set(\n        carrier,\n        X_B3_SAMPLED,\n        (TraceFlags.SAMPLED & spanContext.traceFlags) === TraceFlags.SAMPLED\n          ? '1'\n          : '0'\n      );\n    }\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const traceId = getTraceId(carrier, getter);\n    const spanId = getSpanId(carrier, getter);\n    const traceFlags = getTraceFlags(carrier, getter) as TraceFlags;\n    const debug = getDebug(carrier, getter);\n\n    if (\n      isValidTraceId(traceId) &&\n      isValidSpanId(spanId) &&\n      isValidSampledValue(traceFlags)\n    ) {\n      context = context.setValue(B3_DEBUG_FLAG_KEY, debug);\n      return trace.setSpanContext(context, {\n        traceId,\n        spanId,\n        isRemote: true,\n        traceFlags,\n      });\n    }\n    return context;\n  }\n\n  fields(): string[] {\n    return [\n      X_B3_TRACE_ID,\n      X_B3_SPAN_ID,\n      X_B3_FLAGS,\n      X_B3_SAMPLED,\n      X_B3_PARENT_SPAN_ID,\n    ];\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 10094, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10100, "column": 0}, "map": {"version":3,"file":"B3SinglePropagator.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/propagator-b3/src/B3SinglePropagator.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  isSpanContextValid,\n  isValidSpanId,\n  isValidTraceId,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n  trace,\n  TraceFlags,\n} from '@opentelemetry/api';\nimport { isTracingSuppressed } from '@opentelemetry/core';\nimport { B3_DEBUG_FLAG_KEY } from './common';\nimport { B3_CONTEXT_HEADER } from './constants';\n\nconst B3_CONTEXT_REGEX =\n  /((?:[0-9a-f]{16}){1,2})-([0-9a-f]{16})(?:-([01d](?![0-9a-f])))?(?:-([0-9a-f]{16}))?/;\nconst PADDING = '0'.repeat(16);\nconst SAMPLED_VALUES = new Set(['d', '1']);\nconst DEBUG_STATE = 'd';\n\nfunction convertToTraceId128(traceId: string): string {\n  return traceId.length === 32 ? traceId : `${PADDING}${traceId}`;\n}\n\nfunction convertToTraceFlags(samplingState: string | undefined): TraceFlags {\n  if (samplingState && SAMPLED_VALUES.has(samplingState)) {\n    return TraceFlags.SAMPLED;\n  }\n  return TraceFlags.NONE;\n}\n\n/**\n * Propagator for the B3 single-header HTTP format.\n * Based on: https://github.com/openzipkin/b3-propagation\n */\nexport class B3SinglePropagator implements TextMapPropagator {\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    const spanContext = trace.getSpanContext(context);\n    if (\n      !spanContext ||\n      !isSpanContextValid(spanContext) ||\n      isTracingSuppressed(context)\n    )\n      return;\n\n    const samplingState =\n      context.getValue(B3_DEBUG_FLAG_KEY) || spanContext.traceFlags & 0x1;\n    const value = `${spanContext.traceId}-${spanContext.spanId}-${samplingState}`;\n    setter.set(carrier, B3_CONTEXT_HEADER, value);\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const header = getter.get(carrier, B3_CONTEXT_HEADER);\n    const b3Context = Array.isArray(header) ? header[0] : header;\n    if (typeof b3Context !== 'string') return context;\n\n    const match = b3Context.match(B3_CONTEXT_REGEX);\n    if (!match) return context;\n\n    const [, extractedTraceId, spanId, samplingState] = match;\n    const traceId = convertToTraceId128(extractedTraceId);\n\n    if (!isValidTraceId(traceId) || !isValidSpanId(spanId)) return context;\n\n    const traceFlags = convertToTraceFlags(samplingState);\n\n    if (samplingState === DEBUG_STATE) {\n      context = context.setValue(B3_DEBUG_FLAG_KEY, samplingState);\n    }\n\n    return trace.setSpanContext(context, {\n      traceId,\n      spanId,\n      isRemote: true,\n      traceFlags,\n    });\n  }\n\n  fields(): string[] {\n    return [B3_CONTEXT_HEADER];\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 10201, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10207, "column": 0}, "map": {"version":3,"file":"B3Propagator.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/propagator-b3/src/B3Propagator.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n} from '@opentelemetry/api';\nimport { isTracingSuppressed } from '@opentelemetry/core';\nimport { B3MultiPropagator } from './B3MultiPropagator';\nimport { B3SinglePropagator } from './B3SinglePropagator';\nimport { B3_CONTEXT_HEADER } from './constants';\nimport { B3InjectEncoding, B3PropagatorConfig } from './types';\n\n/**\n * Propagator that extracts B3 context in both single and multi-header variants,\n * with configurable injection format defaulting to B3 single-header. Due to\n * the asymmetry in injection and extraction formats this is not suitable to\n * be implemented as a composite propagator.\n * Based on: https://github.com/openzipkin/b3-propagation\n */\nexport class B3Propagator implements TextMapPropagator {\n  private readonly _b3MultiPropagator: B3MultiPropagator =\n    new B3MultiPropagator();\n  private readonly _b3SinglePropagator: B3SinglePropagator =\n    new B3SinglePropagator();\n  private readonly _inject: (\n    context: Context,\n    carrier: unknown,\n    setter: TextMapSetter\n  ) => void;\n  public readonly _fields: string[];\n\n  constructor(config: B3PropagatorConfig = {}) {\n    if (config.injectEncoding === B3InjectEncoding.MULTI_HEADER) {\n      this._inject = this._b3MultiPropagator.inject;\n      this._fields = this._b3MultiPropagator.fields();\n    } else {\n      this._inject = this._b3SinglePropagator.inject;\n      this._fields = this._b3SinglePropagator.fields();\n    }\n  }\n\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    if (isTracingSuppressed(context)) {\n      return;\n    }\n    this._inject(context, carrier, setter);\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const header = getter.get(carrier, B3_CONTEXT_HEADER);\n    const b3Context = Array.isArray(header) ? header[0] : header;\n\n    if (b3Context) {\n      return this._b3SinglePropagator.extract(context, carrier, getter);\n    } else {\n      return this._b3MultiPropagator.extract(context, carrier, getter);\n    }\n  }\n\n  fields(): string[] {\n    return this._fields;\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAQH,OAAO,EAAE,mBAAmB,EAAE,MAAM,qBAAqB,CAAC;AAG1D,OAAO,EAAE,iBAAiB,EAAE,MAAM,aAAa,CAAC;AAFhD,OAAO,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AACxD,OAAO,EAAE,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AAE1D,OAAO,EAAE,gBAAgB,EAAsB,MAAM,SAAS,CAAC;;;;;;AAE/D;;;;;;GAMG,CACH,IAAA,eAAA;IAYE,SAAA,aAAY,MAA+B;QAA/B,IAAA,WAAA,KAAA,GAAA;YAAA,SAAA,CAAA,CAA+B;QAAA;QAX1B,IAAA,CAAA,kBAAkB,GACjC,6PAAI,oBAAiB,EAAE,CAAC;QACT,IAAA,CAAA,mBAAmB,GAClC,8PAAI,qBAAkB,EAAE,CAAC;QASzB,IAAI,MAAM,CAAC,cAAc,kPAAK,mBAAgB,CAAC,YAAY,EAAE;YAC3D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;YAC9C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC;SACjD,MAAM;YACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC;YAC/C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC;SAClD;IACH,CAAC;IAED,aAAA,SAAA,CAAA,MAAM,GAAN,SAAO,OAAgB,EAAE,OAAgB,EAAE,MAAqB;QAC9D,IAAI,kRAAA,AAAmB,EAAC,OAAO,CAAC,EAAE;YAChC,OAAO;SACR;QACD,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;IACzC,CAAC;IAED,aAAA,SAAA,CAAA,OAAO,GAAP,SAAQ,OAAgB,EAAE,OAAgB,EAAE,MAAqB;QAC/D,IAAM,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,mPAAE,oBAAiB,CAAC,CAAC;QACtD,IAAM,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAE7D,IAAI,SAAS,EAAE;YACb,OAAO,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;SACnE,MAAM;YACL,OAAO,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;SAClE;IACH,CAAC;IAED,aAAA,SAAA,CAAA,MAAM,GAAN;QACE,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IACH,OAAA,YAAC;AAAD,CAAC,AA3CD,IA2CC","ignoreList":[0]}},
    {"offset": {"line": 10277, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10321, "column": 0}, "map": {"version":3,"file":"index.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/sdk-trace-base/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { Tracer } from './Tracer';\nexport {\n  BasicTracerProvider,\n  EXPORTER_FACTORY,\n  ForceFlushState,\n  PROPAGATOR_FACTORY,\n} from './BasicTracerProvider';\nexport { BatchSpanProcessor, RandomIdGenerator } from './platform';\nexport { ConsoleSpanExporter } from './export/ConsoleSpanExporter';\nexport { InMemorySpanExporter } from './export/InMemorySpanExporter';\nexport { ReadableSpan } from './export/ReadableSpan';\nexport { SimpleSpanProcessor } from './export/SimpleSpanProcessor';\nexport { SpanExporter } from './export/SpanExporter';\nexport { NoopSpanProcessor } from './export/NoopSpanProcessor';\nexport { AlwaysOffSampler } from './sampler/AlwaysOffSampler';\nexport { AlwaysOnSampler } from './sampler/AlwaysOnSampler';\nexport { ParentBasedSampler } from './sampler/ParentBasedSampler';\nexport { TraceIdRatioBasedSampler } from './sampler/TraceIdRatioBasedSampler';\nexport { Sampler, SamplingDecision, SamplingResult } from './Sampler';\nexport { Span } from './Span';\nexport { SpanProcessor } from './SpanProcessor';\nexport { TimedEvent } from './TimedEvent';\nexport {\n  BatchSpanProcessorBrowserConfig,\n  BufferConfig,\n  GeneralLimits,\n  SDKRegistrationConfig,\n  SpanLimits,\n  TracerConfig,\n} from './types';\nexport { IdGenerator } from './IdGenerator';\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0]}},
    {"offset": {"line": 10350, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10364, "column": 0}, "map": {"version":3,"file":"Sampler.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/sdk-trace-base/src/Sampler.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  Link,\n  SpanAttributes,\n  SpanKind,\n  TraceState,\n} from '@opentelemetry/api';\n\n/**\n * A sampling decision that determines how a {@link Span} will be recorded\n * and collected.\n */\nexport enum SamplingDecision {\n  /**\n   * `Span.isRecording() === false`, span will not be recorded and all events\n   * and attributes will be dropped.\n   */\n  NOT_RECORD,\n  /**\n   * `Span.isRecording() === true`, but `Sampled` flag in {@link TraceFlags}\n   * MUST NOT be set.\n   */\n  RECORD,\n  /**\n   * `Span.isRecording() === true` AND `Sampled` flag in {@link TraceFlags}\n   * MUST be set.\n   */\n  RECORD_AND_SAMPLED,\n}\n\n/**\n * A sampling result contains a decision for a {@link Span} and additional\n * attributes the sampler would like to added to the Span.\n */\nexport interface SamplingResult {\n  /**\n   * A sampling decision, refer to {@link SamplingDecision} for details.\n   */\n  decision: SamplingDecision;\n  /**\n   * The list of attributes returned by SamplingResult MUST be immutable.\n   * Caller may call {@link Sampler}.shouldSample any number of times and\n   * can safely cache the returned value.\n   */\n  attributes?: Readonly<SpanAttributes>;\n  /**\n   * A {@link TraceState} that will be associated with the {@link Span} through\n   * the new {@link SpanContext}. Samplers SHOULD return the TraceState from\n   * the passed-in {@link Context} if they do not intend to change it. Leaving\n   * the value undefined will also leave the TraceState unchanged.\n   */\n  traceState?: TraceState;\n}\n\n/**\n * This interface represent a sampler. Sampling is a mechanism to control the\n * noise and overhead introduced by OpenTelemetry by reducing the number of\n * samples of traces collected and sent to the backend.\n */\nexport interface Sampler {\n  /**\n   * Checks whether span needs to be created and tracked.\n   *\n   * @param context Parent Context which may contain a span.\n   * @param traceId of the span to be created. It can be different from the\n   *     traceId in the {@link SpanContext}. Typically in situations when the\n   *     span to be created starts a new trace.\n   * @param spanName of the span to be created.\n   * @param spanKind of the span to be created.\n   * @param attributes Initial set of SpanAttributes for the Span being constructed.\n   * @param links Collection of links that will be associated with the Span to\n   *     be created. Typically useful for batch operations.\n   * @returns a {@link SamplingResult}.\n   */\n  shouldSample(\n    context: Context,\n    traceId: string,\n    spanName: string,\n    spanKind: SpanKind,\n    attributes: SpanAttributes,\n    links: Link[]\n  ): SamplingResult;\n\n  /** Returns the sampler name or short description with the configuration. */\n  toString(): string;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG,CAUH;;;GAGG;;;AACH,IAAY,gBAgBX;AAhBD,CAAA,SAAY,gBAAgB;IAC1B;;;OAGG,CACH,gBAAA,CAAA,gBAAA,CAAA,aAAA,GAAA,EAAA,GAAA,YAAU,CAAA;IACV;;;OAGG,CACH,gBAAA,CAAA,gBAAA,CAAA,SAAA,GAAA,EAAA,GAAA,QAAM,CAAA;IACN;;;OAGG,CACH,gBAAA,CAAA,gBAAA,CAAA,qBAAA,GAAA,EAAA,GAAA,oBAAkB,CAAA;AACpB,CAAC,EAhBW,gBAAgB,IAAA,CAAhB,gBAAgB,GAAA,CAAA,CAAA,GAgB3B","ignoreList":[0]}},
    {"offset": {"line": 10399, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10405, "column": 0}, "map": {"version":3,"file":"AlwaysOffSampler.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/sdk-trace-base/src/sampler/AlwaysOffSampler.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Sampler, SamplingDecision, SamplingResult } from '../Sampler';\n\n/** Sampler that samples no traces. */\nexport class AlwaysOffSampler implements Sampler {\n  shouldSample(): SamplingResult {\n    return {\n      decision: SamplingDecision.NOT_RECORD,\n    };\n  }\n\n  toString(): string {\n    return 'AlwaysOffSampler';\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAEH,OAAO,EAAW,gBAAgB,EAAkB,MAAM,YAAY,CAAC;;AAEvE,oCAAA,EAAsC,CACtC,IAAA,mBAAA;IAAA,SAAA,oBAUA,CAAC;IATC,iBAAA,SAAA,CAAA,YAAY,GAAZ;QACE,OAAO;YACL,QAAQ,qPAAE,mBAAgB,CAAC,UAAU;SACtC,CAAC;IACJ,CAAC;IAED,iBAAA,SAAA,CAAA,QAAQ,GAAR;QACE,OAAO,kBAAkB,CAAC;IAC5B,CAAC;IACH,OAAA,gBAAC;AAAD,CAAC,AAVD,IAUC","ignoreList":[0]}},
    {"offset": {"line": 10438, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10444, "column": 0}, "map": {"version":3,"file":"AlwaysOnSampler.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/sdk-trace-base/src/sampler/AlwaysOnSampler.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Sampler, SamplingDecision, SamplingResult } from '../Sampler';\n\n/** Sampler that samples all traces. */\nexport class AlwaysOnSampler implements Sampler {\n  shouldSample(): SamplingResult {\n    return {\n      decision: SamplingDecision.RECORD_AND_SAMPLED,\n    };\n  }\n\n  toString(): string {\n    return 'AlwaysOnSampler';\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAEH,OAAO,EAAW,gBAAgB,EAAkB,MAAM,YAAY,CAAC;;AAEvE,qCAAA,EAAuC,CACvC,IAAA,kBAAA;IAAA,SAAA,mBAUA,CAAC;IATC,gBAAA,SAAA,CAAA,YAAY,GAAZ;QACE,OAAO;YACL,QAAQ,qPAAE,mBAAgB,CAAC,kBAAkB;SAC9C,CAAC;IACJ,CAAC;IAED,gBAAA,SAAA,CAAA,QAAQ,GAAR;QACE,OAAO,iBAAiB,CAAC;IAC3B,CAAC;IACH,OAAA,eAAC;AAAD,CAAC,AAVD,IAUC","ignoreList":[0]}},
    {"offset": {"line": 10477, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10483, "column": 0}, "map": {"version":3,"file":"attributes.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/core/src/common/attributes.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag, SpanAttributeValue, SpanAttributes } from '@opentelemetry/api';\n\nexport function sanitizeAttributes(attributes: unknown): SpanAttributes {\n  const out: SpanAttributes = {};\n\n  if (typeof attributes !== 'object' || attributes == null) {\n    return out;\n  }\n\n  for (const [key, val] of Object.entries(attributes)) {\n    if (!isAttributeKey(key)) {\n      diag.warn(`Invalid attribute key: ${key}`);\n      continue;\n    }\n    if (!isAttributeValue(val)) {\n      diag.warn(`Invalid attribute value set for key: ${key}`);\n      continue;\n    }\n    if (Array.isArray(val)) {\n      out[key] = val.slice();\n    } else {\n      out[key] = val;\n    }\n  }\n\n  return out;\n}\n\nexport function isAttributeKey(key: unknown): key is string {\n  return typeof key === 'string' && key.length > 0;\n}\n\nexport function isAttributeValue(val: unknown): val is SpanAttributeValue {\n  if (val == null) {\n    return true;\n  }\n\n  if (Array.isArray(val)) {\n    return isHomogeneousAttributeValueArray(val);\n  }\n\n  return isValidPrimitiveAttributeValue(val);\n}\n\nfunction isHomogeneousAttributeValueArray(arr: unknown[]): boolean {\n  let type: string | undefined;\n\n  for (const element of arr) {\n    // null/undefined elements are allowed\n    if (element == null) continue;\n\n    if (!type) {\n      if (isValidPrimitiveAttributeValue(element)) {\n        type = typeof element;\n        continue;\n      }\n      // encountered an invalid primitive\n      return false;\n    }\n\n    if (typeof element === type) {\n      continue;\n    }\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction isValidPrimitiveAttributeValue(val: unknown): boolean {\n  switch (typeof val) {\n    case 'number':\n    case 'boolean':\n    case 'string':\n      return true;\n  }\n\n  return false;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;;;AAEH,OAAO,EAAE,IAAI,EAAsC,MAAM,oBAAoB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAExE,SAAU,kBAAkB,CAAC,UAAmB;;IACpD,IAAM,GAAG,GAAmB,CAAA,CAAE,CAAC;IAE/B,IAAI,OAAO,UAAU,KAAK,QAAQ,IAAI,UAAU,IAAI,IAAI,EAAE;QACxD,OAAO,GAAG,CAAC;KACZ;;QAED,IAAyB,IAAA,KAAA,SAAA,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAA,EAAA,KAAA,GAAA,IAAA,EAAA,EAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;YAA1C,IAAA,KAAA,OAAA,GAAA,KAAA,EAAA,EAAU,EAAT,GAAG,GAAA,EAAA,CAAA,EAAA,EAAE,GAAG,GAAA,EAAA,CAAA,EAAA;YAClB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;gBACxB,wLAAI,CAAC,IAAI,CAAC,4BAA0B,GAAK,CAAC,CAAC;gBAC3C,SAAS;aACV;YACD,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAE;iMAC1B,OAAI,CAAC,IAAI,CAAC,0CAAwC,GAAK,CAAC,CAAC;gBACzD,SAAS;aACV;YACD,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;gBACtB,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC;aACxB,MAAM;gBACL,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;aAChB;SACF;;;;;;;;;;;;IAED,OAAO,GAAG,CAAC;AACb,CAAC;AAEK,SAAU,cAAc,CAAC,GAAY;IACzC,OAAO,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;AACnD,CAAC;AAEK,SAAU,gBAAgB,CAAC,GAAY;IAC3C,IAAI,GAAG,IAAI,IAAI,EAAE;QACf,OAAO,IAAI,CAAC;KACb;IAED,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;QACtB,OAAO,gCAAgC,CAAC,GAAG,CAAC,CAAC;KAC9C;IAED,OAAO,8BAA8B,CAAC,GAAG,CAAC,CAAC;AAC7C,CAAC;AAED,SAAS,gCAAgC,CAAC,GAAc;;IACtD,IAAI,IAAwB,CAAC;;QAE7B,IAAsB,IAAA,QAAA,SAAA,GAAG,CAAA,EAAA,UAAA,MAAA,IAAA,EAAA,EAAA,CAAA,QAAA,IAAA,EAAA,UAAA,MAAA,IAAA,GAAE;YAAtB,IAAM,OAAO,GAAA,QAAA,KAAA;YAChB,sCAAsC;YACtC,IAAI,OAAO,IAAI,IAAI,EAAE,SAAS;YAE9B,IAAI,CAAC,IAAI,EAAE;gBACT,IAAI,8BAA8B,CAAC,OAAO,CAAC,EAAE;oBAC3C,IAAI,GAAG,OAAO,OAAO,CAAC;oBACtB,SAAS;iBACV;gBACD,mCAAmC;gBACnC,OAAO,KAAK,CAAC;aACd;YAED,IAAI,OAAO,OAAO,KAAK,IAAI,EAAE;gBAC3B,SAAS;aACV;YAED,OAAO,KAAK,CAAC;SACd;;;;;;;;;;;;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAED,SAAS,8BAA8B,CAAC,GAAY;IAClD,OAAQ,OAAO,GAAG,EAAE;QAClB,KAAK,QAAQ,CAAC;QACd,KAAK,SAAS,CAAC;QACf,KAAK,QAAQ;YACX,OAAO,IAAI,CAAC;KACf;IAED,OAAO,KAAK,CAAC;AACf,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10628, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10634, "column": 0}, "map": {"version":3,"file":"performance.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/core/src/platform/browser/performance.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const otperformance = performance;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAEI,IAAM,aAAa,GAAG,WAAW,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10652, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10658, "column": 0}, "map": {"version":3,"file":"time.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/core/src/common/time.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { otperformance as performance } from '../platform';\nimport { TimeOriginLegacy } from './types';\n\nconst NANOSECOND_DIGITS = 9;\nconst NANOSECOND_DIGITS_IN_MILLIS = 6;\nconst MILLISECONDS_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS_IN_MILLIS);\nconst SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n\n/**\n * Converts a number of milliseconds from epoch to HrTime([seconds, remainder in nanoseconds]).\n * @param epochMillis\n */\nexport function millisToHrTime(epochMillis: number): api.HrTime {\n  const epochSeconds = epochMillis / 1000;\n  // Decimals only.\n  const seconds = Math.trunc(epochSeconds);\n  // Round sub-nanosecond accuracy to nanosecond.\n  const nanos = Math.round((epochMillis % 1000) * MILLISECONDS_TO_NANOSECONDS);\n  return [seconds, nanos];\n}\n\nexport function getTimeOrigin(): number {\n  let timeOrigin = performance.timeOrigin;\n  if (typeof timeOrigin !== 'number') {\n    const perf: TimeOriginLegacy = performance as unknown as TimeOriginLegacy;\n    timeOrigin = perf.timing && perf.timing.fetchStart;\n  }\n  return timeOrigin;\n}\n\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nexport function hrTime(performanceNow?: number): api.HrTime {\n  const timeOrigin = millisToHrTime(getTimeOrigin());\n  const now = millisToHrTime(\n    typeof performanceNow === 'number' ? performanceNow : performance.now()\n  );\n\n  return addHrTimes(timeOrigin, now);\n}\n\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nexport function timeInputToHrTime(time: api.TimeInput): api.HrTime {\n  // process.hrtime\n  if (isTimeInputHrTime(time)) {\n    return time as api.HrTime;\n  } else if (typeof time === 'number') {\n    // Must be a performance.now() if it's smaller than process start time.\n    if (time < getTimeOrigin()) {\n      return hrTime(time);\n    } else {\n      // epoch milliseconds or performance.timeOrigin\n      return millisToHrTime(time);\n    }\n  } else if (time instanceof Date) {\n    return millisToHrTime(time.getTime());\n  } else {\n    throw TypeError('Invalid input type');\n  }\n}\n\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nexport function hrTimeDuration(\n  startTime: api.HrTime,\n  endTime: api.HrTime\n): api.HrTime {\n  let seconds = endTime[0] - startTime[0];\n  let nanos = endTime[1] - startTime[1];\n\n  // overflow\n  if (nanos < 0) {\n    seconds -= 1;\n    // negate\n    nanos += SECOND_TO_NANOSECONDS;\n  }\n\n  return [seconds, nanos];\n}\n\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param time\n */\nexport function hrTimeToTimeStamp(time: api.HrTime): string {\n  const precision = NANOSECOND_DIGITS;\n  const tmp = `${'0'.repeat(precision)}${time[1]}Z`;\n  const nanoString = tmp.substring(tmp.length - precision - 1);\n  const date = new Date(time[0] * 1000).toISOString();\n  return date.replace('000Z', nanoString);\n}\n\n/**\n * Convert hrTime to nanoseconds.\n * @param time\n */\nexport function hrTimeToNanoseconds(time: api.HrTime): number {\n  return time[0] * SECOND_TO_NANOSECONDS + time[1];\n}\n\n/**\n * Convert hrTime to milliseconds.\n * @param time\n */\nexport function hrTimeToMilliseconds(time: api.HrTime): number {\n  return time[0] * 1e3 + time[1] / 1e6;\n}\n\n/**\n * Convert hrTime to microseconds.\n * @param time\n */\nexport function hrTimeToMicroseconds(time: api.HrTime): number {\n  return time[0] * 1e6 + time[1] / 1e3;\n}\n\n/**\n * check if time is HrTime\n * @param value\n */\nexport function isTimeInputHrTime(value: unknown): value is api.HrTime {\n  return (\n    Array.isArray(value) &&\n    value.length === 2 &&\n    typeof value[0] === 'number' &&\n    typeof value[1] === 'number'\n  );\n}\n\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nexport function isTimeInput(\n  value: unknown\n): value is api.HrTime | number | Date {\n  return (\n    isTimeInputHrTime(value) ||\n    typeof value === 'number' ||\n    value instanceof Date\n  );\n}\n\n/**\n * Given 2 HrTime formatted times, return their sum as an HrTime.\n */\nexport function addHrTimes(time1: api.HrTime, time2: api.HrTime): api.HrTime {\n  const out = [time1[0] + time2[0], time1[1] + time2[1]] as api.HrTime;\n\n  // Nanoseconds\n  if (out[1] >= SECOND_TO_NANOSECONDS) {\n    out[1] -= SECOND_TO_NANOSECONDS;\n    out[0] += 1;\n  }\n\n  return out;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 10782, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10788, "column": 0}, "map": {"version":3,"file":"utils.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/semantic-conventions/src/internal/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Creates a const map from the given values\n * @param values - An array of values to be used as keys and values in the map.\n * @returns A populated version of the map with the values and keys derived from the values.\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function createConstMap<T>(values: Array<T[keyof T]>): T {\n  // eslint-disable-next-line prefer-const, @typescript-eslint/no-explicit-any\n  let res: any = {};\n  const len = values.length;\n  for (let lp = 0; lp < len; lp++) {\n    const val = values[lp];\n    if (val) {\n      res[String(val).toUpperCase().replace(/[-.]/g, '_')] = val;\n    }\n  }\n\n  return res as T;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG,CAEH;;;;GAIG,CACH,sBAAA,EAAwB;;;AAClB,SAAU,cAAc,CAAI,MAAyB;IACzD,4EAA4E;IAC5E,IAAI,GAAG,GAAQ,CAAA,CAAE,CAAC;IAClB,IAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;IAC1B,IAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,CAAE;QAC/B,IAAM,GAAG,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;QACvB,IAAI,GAAG,EAAE;YACP,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;SAC5D;KACF;IAED,OAAO,GAAQ,CAAC;AAClB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10821, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10827, "column": 0}, "map": {"version":3,"file":"SemanticAttributes.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/semantic-conventions/src/trace/SemanticAttributes.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createConstMap } from '../internal/utils';\n\n//----------------------------------------------------------------------------------------------------------\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\n//----------------------------------------------------------------------------------------------------------\n\n//----------------------------------------------------------------------------------------------------------\n// Constant values for SemanticAttributes\n//----------------------------------------------------------------------------------------------------------\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_AWS_LAMBDA_INVOKED_ARN = 'aws.lambda.invoked_arn';\nconst TMP_DB_SYSTEM = 'db.system';\nconst TMP_DB_CONNECTION_STRING = 'db.connection_string';\nconst TMP_DB_USER = 'db.user';\nconst TMP_DB_JDBC_DRIVER_CLASSNAME = 'db.jdbc.driver_classname';\nconst TMP_DB_NAME = 'db.name';\nconst TMP_DB_STATEMENT = 'db.statement';\nconst TMP_DB_OPERATION = 'db.operation';\nconst TMP_DB_MSSQL_INSTANCE_NAME = 'db.mssql.instance_name';\nconst TMP_DB_CASSANDRA_KEYSPACE = 'db.cassandra.keyspace';\nconst TMP_DB_CASSANDRA_PAGE_SIZE = 'db.cassandra.page_size';\nconst TMP_DB_CASSANDRA_CONSISTENCY_LEVEL = 'db.cassandra.consistency_level';\nconst TMP_DB_CASSANDRA_TABLE = 'db.cassandra.table';\nconst TMP_DB_CASSANDRA_IDEMPOTENCE = 'db.cassandra.idempotence';\nconst TMP_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT =\n  'db.cassandra.speculative_execution_count';\nconst TMP_DB_CASSANDRA_COORDINATOR_ID = 'db.cassandra.coordinator.id';\nconst TMP_DB_CASSANDRA_COORDINATOR_DC = 'db.cassandra.coordinator.dc';\nconst TMP_DB_HBASE_NAMESPACE = 'db.hbase.namespace';\nconst TMP_DB_REDIS_DATABASE_INDEX = 'db.redis.database_index';\nconst TMP_DB_MONGODB_COLLECTION = 'db.mongodb.collection';\nconst TMP_DB_SQL_TABLE = 'db.sql.table';\nconst TMP_EXCEPTION_TYPE = 'exception.type';\nconst TMP_EXCEPTION_MESSAGE = 'exception.message';\nconst TMP_EXCEPTION_STACKTRACE = 'exception.stacktrace';\nconst TMP_EXCEPTION_ESCAPED = 'exception.escaped';\nconst TMP_FAAS_TRIGGER = 'faas.trigger';\nconst TMP_FAAS_EXECUTION = 'faas.execution';\nconst TMP_FAAS_DOCUMENT_COLLECTION = 'faas.document.collection';\nconst TMP_FAAS_DOCUMENT_OPERATION = 'faas.document.operation';\nconst TMP_FAAS_DOCUMENT_TIME = 'faas.document.time';\nconst TMP_FAAS_DOCUMENT_NAME = 'faas.document.name';\nconst TMP_FAAS_TIME = 'faas.time';\nconst TMP_FAAS_CRON = 'faas.cron';\nconst TMP_FAAS_COLDSTART = 'faas.coldstart';\nconst TMP_FAAS_INVOKED_NAME = 'faas.invoked_name';\nconst TMP_FAAS_INVOKED_PROVIDER = 'faas.invoked_provider';\nconst TMP_FAAS_INVOKED_REGION = 'faas.invoked_region';\nconst TMP_NET_TRANSPORT = 'net.transport';\nconst TMP_NET_PEER_IP = 'net.peer.ip';\nconst TMP_NET_PEER_PORT = 'net.peer.port';\nconst TMP_NET_PEER_NAME = 'net.peer.name';\nconst TMP_NET_HOST_IP = 'net.host.ip';\nconst TMP_NET_HOST_PORT = 'net.host.port';\nconst TMP_NET_HOST_NAME = 'net.host.name';\nconst TMP_NET_HOST_CONNECTION_TYPE = 'net.host.connection.type';\nconst TMP_NET_HOST_CONNECTION_SUBTYPE = 'net.host.connection.subtype';\nconst TMP_NET_HOST_CARRIER_NAME = 'net.host.carrier.name';\nconst TMP_NET_HOST_CARRIER_MCC = 'net.host.carrier.mcc';\nconst TMP_NET_HOST_CARRIER_MNC = 'net.host.carrier.mnc';\nconst TMP_NET_HOST_CARRIER_ICC = 'net.host.carrier.icc';\nconst TMP_PEER_SERVICE = 'peer.service';\nconst TMP_ENDUSER_ID = 'enduser.id';\nconst TMP_ENDUSER_ROLE = 'enduser.role';\nconst TMP_ENDUSER_SCOPE = 'enduser.scope';\nconst TMP_THREAD_ID = 'thread.id';\nconst TMP_THREAD_NAME = 'thread.name';\nconst TMP_CODE_FUNCTION = 'code.function';\nconst TMP_CODE_NAMESPACE = 'code.namespace';\nconst TMP_CODE_FILEPATH = 'code.filepath';\nconst TMP_CODE_LINENO = 'code.lineno';\nconst TMP_HTTP_METHOD = 'http.method';\nconst TMP_HTTP_URL = 'http.url';\nconst TMP_HTTP_TARGET = 'http.target';\nconst TMP_HTTP_HOST = 'http.host';\nconst TMP_HTTP_SCHEME = 'http.scheme';\nconst TMP_HTTP_STATUS_CODE = 'http.status_code';\nconst TMP_HTTP_FLAVOR = 'http.flavor';\nconst TMP_HTTP_USER_AGENT = 'http.user_agent';\nconst TMP_HTTP_REQUEST_CONTENT_LENGTH = 'http.request_content_length';\nconst TMP_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED =\n  'http.request_content_length_uncompressed';\nconst TMP_HTTP_RESPONSE_CONTENT_LENGTH = 'http.response_content_length';\nconst TMP_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED =\n  'http.response_content_length_uncompressed';\nconst TMP_HTTP_SERVER_NAME = 'http.server_name';\nconst TMP_HTTP_ROUTE = 'http.route';\nconst TMP_HTTP_CLIENT_IP = 'http.client_ip';\nconst TMP_AWS_DYNAMODB_TABLE_NAMES = 'aws.dynamodb.table_names';\nconst TMP_AWS_DYNAMODB_CONSUMED_CAPACITY = 'aws.dynamodb.consumed_capacity';\nconst TMP_AWS_DYNAMODB_ITEM_COLLECTION_METRICS =\n  'aws.dynamodb.item_collection_metrics';\nconst TMP_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY =\n  'aws.dynamodb.provisioned_read_capacity';\nconst TMP_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY =\n  'aws.dynamodb.provisioned_write_capacity';\nconst TMP_AWS_DYNAMODB_CONSISTENT_READ = 'aws.dynamodb.consistent_read';\nconst TMP_AWS_DYNAMODB_PROJECTION = 'aws.dynamodb.projection';\nconst TMP_AWS_DYNAMODB_LIMIT = 'aws.dynamodb.limit';\nconst TMP_AWS_DYNAMODB_ATTRIBUTES_TO_GET = 'aws.dynamodb.attributes_to_get';\nconst TMP_AWS_DYNAMODB_INDEX_NAME = 'aws.dynamodb.index_name';\nconst TMP_AWS_DYNAMODB_SELECT = 'aws.dynamodb.select';\nconst TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES =\n  'aws.dynamodb.global_secondary_indexes';\nconst TMP_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES =\n  'aws.dynamodb.local_secondary_indexes';\nconst TMP_AWS_DYNAMODB_EXCLUSIVE_START_TABLE =\n  'aws.dynamodb.exclusive_start_table';\nconst TMP_AWS_DYNAMODB_TABLE_COUNT = 'aws.dynamodb.table_count';\nconst TMP_AWS_DYNAMODB_SCAN_FORWARD = 'aws.dynamodb.scan_forward';\nconst TMP_AWS_DYNAMODB_SEGMENT = 'aws.dynamodb.segment';\nconst TMP_AWS_DYNAMODB_TOTAL_SEGMENTS = 'aws.dynamodb.total_segments';\nconst TMP_AWS_DYNAMODB_COUNT = 'aws.dynamodb.count';\nconst TMP_AWS_DYNAMODB_SCANNED_COUNT = 'aws.dynamodb.scanned_count';\nconst TMP_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS =\n  'aws.dynamodb.attribute_definitions';\nconst TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES =\n  'aws.dynamodb.global_secondary_index_updates';\nconst TMP_MESSAGING_SYSTEM = 'messaging.system';\nconst TMP_MESSAGING_DESTINATION = 'messaging.destination';\nconst TMP_MESSAGING_DESTINATION_KIND = 'messaging.destination_kind';\nconst TMP_MESSAGING_TEMP_DESTINATION = 'messaging.temp_destination';\nconst TMP_MESSAGING_PROTOCOL = 'messaging.protocol';\nconst TMP_MESSAGING_PROTOCOL_VERSION = 'messaging.protocol_version';\nconst TMP_MESSAGING_URL = 'messaging.url';\nconst TMP_MESSAGING_MESSAGE_ID = 'messaging.message_id';\nconst TMP_MESSAGING_CONVERSATION_ID = 'messaging.conversation_id';\nconst TMP_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES =\n  'messaging.message_payload_size_bytes';\nconst TMP_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES =\n  'messaging.message_payload_compressed_size_bytes';\nconst TMP_MESSAGING_OPERATION = 'messaging.operation';\nconst TMP_MESSAGING_CONSUMER_ID = 'messaging.consumer_id';\nconst TMP_MESSAGING_RABBITMQ_ROUTING_KEY = 'messaging.rabbitmq.routing_key';\nconst TMP_MESSAGING_KAFKA_MESSAGE_KEY = 'messaging.kafka.message_key';\nconst TMP_MESSAGING_KAFKA_CONSUMER_GROUP = 'messaging.kafka.consumer_group';\nconst TMP_MESSAGING_KAFKA_CLIENT_ID = 'messaging.kafka.client_id';\nconst TMP_MESSAGING_KAFKA_PARTITION = 'messaging.kafka.partition';\nconst TMP_MESSAGING_KAFKA_TOMBSTONE = 'messaging.kafka.tombstone';\nconst TMP_RPC_SYSTEM = 'rpc.system';\nconst TMP_RPC_SERVICE = 'rpc.service';\nconst TMP_RPC_METHOD = 'rpc.method';\nconst TMP_RPC_GRPC_STATUS_CODE = 'rpc.grpc.status_code';\nconst TMP_RPC_JSONRPC_VERSION = 'rpc.jsonrpc.version';\nconst TMP_RPC_JSONRPC_REQUEST_ID = 'rpc.jsonrpc.request_id';\nconst TMP_RPC_JSONRPC_ERROR_CODE = 'rpc.jsonrpc.error_code';\nconst TMP_RPC_JSONRPC_ERROR_MESSAGE = 'rpc.jsonrpc.error_message';\nconst TMP_MESSAGE_TYPE = 'message.type';\nconst TMP_MESSAGE_ID = 'message.id';\nconst TMP_MESSAGE_COMPRESSED_SIZE = 'message.compressed_size';\nconst TMP_MESSAGE_UNCOMPRESSED_SIZE = 'message.uncompressed_size';\n\n/**\n * The full invoked ARN as provided on the `Context` passed to the function (`Lambda-Runtime-Invoked-Function-Arn` header on the `/runtime/invocation/next` applicable).\n *\n * Note: This may be different from `faas.id` if an alias is involved.\n *\n * @deprecated Use ATTR_AWS_LAMBDA_INVOKED_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_LAMBDA_INVOKED_ARN = TMP_AWS_LAMBDA_INVOKED_ARN;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use ATTR_DB_SYSTEM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_SYSTEM = TMP_DB_SYSTEM;\n\n/**\n * The connection string used to connect to the database. It is recommended to remove embedded credentials.\n *\n * @deprecated Use ATTR_DB_CONNECTION_STRING in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_CONNECTION_STRING = TMP_DB_CONNECTION_STRING;\n\n/**\n * Username for accessing the database.\n *\n * @deprecated Use ATTR_DB_USER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_USER = TMP_DB_USER;\n\n/**\n * The fully-qualified class name of the [Java Database Connectivity (JDBC)](https://docs.oracle.com/javase/8/docs/technotes/guides/jdbc/) driver used to connect.\n *\n * @deprecated Use ATTR_DB_JDBC_DRIVER_CLASSNAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_JDBC_DRIVER_CLASSNAME = TMP_DB_JDBC_DRIVER_CLASSNAME;\n\n/**\n * If no [tech-specific attribute](#call-level-attributes-for-specific-technologies) is defined, this attribute is used to report the name of the database being accessed. For commands that switch the database, this should be set to the target database (even if the command fails).\n *\n * Note: In some SQL databases, the database name to be used is called &#34;schema name&#34;.\n *\n * @deprecated Use ATTR_DB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_NAME = TMP_DB_NAME;\n\n/**\n * The database statement being executed.\n *\n * Note: The value may be sanitized to exclude sensitive information.\n *\n * @deprecated Use ATTR_DB_STATEMENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_STATEMENT = TMP_DB_STATEMENT;\n\n/**\n * The name of the operation being executed, e.g. the [MongoDB command name](https://docs.mongodb.com/manual/reference/command/#database-operations) such as `findAndModify`, or the SQL keyword.\n *\n * Note: When setting this to an SQL keyword, it is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if the operation name is provided by the library being instrumented. If the SQL statement has an ambiguous operation, or performs more than one operation, this value may be omitted.\n *\n * @deprecated Use ATTR_DB_OPERATION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_OPERATION = TMP_DB_OPERATION;\n\n/**\n * The Microsoft SQL Server [instance name](https://docs.microsoft.com/en-us/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver15) connecting to. This name is used to determine the port of a named instance.\n *\n * Note: If setting a `db.mssql.instance_name`, `net.peer.port` is no longer required (but still recommended if non-standard).\n *\n * @deprecated Use ATTR_DB_MSSQL_INSTANCE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_MSSQL_INSTANCE_NAME = TMP_DB_MSSQL_INSTANCE_NAME;\n\n/**\n * The name of the keyspace being accessed. To be used instead of the generic `db.name` attribute.\n *\n * @deprecated Use ATTR_DB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_CASSANDRA_KEYSPACE = TMP_DB_CASSANDRA_KEYSPACE;\n\n/**\n * The fetch size used for paging, i.e. how many rows will be returned at once.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_PAGE_SIZE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_CASSANDRA_PAGE_SIZE = TMP_DB_CASSANDRA_PAGE_SIZE;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_CASSANDRA_CONSISTENCY_LEVEL =\n  TMP_DB_CASSANDRA_CONSISTENCY_LEVEL;\n\n/**\n * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n *\n * Note: This mirrors the db.sql.table attribute but references cassandra rather than sql. It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_TABLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_CASSANDRA_TABLE = TMP_DB_CASSANDRA_TABLE;\n\n/**\n * Whether or not the query is idempotent.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_IDEMPOTENCE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_CASSANDRA_IDEMPOTENCE = TMP_DB_CASSANDRA_IDEMPOTENCE;\n\n/**\n * The number of times a query was speculatively executed. Not set or `0` if the query was not executed speculatively.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT =\n  TMP_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT;\n\n/**\n * The ID of the coordinating node for a query.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_COORDINATOR_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_CASSANDRA_COORDINATOR_ID =\n  TMP_DB_CASSANDRA_COORDINATOR_ID;\n\n/**\n * The data center of the coordinating node for a query.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_COORDINATOR_DC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_CASSANDRA_COORDINATOR_DC =\n  TMP_DB_CASSANDRA_COORDINATOR_DC;\n\n/**\n * The [HBase namespace](https://hbase.apache.org/book.html#_namespace) being accessed. To be used instead of the generic `db.name` attribute.\n *\n * @deprecated Use ATTR_DB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_HBASE_NAMESPACE = TMP_DB_HBASE_NAMESPACE;\n\n/**\n * The index of the database being accessed as used in the [`SELECT` command](https://redis.io/commands/select), provided as an integer. To be used instead of the generic `db.name` attribute.\n *\n * @deprecated Use ATTR_DB_REDIS_DATABASE_INDEX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_REDIS_DATABASE_INDEX = TMP_DB_REDIS_DATABASE_INDEX;\n\n/**\n * The collection being accessed within the database stated in `db.name`.\n *\n * @deprecated Use ATTR_DB_MONGODB_COLLECTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_MONGODB_COLLECTION = TMP_DB_MONGODB_COLLECTION;\n\n/**\n * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n *\n * Note: It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n *\n * @deprecated Use ATTR_DB_SQL_TABLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_SQL_TABLE = TMP_DB_SQL_TABLE;\n\n/**\n * The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.\n *\n * @deprecated Use ATTR_EXCEPTION_TYPE.\n */\nexport const SEMATTRS_EXCEPTION_TYPE = TMP_EXCEPTION_TYPE;\n\n/**\n * The exception message.\n *\n * @deprecated Use ATTR_EXCEPTION_MESSAGE.\n */\nexport const SEMATTRS_EXCEPTION_MESSAGE = TMP_EXCEPTION_MESSAGE;\n\n/**\n * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n *\n * @deprecated Use ATTR_EXCEPTION_STACKTRACE.\n */\nexport const SEMATTRS_EXCEPTION_STACKTRACE = TMP_EXCEPTION_STACKTRACE;\n\n/**\n* SHOULD be set to true if the exception event is recorded at a point where it is known that the exception is escaping the scope of the span.\n*\n* Note: An exception is considered to have escaped (or left) the scope of a span,\nif that span is ended while the exception is still logically &#34;in flight&#34;.\nThis may be actually &#34;in flight&#34; in some languages (e.g. if the exception\nis passed to a Context manager&#39;s `__exit__` method in Python) but will\nusually be caught at the point of recording the exception in most languages.\n\nIt is usually not possible to determine at the point where an exception is thrown\nwhether it will escape the scope of a span.\nHowever, it is trivial to know that an exception\nwill escape, if one checks for an active exception just before ending the span,\nas done in the [example above](#exception-end-example).\n\nIt follows that an exception may still escape the scope of the span\neven if the `exception.escaped` attribute was not set or set to false,\nsince the event might have been recorded at a time where it was not\nclear whether the exception will escape.\n*\n* @deprecated Use ATTR_EXCEPTION_ESCAPED.\n*/\nexport const SEMATTRS_EXCEPTION_ESCAPED = TMP_EXCEPTION_ESCAPED;\n\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use ATTR_FAAS_TRIGGER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_TRIGGER = TMP_FAAS_TRIGGER;\n\n/**\n * The execution ID of the current function execution.\n *\n * @deprecated Use ATTR_FAAS_INVOCATION_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_EXECUTION = TMP_FAAS_EXECUTION;\n\n/**\n * The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.\n *\n * @deprecated Use ATTR_FAAS_DOCUMENT_COLLECTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_DOCUMENT_COLLECTION = TMP_FAAS_DOCUMENT_COLLECTION;\n\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated Use ATTR_FAAS_DOCUMENT_OPERATION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_DOCUMENT_OPERATION = TMP_FAAS_DOCUMENT_OPERATION;\n\n/**\n * A string containing the time when the data was accessed in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n *\n * @deprecated Use ATTR_FAAS_DOCUMENT_TIME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_DOCUMENT_TIME = TMP_FAAS_DOCUMENT_TIME;\n\n/**\n * The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.\n *\n * @deprecated Use ATTR_FAAS_DOCUMENT_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_DOCUMENT_NAME = TMP_FAAS_DOCUMENT_NAME;\n\n/**\n * A string containing the function invocation time in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n *\n * @deprecated Use ATTR_FAAS_TIME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_TIME = TMP_FAAS_TIME;\n\n/**\n * A string containing the schedule period as [Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm).\n *\n * @deprecated Use ATTR_FAAS_CRON in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_CRON = TMP_FAAS_CRON;\n\n/**\n * A boolean that is true if the serverless function is executed for the first time (aka cold-start).\n *\n * @deprecated Use ATTR_FAAS_COLDSTART in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_COLDSTART = TMP_FAAS_COLDSTART;\n\n/**\n * The name of the invoked function.\n *\n * Note: SHOULD be equal to the `faas.name` resource attribute of the invoked function.\n *\n * @deprecated Use ATTR_FAAS_INVOKED_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_INVOKED_NAME = TMP_FAAS_INVOKED_NAME;\n\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use ATTR_FAAS_INVOKED_PROVIDER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_INVOKED_PROVIDER = TMP_FAAS_INVOKED_PROVIDER;\n\n/**\n * The cloud region of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.region` resource attribute of the invoked function.\n *\n * @deprecated Use ATTR_FAAS_INVOKED_REGION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_INVOKED_REGION = TMP_FAAS_INVOKED_REGION;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use ATTR_NET_TRANSPORT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_TRANSPORT = TMP_NET_TRANSPORT;\n\n/**\n * Remote address of the peer (dotted decimal for IPv4 or [RFC5952](https://tools.ietf.org/html/rfc5952) for IPv6).\n *\n * @deprecated Use ATTR_NET_PEER_IP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_PEER_IP = TMP_NET_PEER_IP;\n\n/**\n * Remote port number.\n *\n * @deprecated Use ATTR_NET_PEER_PORT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_PEER_PORT = TMP_NET_PEER_PORT;\n\n/**\n * Remote hostname or similar, see note below.\n *\n * @deprecated Use ATTR_NET_PEER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_PEER_NAME = TMP_NET_PEER_NAME;\n\n/**\n * Like `net.peer.ip` but for the host IP. Useful in case of a multi-IP host.\n *\n * @deprecated Use ATTR_NET_HOST_IP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_HOST_IP = TMP_NET_HOST_IP;\n\n/**\n * Like `net.peer.port` but for the host port.\n *\n * @deprecated Use ATTR_NET_HOST_PORT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_HOST_PORT = TMP_NET_HOST_PORT;\n\n/**\n * Local hostname or similar, see note below.\n *\n * @deprecated Use ATTR_NET_HOST_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_HOST_NAME = TMP_NET_HOST_NAME;\n\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use ATTR_NETWORK_CONNECTION_TYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_HOST_CONNECTION_TYPE = TMP_NET_HOST_CONNECTION_TYPE;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use ATTR_NETWORK_CONNECTION_SUBTYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_HOST_CONNECTION_SUBTYPE =\n  TMP_NET_HOST_CONNECTION_SUBTYPE;\n\n/**\n * The name of the mobile carrier.\n *\n * @deprecated Use ATTR_NETWORK_CARRIER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_HOST_CARRIER_NAME = TMP_NET_HOST_CARRIER_NAME;\n\n/**\n * The mobile carrier country code.\n *\n * @deprecated Use ATTR_NETWORK_CARRIER_MCC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_HOST_CARRIER_MCC = TMP_NET_HOST_CARRIER_MCC;\n\n/**\n * The mobile carrier network code.\n *\n * @deprecated Use ATTR_NETWORK_CARRIER_MNC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_HOST_CARRIER_MNC = TMP_NET_HOST_CARRIER_MNC;\n\n/**\n * The ISO 3166-1 alpha-2 2-character country code associated with the mobile carrier network.\n *\n * @deprecated Use ATTR_NETWORK_CARRIER_ICC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_HOST_CARRIER_ICC = TMP_NET_HOST_CARRIER_ICC;\n\n/**\n * The [`service.name`](../../resource/semantic_conventions/README.md#service) of the remote service. SHOULD be equal to the actual `service.name` resource attribute of the remote service if any.\n *\n * @deprecated Use ATTR_PEER_SERVICE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_PEER_SERVICE = TMP_PEER_SERVICE;\n\n/**\n * Username or client_id extracted from the access token or [Authorization](https://tools.ietf.org/html/rfc7235#section-4.2) header in the inbound request from outside the system.\n *\n * @deprecated Use ATTR_ENDUSER_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_ENDUSER_ID = TMP_ENDUSER_ID;\n\n/**\n * Actual/assumed role the client is making the request under extracted from token or application security context.\n *\n * @deprecated Use ATTR_ENDUSER_ROLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_ENDUSER_ROLE = TMP_ENDUSER_ROLE;\n\n/**\n * Scopes or granted authorities the client currently possesses extracted from token or application security context. The value would come from the scope associated with an [OAuth 2.0 Access Token](https://tools.ietf.org/html/rfc6749#section-3.3) or an attribute value in a [SAML 2.0 Assertion](http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html).\n *\n * @deprecated Use ATTR_ENDUSER_SCOPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_ENDUSER_SCOPE = TMP_ENDUSER_SCOPE;\n\n/**\n * Current &#34;managed&#34; thread ID (as opposed to OS thread ID).\n *\n * @deprecated Use ATTR_THREAD_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_THREAD_ID = TMP_THREAD_ID;\n\n/**\n * Current thread name.\n *\n * @deprecated Use ATTR_THREAD_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_THREAD_NAME = TMP_THREAD_NAME;\n\n/**\n * The method or function name, or equivalent (usually rightmost part of the code unit&#39;s name).\n *\n * @deprecated Use ATTR_CODE_FUNCTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_CODE_FUNCTION = TMP_CODE_FUNCTION;\n\n/**\n * The &#34;namespace&#34; within which `code.function` is defined. Usually the qualified class or module name, such that `code.namespace` + some separator + `code.function` form a unique identifier for the code unit.\n *\n * @deprecated Use ATTR_CODE_NAMESPACE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_CODE_NAMESPACE = TMP_CODE_NAMESPACE;\n\n/**\n * The source code file name that identifies the code unit as uniquely as possible (preferably an absolute file path).\n *\n * @deprecated Use ATTR_CODE_FILEPATH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_CODE_FILEPATH = TMP_CODE_FILEPATH;\n\n/**\n * The line number in `code.filepath` best representing the operation. It SHOULD point within the code unit named in `code.function`.\n *\n * @deprecated Use ATTR_CODE_LINENO in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_CODE_LINENO = TMP_CODE_LINENO;\n\n/**\n * HTTP request method.\n *\n * @deprecated Use ATTR_HTTP_METHOD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_METHOD = TMP_HTTP_METHOD;\n\n/**\n * Full HTTP request URL in the form `scheme://host[:port]/path?query[#fragment]`. Usually the fragment is not transmitted over HTTP, but if it is known, it should be included nevertheless.\n *\n * Note: `http.url` MUST NOT contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case the attribute&#39;s value should be `https://www.example.com/`.\n *\n * @deprecated Use ATTR_HTTP_URL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_URL = TMP_HTTP_URL;\n\n/**\n * The full request target as passed in a HTTP request line or equivalent.\n *\n * @deprecated Use ATTR_HTTP_TARGET in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_TARGET = TMP_HTTP_TARGET;\n\n/**\n * The value of the [HTTP host header](https://tools.ietf.org/html/rfc7230#section-5.4). An empty Host header should also be reported, see note.\n *\n * Note: When the header is present but empty the attribute SHOULD be set to the empty string. Note that this is a valid situation that is expected in certain cases, according the aforementioned [section of RFC 7230](https://tools.ietf.org/html/rfc7230#section-5.4). When the header is not set the attribute MUST NOT be set.\n *\n * @deprecated Use ATTR_HTTP_HOST in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_HOST = TMP_HTTP_HOST;\n\n/**\n * The URI scheme identifying the used protocol.\n *\n * @deprecated Use ATTR_HTTP_SCHEME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_SCHEME = TMP_HTTP_SCHEME;\n\n/**\n * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n *\n * @deprecated Use ATTR_HTTP_STATUS_CODE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_STATUS_CODE = TMP_HTTP_STATUS_CODE;\n\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use ATTR_HTTP_FLAVOR in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_FLAVOR = TMP_HTTP_FLAVOR;\n\n/**\n * Value of the [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3) header sent by the client.\n *\n * @deprecated Use ATTR_HTTP_USER_AGENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_USER_AGENT = TMP_HTTP_USER_AGENT;\n\n/**\n * The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n *\n * @deprecated Use ATTR_HTTP_REQUEST_CONTENT_LENGTH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH =\n  TMP_HTTP_REQUEST_CONTENT_LENGTH;\n\n/**\n * The size of the uncompressed request payload body after transport decoding. Not set if transport encoding not used.\n *\n * @deprecated Use ATTR_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED =\n  TMP_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED;\n\n/**\n * The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n *\n * @deprecated Use ATTR_HTTP_RESPONSE_CONTENT_LENGTH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH =\n  TMP_HTTP_RESPONSE_CONTENT_LENGTH;\n\n/**\n * The size of the uncompressed response payload body after transport decoding. Not set if transport encoding not used.\n *\n * @deprecated Use ATTR_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED =\n  TMP_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED;\n\n/**\n * The primary server name of the matched virtual host. This should be obtained via configuration. If no such configuration can be obtained, this attribute MUST NOT be set ( `net.host.name` should be used instead).\n *\n * Note: `http.url` is usually not readily available on the server side but would have to be assembled in a cumbersome and sometimes lossy process from other information (see e.g. open-telemetry/opentelemetry-python/pull/148). It is thus preferred to supply the raw data that is available.\n *\n * @deprecated Use ATTR_HTTP_SERVER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_SERVER_NAME = TMP_HTTP_SERVER_NAME;\n\n/**\n * The matched route (path template).\n *\n * @deprecated Use ATTR_HTTP_ROUTE.\n */\nexport const SEMATTRS_HTTP_ROUTE = TMP_HTTP_ROUTE;\n\n/**\n* The IP address of the original client behind all proxies, if known (e.g. from [X-Forwarded-For](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For)).\n*\n* Note: This is not necessarily the same as `net.peer.ip`, which would\nidentify the network-level peer, which may be a proxy.\n\nThis attribute should be set when a source of information different\nfrom the one used for `net.peer.ip`, is available even if that other\nsource just confirms the same value as `net.peer.ip`.\nRationale: For `net.peer.ip`, one typically does not know if it\ncomes from a proxy, reverse proxy, or the actual client. Setting\n`http.client_ip` when it&#39;s the same as `net.peer.ip` means that\none is at least somewhat confident that the address is not that of\nthe closest proxy.\n*\n* @deprecated Use ATTR_HTTP_CLIENT_IP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n*/\nexport const SEMATTRS_HTTP_CLIENT_IP = TMP_HTTP_CLIENT_IP;\n\n/**\n * The keys in the `RequestItems` object field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_TABLE_NAMES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_TABLE_NAMES = TMP_AWS_DYNAMODB_TABLE_NAMES;\n\n/**\n * The JSON-serialized value of each item in the `ConsumedCapacity` response field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_CONSUMED_CAPACITY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_CONSUMED_CAPACITY =\n  TMP_AWS_DYNAMODB_CONSUMED_CAPACITY;\n\n/**\n * The JSON-serialized value of the `ItemCollectionMetrics` response field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_ITEM_COLLECTION_METRICS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_ITEM_COLLECTION_METRICS =\n  TMP_AWS_DYNAMODB_ITEM_COLLECTION_METRICS;\n\n/**\n * The value of the `ProvisionedThroughput.ReadCapacityUnits` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY =\n  TMP_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY;\n\n/**\n * The value of the `ProvisionedThroughput.WriteCapacityUnits` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY =\n  TMP_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY;\n\n/**\n * The value of the `ConsistentRead` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_CONSISTENT_READ in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_CONSISTENT_READ =\n  TMP_AWS_DYNAMODB_CONSISTENT_READ;\n\n/**\n * The value of the `ProjectionExpression` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_PROJECTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_PROJECTION = TMP_AWS_DYNAMODB_PROJECTION;\n\n/**\n * The value of the `Limit` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_LIMIT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_LIMIT = TMP_AWS_DYNAMODB_LIMIT;\n\n/**\n * The value of the `AttributesToGet` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_ATTRIBUTES_TO_GET in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_ATTRIBUTES_TO_GET =\n  TMP_AWS_DYNAMODB_ATTRIBUTES_TO_GET;\n\n/**\n * The value of the `IndexName` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_INDEX_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_INDEX_NAME = TMP_AWS_DYNAMODB_INDEX_NAME;\n\n/**\n * The value of the `Select` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_SELECT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_SELECT = TMP_AWS_DYNAMODB_SELECT;\n\n/**\n * The JSON-serialized value of each item of the `GlobalSecondaryIndexes` request field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES =\n  TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES;\n\n/**\n * The JSON-serialized value of each item of the `LocalSecondaryIndexes` request field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES =\n  TMP_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES;\n\n/**\n * The value of the `ExclusiveStartTableName` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_EXCLUSIVE_START_TABLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_EXCLUSIVE_START_TABLE =\n  TMP_AWS_DYNAMODB_EXCLUSIVE_START_TABLE;\n\n/**\n * The the number of items in the `TableNames` response parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_TABLE_COUNT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_TABLE_COUNT = TMP_AWS_DYNAMODB_TABLE_COUNT;\n\n/**\n * The value of the `ScanIndexForward` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_SCAN_FORWARD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_SCAN_FORWARD = TMP_AWS_DYNAMODB_SCAN_FORWARD;\n\n/**\n * The value of the `Segment` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_SEGMENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_SEGMENT = TMP_AWS_DYNAMODB_SEGMENT;\n\n/**\n * The value of the `TotalSegments` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_TOTAL_SEGMENTS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_TOTAL_SEGMENTS =\n  TMP_AWS_DYNAMODB_TOTAL_SEGMENTS;\n\n/**\n * The value of the `Count` response parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_COUNT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_COUNT = TMP_AWS_DYNAMODB_COUNT;\n\n/**\n * The value of the `ScannedCount` response parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_SCANNED_COUNT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_SCANNED_COUNT =\n  TMP_AWS_DYNAMODB_SCANNED_COUNT;\n\n/**\n * The JSON-serialized value of each item in the `AttributeDefinitions` request field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS =\n  TMP_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS;\n\n/**\n * The JSON-serialized value of each item in the the `GlobalSecondaryIndexUpdates` request field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES =\n  TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES;\n\n/**\n * A string identifying the messaging system.\n *\n * @deprecated Use ATTR_MESSAGING_SYSTEM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_SYSTEM = TMP_MESSAGING_SYSTEM;\n\n/**\n * The message destination name. This might be equal to the span name but is required nevertheless.\n *\n * @deprecated Use ATTR_MESSAGING_DESTINATION_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_DESTINATION = TMP_MESSAGING_DESTINATION;\n\n/**\n * The kind of message destination.\n *\n * @deprecated Removed in semconv v1.20.0.\n */\nexport const SEMATTRS_MESSAGING_DESTINATION_KIND =\n  TMP_MESSAGING_DESTINATION_KIND;\n\n/**\n * A boolean that is true if the message destination is temporary.\n *\n * @deprecated Use ATTR_MESSAGING_DESTINATION_TEMPORARY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_TEMP_DESTINATION =\n  TMP_MESSAGING_TEMP_DESTINATION;\n\n/**\n * The name of the transport protocol.\n *\n * @deprecated Use ATTR_NETWORK_PROTOCOL_NAME.\n */\nexport const SEMATTRS_MESSAGING_PROTOCOL = TMP_MESSAGING_PROTOCOL;\n\n/**\n * The version of the transport protocol.\n *\n * @deprecated Use ATTR_NETWORK_PROTOCOL_VERSION.\n */\nexport const SEMATTRS_MESSAGING_PROTOCOL_VERSION =\n  TMP_MESSAGING_PROTOCOL_VERSION;\n\n/**\n * Connection string.\n *\n * @deprecated Removed in semconv v1.17.0.\n */\nexport const SEMATTRS_MESSAGING_URL = TMP_MESSAGING_URL;\n\n/**\n * A value used by the messaging system as an identifier for the message, represented as a string.\n *\n * @deprecated Use ATTR_MESSAGING_MESSAGE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_MESSAGE_ID = TMP_MESSAGING_MESSAGE_ID;\n\n/**\n * The [conversation ID](#conversations) identifying the conversation to which the message belongs, represented as a string. Sometimes called &#34;Correlation ID&#34;.\n *\n * @deprecated Use ATTR_MESSAGING_MESSAGE_CONVERSATION_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_CONVERSATION_ID = TMP_MESSAGING_CONVERSATION_ID;\n\n/**\n * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is unknown whether the compressed or uncompressed payload size is reported.\n *\n * @deprecated Use ATTR_MESSAGING_MESSAGE_BODY_SIZE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES =\n  TMP_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES;\n\n/**\n * The compressed size of the message payload in bytes.\n *\n * @deprecated Removed in semconv v1.22.0.\n */\nexport const SEMATTRS_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES =\n  TMP_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES;\n\n/**\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n *\n * @deprecated Use ATTR_MESSAGING_OPERATION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_OPERATION = TMP_MESSAGING_OPERATION;\n\n/**\n * The identifier for the consumer receiving a message. For Kafka, set it to `{messaging.kafka.consumer_group} - {messaging.kafka.client_id}`, if both are present, or only `messaging.kafka.consumer_group`. For brokers, such as RabbitMQ and Artemis, set it to the `client_id` of the client consuming the message.\n *\n * @deprecated Removed in semconv v1.21.0.\n */\nexport const SEMATTRS_MESSAGING_CONSUMER_ID = TMP_MESSAGING_CONSUMER_ID;\n\n/**\n * RabbitMQ message routing key.\n *\n * @deprecated Use ATTR_MESSAGING_RABBITMQ_DESTINATION_ROUTING_KEY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_RABBITMQ_ROUTING_KEY =\n  TMP_MESSAGING_RABBITMQ_ROUTING_KEY;\n\n/**\n * Message keys in Kafka are used for grouping alike messages to ensure they&#39;re processed on the same partition. They differ from `messaging.message_id` in that they&#39;re not unique. If the key is `null`, the attribute MUST NOT be set.\n *\n * Note: If the key type is not string, it&#39;s string representation has to be supplied for the attribute. If the key has no unambiguous, canonical string form, don&#39;t include its value.\n *\n * @deprecated Use ATTR_MESSAGING_KAFKA_MESSAGE_KEY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_KAFKA_MESSAGE_KEY =\n  TMP_MESSAGING_KAFKA_MESSAGE_KEY;\n\n/**\n * Name of the Kafka Consumer Group that is handling the message. Only applies to consumers, not producers.\n *\n * @deprecated Use ATTR_MESSAGING_KAFKA_CONSUMER_GROUP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_KAFKA_CONSUMER_GROUP =\n  TMP_MESSAGING_KAFKA_CONSUMER_GROUP;\n\n/**\n * Client Id for the Consumer or Producer that is handling the message.\n *\n * @deprecated Use ATTR_MESSAGING_CLIENT_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_KAFKA_CLIENT_ID = TMP_MESSAGING_KAFKA_CLIENT_ID;\n\n/**\n * Partition the message is sent to.\n *\n * @deprecated Use ATTR_MESSAGING_KAFKA_DESTINATION_PARTITION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_KAFKA_PARTITION = TMP_MESSAGING_KAFKA_PARTITION;\n\n/**\n * A boolean that is true if the message is a tombstone.\n *\n * @deprecated Use ATTR_MESSAGING_KAFKA_MESSAGE_TOMBSTONE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_KAFKA_TOMBSTONE = TMP_MESSAGING_KAFKA_TOMBSTONE;\n\n/**\n * A string identifying the remoting system.\n *\n * @deprecated Use ATTR_RPC_SYSTEM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_RPC_SYSTEM = TMP_RPC_SYSTEM;\n\n/**\n * The full (logical) name of the service being called, including its package name, if applicable.\n *\n * Note: This is the logical name of the service from the RPC interface perspective, which can be different from the name of any implementing class. The `code.namespace` attribute may be used to store the latter (despite the attribute name, it may include a class name; e.g., class with method actually executing the call on the server side, RPC client stub class on the client side).\n *\n * @deprecated Use ATTR_RPC_SERVICE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_RPC_SERVICE = TMP_RPC_SERVICE;\n\n/**\n * The name of the (logical) method being called, must be equal to the $method part in the span name.\n *\n * Note: This is the logical name of the method from the RPC interface perspective, which can be different from the name of any implementing method/function. The `code.function` attribute may be used to store the latter (e.g., method actually executing the call on the server side, RPC client stub method on the client side).\n *\n * @deprecated Use ATTR_RPC_METHOD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_RPC_METHOD = TMP_RPC_METHOD;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use ATTR_RPC_GRPC_STATUS_CODE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_RPC_GRPC_STATUS_CODE = TMP_RPC_GRPC_STATUS_CODE;\n\n/**\n * Protocol version as in `jsonrpc` property of request/response. Since JSON-RPC 1.0 does not specify this, the value can be omitted.\n *\n * @deprecated Use ATTR_RPC_JSONRPC_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_RPC_JSONRPC_VERSION = TMP_RPC_JSONRPC_VERSION;\n\n/**\n * `id` property of request or response. Since protocol allows id to be int, string, `null` or missing (for notifications), value is expected to be cast to string for simplicity. Use empty string in case of `null` value. Omit entirely if this is a notification.\n *\n * @deprecated Use ATTR_RPC_JSONRPC_REQUEST_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_RPC_JSONRPC_REQUEST_ID = TMP_RPC_JSONRPC_REQUEST_ID;\n\n/**\n * `error.code` property of response if it is an error response.\n *\n * @deprecated Use ATTR_RPC_JSONRPC_ERROR_CODE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_RPC_JSONRPC_ERROR_CODE = TMP_RPC_JSONRPC_ERROR_CODE;\n\n/**\n * `error.message` property of response if it is an error response.\n *\n * @deprecated Use ATTR_RPC_JSONRPC_ERROR_MESSAGE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_RPC_JSONRPC_ERROR_MESSAGE = TMP_RPC_JSONRPC_ERROR_MESSAGE;\n\n/**\n * Whether this is a received or sent message.\n *\n * @deprecated Use ATTR_MESSAGE_TYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGE_TYPE = TMP_MESSAGE_TYPE;\n\n/**\n * MUST be calculated as two different counters starting from `1` one for sent messages and one for received message.\n *\n * Note: This way we guarantee that the values will be consistent between different implementations.\n *\n * @deprecated Use ATTR_MESSAGE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGE_ID = TMP_MESSAGE_ID;\n\n/**\n * Compressed size of the message in bytes.\n *\n * @deprecated Use ATTR_MESSAGE_COMPRESSED_SIZE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGE_COMPRESSED_SIZE = TMP_MESSAGE_COMPRESSED_SIZE;\n\n/**\n * Uncompressed size of the message in bytes.\n *\n * @deprecated Use ATTR_MESSAGE_UNCOMPRESSED_SIZE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGE_UNCOMPRESSED_SIZE = TMP_MESSAGE_UNCOMPRESSED_SIZE;\n\n/**\n * Definition of available values for SemanticAttributes\n * This type is used for backward compatibility, you should use the individual exported\n * constants SemanticAttributes_XXXXX rather than the exported constant map. As any single reference\n * to a constant map value will result in all strings being included into your bundle.\n * @deprecated Use the SEMATTRS_XXXXX constants rather than the SemanticAttributes.XXXXX for bundle minification.\n */\nexport type SemanticAttributes = {\n  /**\n   * The full invoked ARN as provided on the `Context` passed to the function (`Lambda-Runtime-Invoked-Function-Arn` header on the `/runtime/invocation/next` applicable).\n   *\n   * Note: This may be different from `faas.id` if an alias is involved.\n   */\n  AWS_LAMBDA_INVOKED_ARN: 'aws.lambda.invoked_arn';\n\n  /**\n   * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n   */\n  DB_SYSTEM: 'db.system';\n\n  /**\n   * The connection string used to connect to the database. It is recommended to remove embedded credentials.\n   */\n  DB_CONNECTION_STRING: 'db.connection_string';\n\n  /**\n   * Username for accessing the database.\n   */\n  DB_USER: 'db.user';\n\n  /**\n   * The fully-qualified class name of the [Java Database Connectivity (JDBC)](https://docs.oracle.com/javase/8/docs/technotes/guides/jdbc/) driver used to connect.\n   */\n  DB_JDBC_DRIVER_CLASSNAME: 'db.jdbc.driver_classname';\n\n  /**\n   * If no [tech-specific attribute](#call-level-attributes-for-specific-technologies) is defined, this attribute is used to report the name of the database being accessed. For commands that switch the database, this should be set to the target database (even if the command fails).\n   *\n   * Note: In some SQL databases, the database name to be used is called &#34;schema name&#34;.\n   */\n  DB_NAME: 'db.name';\n\n  /**\n   * The database statement being executed.\n   *\n   * Note: The value may be sanitized to exclude sensitive information.\n   */\n  DB_STATEMENT: 'db.statement';\n\n  /**\n   * The name of the operation being executed, e.g. the [MongoDB command name](https://docs.mongodb.com/manual/reference/command/#database-operations) such as `findAndModify`, or the SQL keyword.\n   *\n   * Note: When setting this to an SQL keyword, it is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if the operation name is provided by the library being instrumented. If the SQL statement has an ambiguous operation, or performs more than one operation, this value may be omitted.\n   */\n  DB_OPERATION: 'db.operation';\n\n  /**\n   * The Microsoft SQL Server [instance name](https://docs.microsoft.com/en-us/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver15) connecting to. This name is used to determine the port of a named instance.\n   *\n   * Note: If setting a `db.mssql.instance_name`, `net.peer.port` is no longer required (but still recommended if non-standard).\n   */\n  DB_MSSQL_INSTANCE_NAME: 'db.mssql.instance_name';\n\n  /**\n   * The name of the keyspace being accessed. To be used instead of the generic `db.name` attribute.\n   */\n  DB_CASSANDRA_KEYSPACE: 'db.cassandra.keyspace';\n\n  /**\n   * The fetch size used for paging, i.e. how many rows will be returned at once.\n   */\n  DB_CASSANDRA_PAGE_SIZE: 'db.cassandra.page_size';\n\n  /**\n   * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n   */\n  DB_CASSANDRA_CONSISTENCY_LEVEL: 'db.cassandra.consistency_level';\n\n  /**\n   * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n   *\n   * Note: This mirrors the db.sql.table attribute but references cassandra rather than sql. It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n   */\n  DB_CASSANDRA_TABLE: 'db.cassandra.table';\n\n  /**\n   * Whether or not the query is idempotent.\n   */\n  DB_CASSANDRA_IDEMPOTENCE: 'db.cassandra.idempotence';\n\n  /**\n   * The number of times a query was speculatively executed. Not set or `0` if the query was not executed speculatively.\n   */\n  DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT: 'db.cassandra.speculative_execution_count';\n\n  /**\n   * The ID of the coordinating node for a query.\n   */\n  DB_CASSANDRA_COORDINATOR_ID: 'db.cassandra.coordinator.id';\n\n  /**\n   * The data center of the coordinating node for a query.\n   */\n  DB_CASSANDRA_COORDINATOR_DC: 'db.cassandra.coordinator.dc';\n\n  /**\n   * The [HBase namespace](https://hbase.apache.org/book.html#_namespace) being accessed. To be used instead of the generic `db.name` attribute.\n   */\n  DB_HBASE_NAMESPACE: 'db.hbase.namespace';\n\n  /**\n   * The index of the database being accessed as used in the [`SELECT` command](https://redis.io/commands/select), provided as an integer. To be used instead of the generic `db.name` attribute.\n   */\n  DB_REDIS_DATABASE_INDEX: 'db.redis.database_index';\n\n  /**\n   * The collection being accessed within the database stated in `db.name`.\n   */\n  DB_MONGODB_COLLECTION: 'db.mongodb.collection';\n\n  /**\n   * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n   *\n   * Note: It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n   */\n  DB_SQL_TABLE: 'db.sql.table';\n\n  /**\n   * The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.\n   */\n  EXCEPTION_TYPE: 'exception.type';\n\n  /**\n   * The exception message.\n   */\n  EXCEPTION_MESSAGE: 'exception.message';\n\n  /**\n   * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n   */\n  EXCEPTION_STACKTRACE: 'exception.stacktrace';\n\n  /**\n  * SHOULD be set to true if the exception event is recorded at a point where it is known that the exception is escaping the scope of the span.\n  *\n  * Note: An exception is considered to have escaped (or left) the scope of a span,\nif that span is ended while the exception is still logically &#34;in flight&#34;.\nThis may be actually &#34;in flight&#34; in some languages (e.g. if the exception\nis passed to a Context manager&#39;s `__exit__` method in Python) but will\nusually be caught at the point of recording the exception in most languages.\n\nIt is usually not possible to determine at the point where an exception is thrown\nwhether it will escape the scope of a span.\nHowever, it is trivial to know that an exception\nwill escape, if one checks for an active exception just before ending the span,\nas done in the [example above](#exception-end-example).\n\nIt follows that an exception may still escape the scope of the span\neven if the `exception.escaped` attribute was not set or set to false,\nsince the event might have been recorded at a time where it was not\nclear whether the exception will escape.\n  */\n  EXCEPTION_ESCAPED: 'exception.escaped';\n\n  /**\n   * Type of the trigger on which the function is executed.\n   */\n  FAAS_TRIGGER: 'faas.trigger';\n\n  /**\n   * The execution ID of the current function execution.\n   */\n  FAAS_EXECUTION: 'faas.execution';\n\n  /**\n   * The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.\n   */\n  FAAS_DOCUMENT_COLLECTION: 'faas.document.collection';\n\n  /**\n   * Describes the type of the operation that was performed on the data.\n   */\n  FAAS_DOCUMENT_OPERATION: 'faas.document.operation';\n\n  /**\n   * A string containing the time when the data was accessed in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n   */\n  FAAS_DOCUMENT_TIME: 'faas.document.time';\n\n  /**\n   * The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.\n   */\n  FAAS_DOCUMENT_NAME: 'faas.document.name';\n\n  /**\n   * A string containing the function invocation time in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n   */\n  FAAS_TIME: 'faas.time';\n\n  /**\n   * A string containing the schedule period as [Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm).\n   */\n  FAAS_CRON: 'faas.cron';\n\n  /**\n   * A boolean that is true if the serverless function is executed for the first time (aka cold-start).\n   */\n  FAAS_COLDSTART: 'faas.coldstart';\n\n  /**\n   * The name of the invoked function.\n   *\n   * Note: SHOULD be equal to the `faas.name` resource attribute of the invoked function.\n   */\n  FAAS_INVOKED_NAME: 'faas.invoked_name';\n\n  /**\n   * The cloud provider of the invoked function.\n   *\n   * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n   */\n  FAAS_INVOKED_PROVIDER: 'faas.invoked_provider';\n\n  /**\n   * The cloud region of the invoked function.\n   *\n   * Note: SHOULD be equal to the `cloud.region` resource attribute of the invoked function.\n   */\n  FAAS_INVOKED_REGION: 'faas.invoked_region';\n\n  /**\n   * Transport protocol used. See note below.\n   */\n  NET_TRANSPORT: 'net.transport';\n\n  /**\n   * Remote address of the peer (dotted decimal for IPv4 or [RFC5952](https://tools.ietf.org/html/rfc5952) for IPv6).\n   */\n  NET_PEER_IP: 'net.peer.ip';\n\n  /**\n   * Remote port number.\n   */\n  NET_PEER_PORT: 'net.peer.port';\n\n  /**\n   * Remote hostname or similar, see note below.\n   */\n  NET_PEER_NAME: 'net.peer.name';\n\n  /**\n   * Like `net.peer.ip` but for the host IP. Useful in case of a multi-IP host.\n   */\n  NET_HOST_IP: 'net.host.ip';\n\n  /**\n   * Like `net.peer.port` but for the host port.\n   */\n  NET_HOST_PORT: 'net.host.port';\n\n  /**\n   * Local hostname or similar, see note below.\n   */\n  NET_HOST_NAME: 'net.host.name';\n\n  /**\n   * The internet connection type currently being used by the host.\n   */\n  NET_HOST_CONNECTION_TYPE: 'net.host.connection.type';\n\n  /**\n   * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n   */\n  NET_HOST_CONNECTION_SUBTYPE: 'net.host.connection.subtype';\n\n  /**\n   * The name of the mobile carrier.\n   */\n  NET_HOST_CARRIER_NAME: 'net.host.carrier.name';\n\n  /**\n   * The mobile carrier country code.\n   */\n  NET_HOST_CARRIER_MCC: 'net.host.carrier.mcc';\n\n  /**\n   * The mobile carrier network code.\n   */\n  NET_HOST_CARRIER_MNC: 'net.host.carrier.mnc';\n\n  /**\n   * The ISO 3166-1 alpha-2 2-character country code associated with the mobile carrier network.\n   */\n  NET_HOST_CARRIER_ICC: 'net.host.carrier.icc';\n\n  /**\n   * The [`service.name`](../../resource/semantic_conventions/README.md#service) of the remote service. SHOULD be equal to the actual `service.name` resource attribute of the remote service if any.\n   */\n  PEER_SERVICE: 'peer.service';\n\n  /**\n   * Username or client_id extracted from the access token or [Authorization](https://tools.ietf.org/html/rfc7235#section-4.2) header in the inbound request from outside the system.\n   */\n  ENDUSER_ID: 'enduser.id';\n\n  /**\n   * Actual/assumed role the client is making the request under extracted from token or application security context.\n   */\n  ENDUSER_ROLE: 'enduser.role';\n\n  /**\n   * Scopes or granted authorities the client currently possesses extracted from token or application security context. The value would come from the scope associated with an [OAuth 2.0 Access Token](https://tools.ietf.org/html/rfc6749#section-3.3) or an attribute value in a [SAML 2.0 Assertion](http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html).\n   */\n  ENDUSER_SCOPE: 'enduser.scope';\n\n  /**\n   * Current &#34;managed&#34; thread ID (as opposed to OS thread ID).\n   */\n  THREAD_ID: 'thread.id';\n\n  /**\n   * Current thread name.\n   */\n  THREAD_NAME: 'thread.name';\n\n  /**\n   * The method or function name, or equivalent (usually rightmost part of the code unit&#39;s name).\n   */\n  CODE_FUNCTION: 'code.function';\n\n  /**\n   * The &#34;namespace&#34; within which `code.function` is defined. Usually the qualified class or module name, such that `code.namespace` + some separator + `code.function` form a unique identifier for the code unit.\n   */\n  CODE_NAMESPACE: 'code.namespace';\n\n  /**\n   * The source code file name that identifies the code unit as uniquely as possible (preferably an absolute file path).\n   */\n  CODE_FILEPATH: 'code.filepath';\n\n  /**\n   * The line number in `code.filepath` best representing the operation. It SHOULD point within the code unit named in `code.function`.\n   */\n  CODE_LINENO: 'code.lineno';\n\n  /**\n   * HTTP request method.\n   */\n  HTTP_METHOD: 'http.method';\n\n  /**\n   * Full HTTP request URL in the form `scheme://host[:port]/path?query[#fragment]`. Usually the fragment is not transmitted over HTTP, but if it is known, it should be included nevertheless.\n   *\n   * Note: `http.url` MUST NOT contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case the attribute&#39;s value should be `https://www.example.com/`.\n   */\n  HTTP_URL: 'http.url';\n\n  /**\n   * The full request target as passed in a HTTP request line or equivalent.\n   */\n  HTTP_TARGET: 'http.target';\n\n  /**\n   * The value of the [HTTP host header](https://tools.ietf.org/html/rfc7230#section-5.4). An empty Host header should also be reported, see note.\n   *\n   * Note: When the header is present but empty the attribute SHOULD be set to the empty string. Note that this is a valid situation that is expected in certain cases, according the aforementioned [section of RFC 7230](https://tools.ietf.org/html/rfc7230#section-5.4). When the header is not set the attribute MUST NOT be set.\n   */\n  HTTP_HOST: 'http.host';\n\n  /**\n   * The URI scheme identifying the used protocol.\n   */\n  HTTP_SCHEME: 'http.scheme';\n\n  /**\n   * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n   */\n  HTTP_STATUS_CODE: 'http.status_code';\n\n  /**\n   * Kind of HTTP protocol used.\n   *\n   * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n   */\n  HTTP_FLAVOR: 'http.flavor';\n\n  /**\n   * Value of the [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3) header sent by the client.\n   */\n  HTTP_USER_AGENT: 'http.user_agent';\n\n  /**\n   * The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n   */\n  HTTP_REQUEST_CONTENT_LENGTH: 'http.request_content_length';\n\n  /**\n   * The size of the uncompressed request payload body after transport decoding. Not set if transport encoding not used.\n   */\n  HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED: 'http.request_content_length_uncompressed';\n\n  /**\n   * The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n   */\n  HTTP_RESPONSE_CONTENT_LENGTH: 'http.response_content_length';\n\n  /**\n   * The size of the uncompressed response payload body after transport decoding. Not set if transport encoding not used.\n   */\n  HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED: 'http.response_content_length_uncompressed';\n\n  /**\n   * The primary server name of the matched virtual host. This should be obtained via configuration. If no such configuration can be obtained, this attribute MUST NOT be set ( `net.host.name` should be used instead).\n   *\n   * Note: `http.url` is usually not readily available on the server side but would have to be assembled in a cumbersome and sometimes lossy process from other information (see e.g. open-telemetry/opentelemetry-python/pull/148). It is thus preferred to supply the raw data that is available.\n   */\n  HTTP_SERVER_NAME: 'http.server_name';\n\n  /**\n   * The matched route (path template).\n   */\n  HTTP_ROUTE: 'http.route';\n\n  /**\n  * The IP address of the original client behind all proxies, if known (e.g. from [X-Forwarded-For](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For)).\n  *\n  * Note: This is not necessarily the same as `net.peer.ip`, which would\nidentify the network-level peer, which may be a proxy.\n\nThis attribute should be set when a source of information different\nfrom the one used for `net.peer.ip`, is available even if that other\nsource just confirms the same value as `net.peer.ip`.\nRationale: For `net.peer.ip`, one typically does not know if it\ncomes from a proxy, reverse proxy, or the actual client. Setting\n`http.client_ip` when it&#39;s the same as `net.peer.ip` means that\none is at least somewhat confident that the address is not that of\nthe closest proxy.\n  */\n  HTTP_CLIENT_IP: 'http.client_ip';\n\n  /**\n   * The keys in the `RequestItems` object field.\n   */\n  AWS_DYNAMODB_TABLE_NAMES: 'aws.dynamodb.table_names';\n\n  /**\n   * The JSON-serialized value of each item in the `ConsumedCapacity` response field.\n   */\n  AWS_DYNAMODB_CONSUMED_CAPACITY: 'aws.dynamodb.consumed_capacity';\n\n  /**\n   * The JSON-serialized value of the `ItemCollectionMetrics` response field.\n   */\n  AWS_DYNAMODB_ITEM_COLLECTION_METRICS: 'aws.dynamodb.item_collection_metrics';\n\n  /**\n   * The value of the `ProvisionedThroughput.ReadCapacityUnits` request parameter.\n   */\n  AWS_DYNAMODB_PROVISIONED_READ_CAPACITY: 'aws.dynamodb.provisioned_read_capacity';\n\n  /**\n   * The value of the `ProvisionedThroughput.WriteCapacityUnits` request parameter.\n   */\n  AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY: 'aws.dynamodb.provisioned_write_capacity';\n\n  /**\n   * The value of the `ConsistentRead` request parameter.\n   */\n  AWS_DYNAMODB_CONSISTENT_READ: 'aws.dynamodb.consistent_read';\n\n  /**\n   * The value of the `ProjectionExpression` request parameter.\n   */\n  AWS_DYNAMODB_PROJECTION: 'aws.dynamodb.projection';\n\n  /**\n   * The value of the `Limit` request parameter.\n   */\n  AWS_DYNAMODB_LIMIT: 'aws.dynamodb.limit';\n\n  /**\n   * The value of the `AttributesToGet` request parameter.\n   */\n  AWS_DYNAMODB_ATTRIBUTES_TO_GET: 'aws.dynamodb.attributes_to_get';\n\n  /**\n   * The value of the `IndexName` request parameter.\n   */\n  AWS_DYNAMODB_INDEX_NAME: 'aws.dynamodb.index_name';\n\n  /**\n   * The value of the `Select` request parameter.\n   */\n  AWS_DYNAMODB_SELECT: 'aws.dynamodb.select';\n\n  /**\n   * The JSON-serialized value of each item of the `GlobalSecondaryIndexes` request field.\n   */\n  AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES: 'aws.dynamodb.global_secondary_indexes';\n\n  /**\n   * The JSON-serialized value of each item of the `LocalSecondaryIndexes` request field.\n   */\n  AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES: 'aws.dynamodb.local_secondary_indexes';\n\n  /**\n   * The value of the `ExclusiveStartTableName` request parameter.\n   */\n  AWS_DYNAMODB_EXCLUSIVE_START_TABLE: 'aws.dynamodb.exclusive_start_table';\n\n  /**\n   * The the number of items in the `TableNames` response parameter.\n   */\n  AWS_DYNAMODB_TABLE_COUNT: 'aws.dynamodb.table_count';\n\n  /**\n   * The value of the `ScanIndexForward` request parameter.\n   */\n  AWS_DYNAMODB_SCAN_FORWARD: 'aws.dynamodb.scan_forward';\n\n  /**\n   * The value of the `Segment` request parameter.\n   */\n  AWS_DYNAMODB_SEGMENT: 'aws.dynamodb.segment';\n\n  /**\n   * The value of the `TotalSegments` request parameter.\n   */\n  AWS_DYNAMODB_TOTAL_SEGMENTS: 'aws.dynamodb.total_segments';\n\n  /**\n   * The value of the `Count` response parameter.\n   */\n  AWS_DYNAMODB_COUNT: 'aws.dynamodb.count';\n\n  /**\n   * The value of the `ScannedCount` response parameter.\n   */\n  AWS_DYNAMODB_SCANNED_COUNT: 'aws.dynamodb.scanned_count';\n\n  /**\n   * The JSON-serialized value of each item in the `AttributeDefinitions` request field.\n   */\n  AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS: 'aws.dynamodb.attribute_definitions';\n\n  /**\n   * The JSON-serialized value of each item in the the `GlobalSecondaryIndexUpdates` request field.\n   */\n  AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES: 'aws.dynamodb.global_secondary_index_updates';\n\n  /**\n   * A string identifying the messaging system.\n   */\n  MESSAGING_SYSTEM: 'messaging.system';\n\n  /**\n   * The message destination name. This might be equal to the span name but is required nevertheless.\n   */\n  MESSAGING_DESTINATION: 'messaging.destination';\n\n  /**\n   * The kind of message destination.\n   */\n  MESSAGING_DESTINATION_KIND: 'messaging.destination_kind';\n\n  /**\n   * A boolean that is true if the message destination is temporary.\n   */\n  MESSAGING_TEMP_DESTINATION: 'messaging.temp_destination';\n\n  /**\n   * The name of the transport protocol.\n   */\n  MESSAGING_PROTOCOL: 'messaging.protocol';\n\n  /**\n   * The version of the transport protocol.\n   */\n  MESSAGING_PROTOCOL_VERSION: 'messaging.protocol_version';\n\n  /**\n   * Connection string.\n   */\n  MESSAGING_URL: 'messaging.url';\n\n  /**\n   * A value used by the messaging system as an identifier for the message, represented as a string.\n   */\n  MESSAGING_MESSAGE_ID: 'messaging.message_id';\n\n  /**\n   * The [conversation ID](#conversations) identifying the conversation to which the message belongs, represented as a string. Sometimes called &#34;Correlation ID&#34;.\n   */\n  MESSAGING_CONVERSATION_ID: 'messaging.conversation_id';\n\n  /**\n   * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is unknown whether the compressed or uncompressed payload size is reported.\n   */\n  MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES: 'messaging.message_payload_size_bytes';\n\n  /**\n   * The compressed size of the message payload in bytes.\n   */\n  MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES: 'messaging.message_payload_compressed_size_bytes';\n\n  /**\n   * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n   */\n  MESSAGING_OPERATION: 'messaging.operation';\n\n  /**\n   * The identifier for the consumer receiving a message. For Kafka, set it to `{messaging.kafka.consumer_group} - {messaging.kafka.client_id}`, if both are present, or only `messaging.kafka.consumer_group`. For brokers, such as RabbitMQ and Artemis, set it to the `client_id` of the client consuming the message.\n   */\n  MESSAGING_CONSUMER_ID: 'messaging.consumer_id';\n\n  /**\n   * RabbitMQ message routing key.\n   */\n  MESSAGING_RABBITMQ_ROUTING_KEY: 'messaging.rabbitmq.routing_key';\n\n  /**\n   * Message keys in Kafka are used for grouping alike messages to ensure they&#39;re processed on the same partition. They differ from `messaging.message_id` in that they&#39;re not unique. If the key is `null`, the attribute MUST NOT be set.\n   *\n   * Note: If the key type is not string, it&#39;s string representation has to be supplied for the attribute. If the key has no unambiguous, canonical string form, don&#39;t include its value.\n   */\n  MESSAGING_KAFKA_MESSAGE_KEY: 'messaging.kafka.message_key';\n\n  /**\n   * Name of the Kafka Consumer Group that is handling the message. Only applies to consumers, not producers.\n   */\n  MESSAGING_KAFKA_CONSUMER_GROUP: 'messaging.kafka.consumer_group';\n\n  /**\n   * Client Id for the Consumer or Producer that is handling the message.\n   */\n  MESSAGING_KAFKA_CLIENT_ID: 'messaging.kafka.client_id';\n\n  /**\n   * Partition the message is sent to.\n   */\n  MESSAGING_KAFKA_PARTITION: 'messaging.kafka.partition';\n\n  /**\n   * A boolean that is true if the message is a tombstone.\n   */\n  MESSAGING_KAFKA_TOMBSTONE: 'messaging.kafka.tombstone';\n\n  /**\n   * A string identifying the remoting system.\n   */\n  RPC_SYSTEM: 'rpc.system';\n\n  /**\n   * The full (logical) name of the service being called, including its package name, if applicable.\n   *\n   * Note: This is the logical name of the service from the RPC interface perspective, which can be different from the name of any implementing class. The `code.namespace` attribute may be used to store the latter (despite the attribute name, it may include a class name; e.g., class with method actually executing the call on the server side, RPC client stub class on the client side).\n   */\n  RPC_SERVICE: 'rpc.service';\n\n  /**\n   * The name of the (logical) method being called, must be equal to the $method part in the span name.\n   *\n   * Note: This is the logical name of the method from the RPC interface perspective, which can be different from the name of any implementing method/function. The `code.function` attribute may be used to store the latter (e.g., method actually executing the call on the server side, RPC client stub method on the client side).\n   */\n  RPC_METHOD: 'rpc.method';\n\n  /**\n   * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n   */\n  RPC_GRPC_STATUS_CODE: 'rpc.grpc.status_code';\n\n  /**\n   * Protocol version as in `jsonrpc` property of request/response. Since JSON-RPC 1.0 does not specify this, the value can be omitted.\n   */\n  RPC_JSONRPC_VERSION: 'rpc.jsonrpc.version';\n\n  /**\n   * `id` property of request or response. Since protocol allows id to be int, string, `null` or missing (for notifications), value is expected to be cast to string for simplicity. Use empty string in case of `null` value. Omit entirely if this is a notification.\n   */\n  RPC_JSONRPC_REQUEST_ID: 'rpc.jsonrpc.request_id';\n\n  /**\n   * `error.code` property of response if it is an error response.\n   */\n  RPC_JSONRPC_ERROR_CODE: 'rpc.jsonrpc.error_code';\n\n  /**\n   * `error.message` property of response if it is an error response.\n   */\n  RPC_JSONRPC_ERROR_MESSAGE: 'rpc.jsonrpc.error_message';\n\n  /**\n   * Whether this is a received or sent message.\n   */\n  MESSAGE_TYPE: 'message.type';\n\n  /**\n   * MUST be calculated as two different counters starting from `1` one for sent messages and one for received message.\n   *\n   * Note: This way we guarantee that the values will be consistent between different implementations.\n   */\n  MESSAGE_ID: 'message.id';\n\n  /**\n   * Compressed size of the message in bytes.\n   */\n  MESSAGE_COMPRESSED_SIZE: 'message.compressed_size';\n\n  /**\n   * Uncompressed size of the message in bytes.\n   */\n  MESSAGE_UNCOMPRESSED_SIZE: 'message.uncompressed_size';\n};\n\n/**\n * Create exported Value Map for SemanticAttributes values\n * @deprecated Use the SEMATTRS_XXXXX constants rather than the SemanticAttributes.XXXXX for bundle minification\n */\nexport const SemanticAttributes: SemanticAttributes =\n  /*#__PURE__*/ createConstMap<SemanticAttributes>([\n    TMP_AWS_LAMBDA_INVOKED_ARN,\n    TMP_DB_SYSTEM,\n    TMP_DB_CONNECTION_STRING,\n    TMP_DB_USER,\n    TMP_DB_JDBC_DRIVER_CLASSNAME,\n    TMP_DB_NAME,\n    TMP_DB_STATEMENT,\n    TMP_DB_OPERATION,\n    TMP_DB_MSSQL_INSTANCE_NAME,\n    TMP_DB_CASSANDRA_KEYSPACE,\n    TMP_DB_CASSANDRA_PAGE_SIZE,\n    TMP_DB_CASSANDRA_CONSISTENCY_LEVEL,\n    TMP_DB_CASSANDRA_TABLE,\n    TMP_DB_CASSANDRA_IDEMPOTENCE,\n    TMP_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT,\n    TMP_DB_CASSANDRA_COORDINATOR_ID,\n    TMP_DB_CASSANDRA_COORDINATOR_DC,\n    TMP_DB_HBASE_NAMESPACE,\n    TMP_DB_REDIS_DATABASE_INDEX,\n    TMP_DB_MONGODB_COLLECTION,\n    TMP_DB_SQL_TABLE,\n    TMP_EXCEPTION_TYPE,\n    TMP_EXCEPTION_MESSAGE,\n    TMP_EXCEPTION_STACKTRACE,\n    TMP_EXCEPTION_ESCAPED,\n    TMP_FAAS_TRIGGER,\n    TMP_FAAS_EXECUTION,\n    TMP_FAAS_DOCUMENT_COLLECTION,\n    TMP_FAAS_DOCUMENT_OPERATION,\n    TMP_FAAS_DOCUMENT_TIME,\n    TMP_FAAS_DOCUMENT_NAME,\n    TMP_FAAS_TIME,\n    TMP_FAAS_CRON,\n    TMP_FAAS_COLDSTART,\n    TMP_FAAS_INVOKED_NAME,\n    TMP_FAAS_INVOKED_PROVIDER,\n    TMP_FAAS_INVOKED_REGION,\n    TMP_NET_TRANSPORT,\n    TMP_NET_PEER_IP,\n    TMP_NET_PEER_PORT,\n    TMP_NET_PEER_NAME,\n    TMP_NET_HOST_IP,\n    TMP_NET_HOST_PORT,\n    TMP_NET_HOST_NAME,\n    TMP_NET_HOST_CONNECTION_TYPE,\n    TMP_NET_HOST_CONNECTION_SUBTYPE,\n    TMP_NET_HOST_CARRIER_NAME,\n    TMP_NET_HOST_CARRIER_MCC,\n    TMP_NET_HOST_CARRIER_MNC,\n    TMP_NET_HOST_CARRIER_ICC,\n    TMP_PEER_SERVICE,\n    TMP_ENDUSER_ID,\n    TMP_ENDUSER_ROLE,\n    TMP_ENDUSER_SCOPE,\n    TMP_THREAD_ID,\n    TMP_THREAD_NAME,\n    TMP_CODE_FUNCTION,\n    TMP_CODE_NAMESPACE,\n    TMP_CODE_FILEPATH,\n    TMP_CODE_LINENO,\n    TMP_HTTP_METHOD,\n    TMP_HTTP_URL,\n    TMP_HTTP_TARGET,\n    TMP_HTTP_HOST,\n    TMP_HTTP_SCHEME,\n    TMP_HTTP_STATUS_CODE,\n    TMP_HTTP_FLAVOR,\n    TMP_HTTP_USER_AGENT,\n    TMP_HTTP_REQUEST_CONTENT_LENGTH,\n    TMP_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED,\n    TMP_HTTP_RESPONSE_CONTENT_LENGTH,\n    TMP_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED,\n    TMP_HTTP_SERVER_NAME,\n    TMP_HTTP_ROUTE,\n    TMP_HTTP_CLIENT_IP,\n    TMP_AWS_DYNAMODB_TABLE_NAMES,\n    TMP_AWS_DYNAMODB_CONSUMED_CAPACITY,\n    TMP_AWS_DYNAMODB_ITEM_COLLECTION_METRICS,\n    TMP_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY,\n    TMP_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY,\n    TMP_AWS_DYNAMODB_CONSISTENT_READ,\n    TMP_AWS_DYNAMODB_PROJECTION,\n    TMP_AWS_DYNAMODB_LIMIT,\n    TMP_AWS_DYNAMODB_ATTRIBUTES_TO_GET,\n    TMP_AWS_DYNAMODB_INDEX_NAME,\n    TMP_AWS_DYNAMODB_SELECT,\n    TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES,\n    TMP_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES,\n    TMP_AWS_DYNAMODB_EXCLUSIVE_START_TABLE,\n    TMP_AWS_DYNAMODB_TABLE_COUNT,\n    TMP_AWS_DYNAMODB_SCAN_FORWARD,\n    TMP_AWS_DYNAMODB_SEGMENT,\n    TMP_AWS_DYNAMODB_TOTAL_SEGMENTS,\n    TMP_AWS_DYNAMODB_COUNT,\n    TMP_AWS_DYNAMODB_SCANNED_COUNT,\n    TMP_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS,\n    TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES,\n    TMP_MESSAGING_SYSTEM,\n    TMP_MESSAGING_DESTINATION,\n    TMP_MESSAGING_DESTINATION_KIND,\n    TMP_MESSAGING_TEMP_DESTINATION,\n    TMP_MESSAGING_PROTOCOL,\n    TMP_MESSAGING_PROTOCOL_VERSION,\n    TMP_MESSAGING_URL,\n    TMP_MESSAGING_MESSAGE_ID,\n    TMP_MESSAGING_CONVERSATION_ID,\n    TMP_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES,\n    TMP_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES,\n    TMP_MESSAGING_OPERATION,\n    TMP_MESSAGING_CONSUMER_ID,\n    TMP_MESSAGING_RABBITMQ_ROUTING_KEY,\n    TMP_MESSAGING_KAFKA_MESSAGE_KEY,\n    TMP_MESSAGING_KAFKA_CONSUMER_GROUP,\n    TMP_MESSAGING_KAFKA_CLIENT_ID,\n    TMP_MESSAGING_KAFKA_PARTITION,\n    TMP_MESSAGING_KAFKA_TOMBSTONE,\n    TMP_RPC_SYSTEM,\n    TMP_RPC_SERVICE,\n    TMP_RPC_METHOD,\n    TMP_RPC_GRPC_STATUS_CODE,\n    TMP_RPC_JSONRPC_VERSION,\n    TMP_RPC_JSONRPC_REQUEST_ID,\n    TMP_RPC_JSONRPC_ERROR_CODE,\n    TMP_RPC_JSONRPC_ERROR_MESSAGE,\n    TMP_MESSAGE_TYPE,\n    TMP_MESSAGE_ID,\n    TMP_MESSAGE_COMPRESSED_SIZE,\n    TMP_MESSAGE_UNCOMPRESSED_SIZE,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for DbSystemValues enum definition\n *\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_DBSYSTEMVALUES_OTHER_SQL = 'other_sql';\nconst TMP_DBSYSTEMVALUES_MSSQL = 'mssql';\nconst TMP_DBSYSTEMVALUES_MYSQL = 'mysql';\nconst TMP_DBSYSTEMVALUES_ORACLE = 'oracle';\nconst TMP_DBSYSTEMVALUES_DB2 = 'db2';\nconst TMP_DBSYSTEMVALUES_POSTGRESQL = 'postgresql';\nconst TMP_DBSYSTEMVALUES_REDSHIFT = 'redshift';\nconst TMP_DBSYSTEMVALUES_HIVE = 'hive';\nconst TMP_DBSYSTEMVALUES_CLOUDSCAPE = 'cloudscape';\nconst TMP_DBSYSTEMVALUES_HSQLDB = 'hsqldb';\nconst TMP_DBSYSTEMVALUES_PROGRESS = 'progress';\nconst TMP_DBSYSTEMVALUES_MAXDB = 'maxdb';\nconst TMP_DBSYSTEMVALUES_HANADB = 'hanadb';\nconst TMP_DBSYSTEMVALUES_INGRES = 'ingres';\nconst TMP_DBSYSTEMVALUES_FIRSTSQL = 'firstsql';\nconst TMP_DBSYSTEMVALUES_EDB = 'edb';\nconst TMP_DBSYSTEMVALUES_CACHE = 'cache';\nconst TMP_DBSYSTEMVALUES_ADABAS = 'adabas';\nconst TMP_DBSYSTEMVALUES_FIREBIRD = 'firebird';\nconst TMP_DBSYSTEMVALUES_DERBY = 'derby';\nconst TMP_DBSYSTEMVALUES_FILEMAKER = 'filemaker';\nconst TMP_DBSYSTEMVALUES_INFORMIX = 'informix';\nconst TMP_DBSYSTEMVALUES_INSTANTDB = 'instantdb';\nconst TMP_DBSYSTEMVALUES_INTERBASE = 'interbase';\nconst TMP_DBSYSTEMVALUES_MARIADB = 'mariadb';\nconst TMP_DBSYSTEMVALUES_NETEZZA = 'netezza';\nconst TMP_DBSYSTEMVALUES_PERVASIVE = 'pervasive';\nconst TMP_DBSYSTEMVALUES_POINTBASE = 'pointbase';\nconst TMP_DBSYSTEMVALUES_SQLITE = 'sqlite';\nconst TMP_DBSYSTEMVALUES_SYBASE = 'sybase';\nconst TMP_DBSYSTEMVALUES_TERADATA = 'teradata';\nconst TMP_DBSYSTEMVALUES_VERTICA = 'vertica';\nconst TMP_DBSYSTEMVALUES_H2 = 'h2';\nconst TMP_DBSYSTEMVALUES_COLDFUSION = 'coldfusion';\nconst TMP_DBSYSTEMVALUES_CASSANDRA = 'cassandra';\nconst TMP_DBSYSTEMVALUES_HBASE = 'hbase';\nconst TMP_DBSYSTEMVALUES_MONGODB = 'mongodb';\nconst TMP_DBSYSTEMVALUES_REDIS = 'redis';\nconst TMP_DBSYSTEMVALUES_COUCHBASE = 'couchbase';\nconst TMP_DBSYSTEMVALUES_COUCHDB = 'couchdb';\nconst TMP_DBSYSTEMVALUES_COSMOSDB = 'cosmosdb';\nconst TMP_DBSYSTEMVALUES_DYNAMODB = 'dynamodb';\nconst TMP_DBSYSTEMVALUES_NEO4J = 'neo4j';\nconst TMP_DBSYSTEMVALUES_GEODE = 'geode';\nconst TMP_DBSYSTEMVALUES_ELASTICSEARCH = 'elasticsearch';\nconst TMP_DBSYSTEMVALUES_MEMCACHED = 'memcached';\nconst TMP_DBSYSTEMVALUES_COCKROACHDB = 'cockroachdb';\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_OTHER_SQL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_OTHER_SQL = TMP_DBSYSTEMVALUES_OTHER_SQL;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MSSQL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_MSSQL = TMP_DBSYSTEMVALUES_MSSQL;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MYSQL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_MYSQL = TMP_DBSYSTEMVALUES_MYSQL;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_ORACLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_ORACLE = TMP_DBSYSTEMVALUES_ORACLE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_DB2 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_DB2 = TMP_DBSYSTEMVALUES_DB2;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_POSTGRESQL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_POSTGRESQL = TMP_DBSYSTEMVALUES_POSTGRESQL;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_REDSHIFT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_REDSHIFT = TMP_DBSYSTEMVALUES_REDSHIFT;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HIVE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_HIVE = TMP_DBSYSTEMVALUES_HIVE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_CLOUDSCAPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_CLOUDSCAPE = TMP_DBSYSTEMVALUES_CLOUDSCAPE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HSQLDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_HSQLDB = TMP_DBSYSTEMVALUES_HSQLDB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_PROGRESS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_PROGRESS = TMP_DBSYSTEMVALUES_PROGRESS;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MAXDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_MAXDB = TMP_DBSYSTEMVALUES_MAXDB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HANADB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_HANADB = TMP_DBSYSTEMVALUES_HANADB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INGRES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_INGRES = TMP_DBSYSTEMVALUES_INGRES;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_FIRSTSQL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_FIRSTSQL = TMP_DBSYSTEMVALUES_FIRSTSQL;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_EDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_EDB = TMP_DBSYSTEMVALUES_EDB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_CACHE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_CACHE = TMP_DBSYSTEMVALUES_CACHE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_ADABAS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_ADABAS = TMP_DBSYSTEMVALUES_ADABAS;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_FIREBIRD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_FIREBIRD = TMP_DBSYSTEMVALUES_FIREBIRD;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_DERBY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_DERBY = TMP_DBSYSTEMVALUES_DERBY;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_FILEMAKER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_FILEMAKER = TMP_DBSYSTEMVALUES_FILEMAKER;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INFORMIX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_INFORMIX = TMP_DBSYSTEMVALUES_INFORMIX;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INSTANTDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_INSTANTDB = TMP_DBSYSTEMVALUES_INSTANTDB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INTERBASE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_INTERBASE = TMP_DBSYSTEMVALUES_INTERBASE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MARIADB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_MARIADB = TMP_DBSYSTEMVALUES_MARIADB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_NETEZZA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_NETEZZA = TMP_DBSYSTEMVALUES_NETEZZA;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_PERVASIVE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_PERVASIVE = TMP_DBSYSTEMVALUES_PERVASIVE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_POINTBASE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_POINTBASE = TMP_DBSYSTEMVALUES_POINTBASE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_SQLITE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_SQLITE = TMP_DBSYSTEMVALUES_SQLITE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_SYBASE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_SYBASE = TMP_DBSYSTEMVALUES_SYBASE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_TERADATA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_TERADATA = TMP_DBSYSTEMVALUES_TERADATA;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_VERTICA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_VERTICA = TMP_DBSYSTEMVALUES_VERTICA;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_H2 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_H2 = TMP_DBSYSTEMVALUES_H2;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COLDFUSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_COLDFUSION = TMP_DBSYSTEMVALUES_COLDFUSION;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_CASSANDRA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_CASSANDRA = TMP_DBSYSTEMVALUES_CASSANDRA;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HBASE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_HBASE = TMP_DBSYSTEMVALUES_HBASE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MONGODB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_MONGODB = TMP_DBSYSTEMVALUES_MONGODB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_REDIS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_REDIS = TMP_DBSYSTEMVALUES_REDIS;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COUCHBASE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_COUCHBASE = TMP_DBSYSTEMVALUES_COUCHBASE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COUCHDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_COUCHDB = TMP_DBSYSTEMVALUES_COUCHDB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COSMOSDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_COSMOSDB = TMP_DBSYSTEMVALUES_COSMOSDB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_DYNAMODB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_DYNAMODB = TMP_DBSYSTEMVALUES_DYNAMODB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_NEO4J in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_NEO4J = TMP_DBSYSTEMVALUES_NEO4J;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_GEODE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_GEODE = TMP_DBSYSTEMVALUES_GEODE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_ELASTICSEARCH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_ELASTICSEARCH = TMP_DBSYSTEMVALUES_ELASTICSEARCH;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MEMCACHED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_MEMCACHED = TMP_DBSYSTEMVALUES_MEMCACHED;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COCKROACHDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_COCKROACHDB = TMP_DBSYSTEMVALUES_COCKROACHDB;\n\n/**\n * Identifies the Values for DbSystemValues enum definition\n *\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n * @deprecated Use the DBSYSTEMVALUES_XXXXX constants rather than the DbSystemValues.XXXXX for bundle minification.\n */\nexport type DbSystemValues = {\n  /** Some other SQL database. Fallback only. See notes. */\n  OTHER_SQL: 'other_sql';\n\n  /** Microsoft SQL Server. */\n  MSSQL: 'mssql';\n\n  /** MySQL. */\n  MYSQL: 'mysql';\n\n  /** Oracle Database. */\n  ORACLE: 'oracle';\n\n  /** IBM Db2. */\n  DB2: 'db2';\n\n  /** PostgreSQL. */\n  POSTGRESQL: 'postgresql';\n\n  /** Amazon Redshift. */\n  REDSHIFT: 'redshift';\n\n  /** Apache Hive. */\n  HIVE: 'hive';\n\n  /** Cloudscape. */\n  CLOUDSCAPE: 'cloudscape';\n\n  /** HyperSQL DataBase. */\n  HSQLDB: 'hsqldb';\n\n  /** Progress Database. */\n  PROGRESS: 'progress';\n\n  /** SAP MaxDB. */\n  MAXDB: 'maxdb';\n\n  /** SAP HANA. */\n  HANADB: 'hanadb';\n\n  /** Ingres. */\n  INGRES: 'ingres';\n\n  /** FirstSQL. */\n  FIRSTSQL: 'firstsql';\n\n  /** EnterpriseDB. */\n  EDB: 'edb';\n\n  /** InterSystems Caché. */\n  CACHE: 'cache';\n\n  /** Adabas (Adaptable Database System). */\n  ADABAS: 'adabas';\n\n  /** Firebird. */\n  FIREBIRD: 'firebird';\n\n  /** Apache Derby. */\n  DERBY: 'derby';\n\n  /** FileMaker. */\n  FILEMAKER: 'filemaker';\n\n  /** Informix. */\n  INFORMIX: 'informix';\n\n  /** InstantDB. */\n  INSTANTDB: 'instantdb';\n\n  /** InterBase. */\n  INTERBASE: 'interbase';\n\n  /** MariaDB. */\n  MARIADB: 'mariadb';\n\n  /** Netezza. */\n  NETEZZA: 'netezza';\n\n  /** Pervasive PSQL. */\n  PERVASIVE: 'pervasive';\n\n  /** PointBase. */\n  POINTBASE: 'pointbase';\n\n  /** SQLite. */\n  SQLITE: 'sqlite';\n\n  /** Sybase. */\n  SYBASE: 'sybase';\n\n  /** Teradata. */\n  TERADATA: 'teradata';\n\n  /** Vertica. */\n  VERTICA: 'vertica';\n\n  /** H2. */\n  H2: 'h2';\n\n  /** ColdFusion IMQ. */\n  COLDFUSION: 'coldfusion';\n\n  /** Apache Cassandra. */\n  CASSANDRA: 'cassandra';\n\n  /** Apache HBase. */\n  HBASE: 'hbase';\n\n  /** MongoDB. */\n  MONGODB: 'mongodb';\n\n  /** Redis. */\n  REDIS: 'redis';\n\n  /** Couchbase. */\n  COUCHBASE: 'couchbase';\n\n  /** CouchDB. */\n  COUCHDB: 'couchdb';\n\n  /** Microsoft Azure Cosmos DB. */\n  COSMOSDB: 'cosmosdb';\n\n  /** Amazon DynamoDB. */\n  DYNAMODB: 'dynamodb';\n\n  /** Neo4j. */\n  NEO4J: 'neo4j';\n\n  /** Apache Geode. */\n  GEODE: 'geode';\n\n  /** Elasticsearch. */\n  ELASTICSEARCH: 'elasticsearch';\n\n  /** Memcached. */\n  MEMCACHED: 'memcached';\n\n  /** CockroachDB. */\n  COCKROACHDB: 'cockroachdb';\n};\n\n/**\n * The constant map of values for DbSystemValues.\n * @deprecated Use the DBSYSTEMVALUES_XXXXX constants rather than the DbSystemValues.XXXXX for bundle minification.\n */\nexport const DbSystemValues: DbSystemValues =\n  /*#__PURE__*/ createConstMap<DbSystemValues>([\n    TMP_DBSYSTEMVALUES_OTHER_SQL,\n    TMP_DBSYSTEMVALUES_MSSQL,\n    TMP_DBSYSTEMVALUES_MYSQL,\n    TMP_DBSYSTEMVALUES_ORACLE,\n    TMP_DBSYSTEMVALUES_DB2,\n    TMP_DBSYSTEMVALUES_POSTGRESQL,\n    TMP_DBSYSTEMVALUES_REDSHIFT,\n    TMP_DBSYSTEMVALUES_HIVE,\n    TMP_DBSYSTEMVALUES_CLOUDSCAPE,\n    TMP_DBSYSTEMVALUES_HSQLDB,\n    TMP_DBSYSTEMVALUES_PROGRESS,\n    TMP_DBSYSTEMVALUES_MAXDB,\n    TMP_DBSYSTEMVALUES_HANADB,\n    TMP_DBSYSTEMVALUES_INGRES,\n    TMP_DBSYSTEMVALUES_FIRSTSQL,\n    TMP_DBSYSTEMVALUES_EDB,\n    TMP_DBSYSTEMVALUES_CACHE,\n    TMP_DBSYSTEMVALUES_ADABAS,\n    TMP_DBSYSTEMVALUES_FIREBIRD,\n    TMP_DBSYSTEMVALUES_DERBY,\n    TMP_DBSYSTEMVALUES_FILEMAKER,\n    TMP_DBSYSTEMVALUES_INFORMIX,\n    TMP_DBSYSTEMVALUES_INSTANTDB,\n    TMP_DBSYSTEMVALUES_INTERBASE,\n    TMP_DBSYSTEMVALUES_MARIADB,\n    TMP_DBSYSTEMVALUES_NETEZZA,\n    TMP_DBSYSTEMVALUES_PERVASIVE,\n    TMP_DBSYSTEMVALUES_POINTBASE,\n    TMP_DBSYSTEMVALUES_SQLITE,\n    TMP_DBSYSTEMVALUES_SYBASE,\n    TMP_DBSYSTEMVALUES_TERADATA,\n    TMP_DBSYSTEMVALUES_VERTICA,\n    TMP_DBSYSTEMVALUES_H2,\n    TMP_DBSYSTEMVALUES_COLDFUSION,\n    TMP_DBSYSTEMVALUES_CASSANDRA,\n    TMP_DBSYSTEMVALUES_HBASE,\n    TMP_DBSYSTEMVALUES_MONGODB,\n    TMP_DBSYSTEMVALUES_REDIS,\n    TMP_DBSYSTEMVALUES_COUCHBASE,\n    TMP_DBSYSTEMVALUES_COUCHDB,\n    TMP_DBSYSTEMVALUES_COSMOSDB,\n    TMP_DBSYSTEMVALUES_DYNAMODB,\n    TMP_DBSYSTEMVALUES_NEO4J,\n    TMP_DBSYSTEMVALUES_GEODE,\n    TMP_DBSYSTEMVALUES_ELASTICSEARCH,\n    TMP_DBSYSTEMVALUES_MEMCACHED,\n    TMP_DBSYSTEMVALUES_COCKROACHDB,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for DbCassandraConsistencyLevelValues enum definition\n *\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ALL = 'all';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM = 'each_quorum';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM = 'quorum';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM = 'local_quorum';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ONE = 'one';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_TWO = 'two';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_THREE = 'three';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE = 'local_one';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ANY = 'any';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL = 'serial';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL = 'local_serial';\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ALL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_ALL =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ALL;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_EACH_QUORUM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_QUORUM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_QUORUM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ONE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_ONE =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ONE;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_TWO in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_TWO =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_TWO;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_THREE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_THREE =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_THREE;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_ONE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ANY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_ANY =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ANY;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_SERIAL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_SERIAL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL;\n\n/**\n * Identifies the Values for DbCassandraConsistencyLevelValues enum definition\n *\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n * @deprecated Use the DBCASSANDRACONSISTENCYLEVELVALUES_XXXXX constants rather than the DbCassandraConsistencyLevelValues.XXXXX for bundle minification.\n */\nexport type DbCassandraConsistencyLevelValues = {\n  /** all. */\n  ALL: 'all';\n\n  /** each_quorum. */\n  EACH_QUORUM: 'each_quorum';\n\n  /** quorum. */\n  QUORUM: 'quorum';\n\n  /** local_quorum. */\n  LOCAL_QUORUM: 'local_quorum';\n\n  /** one. */\n  ONE: 'one';\n\n  /** two. */\n  TWO: 'two';\n\n  /** three. */\n  THREE: 'three';\n\n  /** local_one. */\n  LOCAL_ONE: 'local_one';\n\n  /** any. */\n  ANY: 'any';\n\n  /** serial. */\n  SERIAL: 'serial';\n\n  /** local_serial. */\n  LOCAL_SERIAL: 'local_serial';\n};\n\n/**\n * The constant map of values for DbCassandraConsistencyLevelValues.\n * @deprecated Use the DBCASSANDRACONSISTENCYLEVELVALUES_XXXXX constants rather than the DbCassandraConsistencyLevelValues.XXXXX for bundle minification.\n */\nexport const DbCassandraConsistencyLevelValues: DbCassandraConsistencyLevelValues =\n  /*#__PURE__*/ createConstMap<DbCassandraConsistencyLevelValues>([\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ALL,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ONE,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_TWO,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_THREE,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ANY,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for FaasTriggerValues enum definition\n *\n * Type of the trigger on which the function is executed.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_FAASTRIGGERVALUES_DATASOURCE = 'datasource';\nconst TMP_FAASTRIGGERVALUES_HTTP = 'http';\nconst TMP_FAASTRIGGERVALUES_PUBSUB = 'pubsub';\nconst TMP_FAASTRIGGERVALUES_TIMER = 'timer';\nconst TMP_FAASTRIGGERVALUES_OTHER = 'other';\n\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_DATASOURCE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASTRIGGERVALUES_DATASOURCE = TMP_FAASTRIGGERVALUES_DATASOURCE;\n\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_HTTP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASTRIGGERVALUES_HTTP = TMP_FAASTRIGGERVALUES_HTTP;\n\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_PUBSUB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASTRIGGERVALUES_PUBSUB = TMP_FAASTRIGGERVALUES_PUBSUB;\n\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_TIMER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASTRIGGERVALUES_TIMER = TMP_FAASTRIGGERVALUES_TIMER;\n\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_OTHER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASTRIGGERVALUES_OTHER = TMP_FAASTRIGGERVALUES_OTHER;\n\n/**\n * Identifies the Values for FaasTriggerValues enum definition\n *\n * Type of the trigger on which the function is executed.\n * @deprecated Use the FAASTRIGGERVALUES_XXXXX constants rather than the FaasTriggerValues.XXXXX for bundle minification.\n */\nexport type FaasTriggerValues = {\n  /** A response to some data source operation such as a database or filesystem read/write. */\n  DATASOURCE: 'datasource';\n\n  /** To provide an answer to an inbound HTTP request. */\n  HTTP: 'http';\n\n  /** A function is set to be executed when messages are sent to a messaging system. */\n  PUBSUB: 'pubsub';\n\n  /** A function is scheduled to be executed regularly. */\n  TIMER: 'timer';\n\n  /** If none of the others apply. */\n  OTHER: 'other';\n};\n\n/**\n * The constant map of values for FaasTriggerValues.\n * @deprecated Use the FAASTRIGGERVALUES_XXXXX constants rather than the FaasTriggerValues.XXXXX for bundle minification.\n */\nexport const FaasTriggerValues: FaasTriggerValues =\n  /*#__PURE__*/ createConstMap<FaasTriggerValues>([\n    TMP_FAASTRIGGERVALUES_DATASOURCE,\n    TMP_FAASTRIGGERVALUES_HTTP,\n    TMP_FAASTRIGGERVALUES_PUBSUB,\n    TMP_FAASTRIGGERVALUES_TIMER,\n    TMP_FAASTRIGGERVALUES_OTHER,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for FaasDocumentOperationValues enum definition\n *\n * Describes the type of the operation that was performed on the data.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_FAASDOCUMENTOPERATIONVALUES_INSERT = 'insert';\nconst TMP_FAASDOCUMENTOPERATIONVALUES_EDIT = 'edit';\nconst TMP_FAASDOCUMENTOPERATIONVALUES_DELETE = 'delete';\n\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated Use FAAS_DOCUMENT_OPERATION_VALUE_INSERT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASDOCUMENTOPERATIONVALUES_INSERT =\n  TMP_FAASDOCUMENTOPERATIONVALUES_INSERT;\n\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated Use FAAS_DOCUMENT_OPERATION_VALUE_EDIT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASDOCUMENTOPERATIONVALUES_EDIT =\n  TMP_FAASDOCUMENTOPERATIONVALUES_EDIT;\n\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated Use FAAS_DOCUMENT_OPERATION_VALUE_DELETE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASDOCUMENTOPERATIONVALUES_DELETE =\n  TMP_FAASDOCUMENTOPERATIONVALUES_DELETE;\n\n/**\n * Identifies the Values for FaasDocumentOperationValues enum definition\n *\n * Describes the type of the operation that was performed on the data.\n * @deprecated Use the FAASDOCUMENTOPERATIONVALUES_XXXXX constants rather than the FaasDocumentOperationValues.XXXXX for bundle minification.\n */\nexport type FaasDocumentOperationValues = {\n  /** When a new object is created. */\n  INSERT: 'insert';\n\n  /** When an object is modified. */\n  EDIT: 'edit';\n\n  /** When an object is deleted. */\n  DELETE: 'delete';\n};\n\n/**\n * The constant map of values for FaasDocumentOperationValues.\n * @deprecated Use the FAASDOCUMENTOPERATIONVALUES_XXXXX constants rather than the FaasDocumentOperationValues.XXXXX for bundle minification.\n */\nexport const FaasDocumentOperationValues: FaasDocumentOperationValues =\n  /*#__PURE__*/ createConstMap<FaasDocumentOperationValues>([\n    TMP_FAASDOCUMENTOPERATIONVALUES_INSERT,\n    TMP_FAASDOCUMENTOPERATIONVALUES_EDIT,\n    TMP_FAASDOCUMENTOPERATIONVALUES_DELETE,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for FaasInvokedProviderValues enum definition\n *\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD = 'alibaba_cloud';\nconst TMP_FAASINVOKEDPROVIDERVALUES_AWS = 'aws';\nconst TMP_FAASINVOKEDPROVIDERVALUES_AZURE = 'azure';\nconst TMP_FAASINVOKEDPROVIDERVALUES_GCP = 'gcp';\n\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_ALIBABA_CLOUD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD =\n  TMP_FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD;\n\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_AWS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASINVOKEDPROVIDERVALUES_AWS = TMP_FAASINVOKEDPROVIDERVALUES_AWS;\n\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_AZURE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASINVOKEDPROVIDERVALUES_AZURE =\n  TMP_FAASINVOKEDPROVIDERVALUES_AZURE;\n\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_GCP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASINVOKEDPROVIDERVALUES_GCP = TMP_FAASINVOKEDPROVIDERVALUES_GCP;\n\n/**\n * Identifies the Values for FaasInvokedProviderValues enum definition\n *\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n * @deprecated Use the FAASINVOKEDPROVIDERVALUES_XXXXX constants rather than the FaasInvokedProviderValues.XXXXX for bundle minification.\n */\nexport type FaasInvokedProviderValues = {\n  /** Alibaba Cloud. */\n  ALIBABA_CLOUD: 'alibaba_cloud';\n\n  /** Amazon Web Services. */\n  AWS: 'aws';\n\n  /** Microsoft Azure. */\n  AZURE: 'azure';\n\n  /** Google Cloud Platform. */\n  GCP: 'gcp';\n};\n\n/**\n * The constant map of values for FaasInvokedProviderValues.\n * @deprecated Use the FAASINVOKEDPROVIDERVALUES_XXXXX constants rather than the FaasInvokedProviderValues.XXXXX for bundle minification.\n */\nexport const FaasInvokedProviderValues: FaasInvokedProviderValues =\n  /*#__PURE__*/ createConstMap<FaasInvokedProviderValues>([\n    TMP_FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD,\n    TMP_FAASINVOKEDPROVIDERVALUES_AWS,\n    TMP_FAASINVOKEDPROVIDERVALUES_AZURE,\n    TMP_FAASINVOKEDPROVIDERVALUES_GCP,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for NetTransportValues enum definition\n *\n * Transport protocol used. See note below.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_NETTRANSPORTVALUES_IP_TCP = 'ip_tcp';\nconst TMP_NETTRANSPORTVALUES_IP_UDP = 'ip_udp';\nconst TMP_NETTRANSPORTVALUES_IP = 'ip';\nconst TMP_NETTRANSPORTVALUES_UNIX = 'unix';\nconst TMP_NETTRANSPORTVALUES_PIPE = 'pipe';\nconst TMP_NETTRANSPORTVALUES_INPROC = 'inproc';\nconst TMP_NETTRANSPORTVALUES_OTHER = 'other';\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_IP_TCP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETTRANSPORTVALUES_IP_TCP = TMP_NETTRANSPORTVALUES_IP_TCP;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_IP_UDP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETTRANSPORTVALUES_IP_UDP = TMP_NETTRANSPORTVALUES_IP_UDP;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Removed in v1.21.0.\n */\nexport const NETTRANSPORTVALUES_IP = TMP_NETTRANSPORTVALUES_IP;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Removed in v1.21.0.\n */\nexport const NETTRANSPORTVALUES_UNIX = TMP_NETTRANSPORTVALUES_UNIX;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_PIPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETTRANSPORTVALUES_PIPE = TMP_NETTRANSPORTVALUES_PIPE;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_INPROC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETTRANSPORTVALUES_INPROC = TMP_NETTRANSPORTVALUES_INPROC;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_OTHER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETTRANSPORTVALUES_OTHER = TMP_NETTRANSPORTVALUES_OTHER;\n\n/**\n * Identifies the Values for NetTransportValues enum definition\n *\n * Transport protocol used. See note below.\n * @deprecated Use the NETTRANSPORTVALUES_XXXXX constants rather than the NetTransportValues.XXXXX for bundle minification.\n */\nexport type NetTransportValues = {\n  /** ip_tcp. */\n  IP_TCP: 'ip_tcp';\n\n  /** ip_udp. */\n  IP_UDP: 'ip_udp';\n\n  /** Another IP-based protocol. */\n  IP: 'ip';\n\n  /** Unix Domain socket. See below. */\n  UNIX: 'unix';\n\n  /** Named or anonymous pipe. See note below. */\n  PIPE: 'pipe';\n\n  /** In-process communication. */\n  INPROC: 'inproc';\n\n  /** Something else (non IP-based). */\n  OTHER: 'other';\n};\n\n/**\n * The constant map of values for NetTransportValues.\n * @deprecated Use the NETTRANSPORTVALUES_XXXXX constants rather than the NetTransportValues.XXXXX for bundle minification.\n */\nexport const NetTransportValues: NetTransportValues =\n  /*#__PURE__*/ createConstMap<NetTransportValues>([\n    TMP_NETTRANSPORTVALUES_IP_TCP,\n    TMP_NETTRANSPORTVALUES_IP_UDP,\n    TMP_NETTRANSPORTVALUES_IP,\n    TMP_NETTRANSPORTVALUES_UNIX,\n    TMP_NETTRANSPORTVALUES_PIPE,\n    TMP_NETTRANSPORTVALUES_INPROC,\n    TMP_NETTRANSPORTVALUES_OTHER,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for NetHostConnectionTypeValues enum definition\n *\n * The internet connection type currently being used by the host.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_NETHOSTCONNECTIONTYPEVALUES_WIFI = 'wifi';\nconst TMP_NETHOSTCONNECTIONTYPEVALUES_WIRED = 'wired';\nconst TMP_NETHOSTCONNECTIONTYPEVALUES_CELL = 'cell';\nconst TMP_NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE = 'unavailable';\nconst TMP_NETHOSTCONNECTIONTYPEVALUES_UNKNOWN = 'unknown';\n\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NETWORK_CONNECTION_TYPE_VALUE_WIFI in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONTYPEVALUES_WIFI =\n  TMP_NETHOSTCONNECTIONTYPEVALUES_WIFI;\n\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NETWORK_CONNECTION_TYPE_VALUE_WIRED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONTYPEVALUES_WIRED =\n  TMP_NETHOSTCONNECTIONTYPEVALUES_WIRED;\n\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NETWORK_CONNECTION_TYPE_VALUE_CELL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONTYPEVALUES_CELL =\n  TMP_NETHOSTCONNECTIONTYPEVALUES_CELL;\n\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NETWORK_CONNECTION_TYPE_VALUE_UNAVAILABLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE =\n  TMP_NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE;\n\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NETWORK_CONNECTION_TYPE_VALUE_UNKNOWN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONTYPEVALUES_UNKNOWN =\n  TMP_NETHOSTCONNECTIONTYPEVALUES_UNKNOWN;\n\n/**\n * Identifies the Values for NetHostConnectionTypeValues enum definition\n *\n * The internet connection type currently being used by the host.\n * @deprecated Use the NETHOSTCONNECTIONTYPEVALUES_XXXXX constants rather than the NetHostConnectionTypeValues.XXXXX for bundle minification.\n */\nexport type NetHostConnectionTypeValues = {\n  /** wifi. */\n  WIFI: 'wifi';\n\n  /** wired. */\n  WIRED: 'wired';\n\n  /** cell. */\n  CELL: 'cell';\n\n  /** unavailable. */\n  UNAVAILABLE: 'unavailable';\n\n  /** unknown. */\n  UNKNOWN: 'unknown';\n};\n\n/**\n * The constant map of values for NetHostConnectionTypeValues.\n * @deprecated Use the NETHOSTCONNECTIONTYPEVALUES_XXXXX constants rather than the NetHostConnectionTypeValues.XXXXX for bundle minification.\n */\nexport const NetHostConnectionTypeValues: NetHostConnectionTypeValues =\n  /*#__PURE__*/ createConstMap<NetHostConnectionTypeValues>([\n    TMP_NETHOSTCONNECTIONTYPEVALUES_WIFI,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_WIRED,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_CELL,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_UNKNOWN,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for NetHostConnectionSubtypeValues enum definition\n *\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GPRS = 'gprs';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EDGE = 'edge';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_UMTS = 'umts';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA = 'cdma';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0 = 'evdo_0';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A = 'evdo_a';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT = 'cdma2000_1xrtt';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA = 'hsdpa';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA = 'hsupa';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPA = 'hspa';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IDEN = 'iden';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B = 'evdo_b';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE = 'lte';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD = 'ehrpd';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP = 'hspap';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GSM = 'gsm';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA = 'td_scdma';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN = 'iwlan';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NR = 'nr';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA = 'nrnsa';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA = 'lte_ca';\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_GPRS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_GPRS =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GPRS;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_EDGE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_EDGE =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EDGE;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_UMTS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_UMTS =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_UMTS;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_CDMA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_CDMA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_EVDO_0 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0 =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_EVDO_A in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_CDMA2000_1XRTT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_HSDPA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_HSUPA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_HSPA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_HSPA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPA;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_IDEN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_IDEN =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IDEN;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_EVDO_B in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_LTE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_LTE =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_EHRPD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_HSPAP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_GSM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_GSM =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GSM;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_TD_SCDMA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_IWLAN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_NR in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_NR =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NR;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_NRNSA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_LTE_CA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA;\n\n/**\n * Identifies the Values for NetHostConnectionSubtypeValues enum definition\n *\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n * @deprecated Use the NETHOSTCONNECTIONSUBTYPEVALUES_XXXXX constants rather than the NetHostConnectionSubtypeValues.XXXXX for bundle minification.\n */\nexport type NetHostConnectionSubtypeValues = {\n  /** GPRS. */\n  GPRS: 'gprs';\n\n  /** EDGE. */\n  EDGE: 'edge';\n\n  /** UMTS. */\n  UMTS: 'umts';\n\n  /** CDMA. */\n  CDMA: 'cdma';\n\n  /** EVDO Rel. 0. */\n  EVDO_0: 'evdo_0';\n\n  /** EVDO Rev. A. */\n  EVDO_A: 'evdo_a';\n\n  /** CDMA2000 1XRTT. */\n  CDMA2000_1XRTT: 'cdma2000_1xrtt';\n\n  /** HSDPA. */\n  HSDPA: 'hsdpa';\n\n  /** HSUPA. */\n  HSUPA: 'hsupa';\n\n  /** HSPA. */\n  HSPA: 'hspa';\n\n  /** IDEN. */\n  IDEN: 'iden';\n\n  /** EVDO Rev. B. */\n  EVDO_B: 'evdo_b';\n\n  /** LTE. */\n  LTE: 'lte';\n\n  /** EHRPD. */\n  EHRPD: 'ehrpd';\n\n  /** HSPAP. */\n  HSPAP: 'hspap';\n\n  /** GSM. */\n  GSM: 'gsm';\n\n  /** TD-SCDMA. */\n  TD_SCDMA: 'td_scdma';\n\n  /** IWLAN. */\n  IWLAN: 'iwlan';\n\n  /** 5G NR (New Radio). */\n  NR: 'nr';\n\n  /** 5G NRNSA (New Radio Non-Standalone). */\n  NRNSA: 'nrnsa';\n\n  /** LTE CA. */\n  LTE_CA: 'lte_ca';\n};\n\n/**\n * The constant map of values for NetHostConnectionSubtypeValues.\n * @deprecated Use the NETHOSTCONNECTIONSUBTYPEVALUES_XXXXX constants rather than the NetHostConnectionSubtypeValues.XXXXX for bundle minification.\n */\nexport const NetHostConnectionSubtypeValues: NetHostConnectionSubtypeValues =\n  /*#__PURE__*/ createConstMap<NetHostConnectionSubtypeValues>([\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GPRS,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EDGE,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_UMTS,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IDEN,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GSM,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NR,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for HttpFlavorValues enum definition\n *\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_HTTPFLAVORVALUES_HTTP_1_0 = '1.0';\nconst TMP_HTTPFLAVORVALUES_HTTP_1_1 = '1.1';\nconst TMP_HTTPFLAVORVALUES_HTTP_2_0 = '2.0';\nconst TMP_HTTPFLAVORVALUES_SPDY = 'SPDY';\nconst TMP_HTTPFLAVORVALUES_QUIC = 'QUIC';\n\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_HTTP_1_0 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HTTPFLAVORVALUES_HTTP_1_0 = TMP_HTTPFLAVORVALUES_HTTP_1_0;\n\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_HTTP_1_1 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HTTPFLAVORVALUES_HTTP_1_1 = TMP_HTTPFLAVORVALUES_HTTP_1_1;\n\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_HTTP_2_0 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HTTPFLAVORVALUES_HTTP_2_0 = TMP_HTTPFLAVORVALUES_HTTP_2_0;\n\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_SPDY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HTTPFLAVORVALUES_SPDY = TMP_HTTPFLAVORVALUES_SPDY;\n\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_QUIC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HTTPFLAVORVALUES_QUIC = TMP_HTTPFLAVORVALUES_QUIC;\n\n/**\n * Identifies the Values for HttpFlavorValues enum definition\n *\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n * @deprecated Use the HTTPFLAVORVALUES_XXXXX constants rather than the HttpFlavorValues.XXXXX for bundle minification.\n */\nexport type HttpFlavorValues = {\n  /** HTTP 1.0. */\n  HTTP_1_0: '1.0';\n\n  /** HTTP 1.1. */\n  HTTP_1_1: '1.1';\n\n  /** HTTP 2. */\n  HTTP_2_0: '2.0';\n\n  /** SPDY protocol. */\n  SPDY: 'SPDY';\n\n  /** QUIC protocol. */\n  QUIC: 'QUIC';\n};\n\n/**\n * The constant map of values for HttpFlavorValues.\n * @deprecated Use the HTTPFLAVORVALUES_XXXXX constants rather than the HttpFlavorValues.XXXXX for bundle minification.\n */\nexport const HttpFlavorValues: HttpFlavorValues = {\n  HTTP_1_0: TMP_HTTPFLAVORVALUES_HTTP_1_0,\n  HTTP_1_1: TMP_HTTPFLAVORVALUES_HTTP_1_1,\n  HTTP_2_0: TMP_HTTPFLAVORVALUES_HTTP_2_0,\n  SPDY: TMP_HTTPFLAVORVALUES_SPDY,\n  QUIC: TMP_HTTPFLAVORVALUES_QUIC,\n};\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for MessagingDestinationKindValues enum definition\n *\n * The kind of message destination.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_MESSAGINGDESTINATIONKINDVALUES_QUEUE = 'queue';\nconst TMP_MESSAGINGDESTINATIONKINDVALUES_TOPIC = 'topic';\n\n/**\n * The kind of message destination.\n *\n * @deprecated Removed in semconv v1.20.0.\n */\nexport const MESSAGINGDESTINATIONKINDVALUES_QUEUE =\n  TMP_MESSAGINGDESTINATIONKINDVALUES_QUEUE;\n\n/**\n * The kind of message destination.\n *\n * @deprecated Removed in semconv v1.20.0.\n */\nexport const MESSAGINGDESTINATIONKINDVALUES_TOPIC =\n  TMP_MESSAGINGDESTINATIONKINDVALUES_TOPIC;\n\n/**\n * Identifies the Values for MessagingDestinationKindValues enum definition\n *\n * The kind of message destination.\n * @deprecated Use the MESSAGINGDESTINATIONKINDVALUES_XXXXX constants rather than the MessagingDestinationKindValues.XXXXX for bundle minification.\n */\nexport type MessagingDestinationKindValues = {\n  /** A message sent to a queue. */\n  QUEUE: 'queue';\n\n  /** A message sent to a topic. */\n  TOPIC: 'topic';\n};\n\n/**\n * The constant map of values for MessagingDestinationKindValues.\n * @deprecated Use the MESSAGINGDESTINATIONKINDVALUES_XXXXX constants rather than the MessagingDestinationKindValues.XXXXX for bundle minification.\n */\nexport const MessagingDestinationKindValues: MessagingDestinationKindValues =\n  /*#__PURE__*/ createConstMap<MessagingDestinationKindValues>([\n    TMP_MESSAGINGDESTINATIONKINDVALUES_QUEUE,\n    TMP_MESSAGINGDESTINATIONKINDVALUES_TOPIC,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for MessagingOperationValues enum definition\n *\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_MESSAGINGOPERATIONVALUES_RECEIVE = 'receive';\nconst TMP_MESSAGINGOPERATIONVALUES_PROCESS = 'process';\n\n/**\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n *\n * @deprecated Use MESSAGING_OPERATION_TYPE_VALUE_RECEIVE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const MESSAGINGOPERATIONVALUES_RECEIVE =\n  TMP_MESSAGINGOPERATIONVALUES_RECEIVE;\n\n/**\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n *\n * @deprecated Use MESSAGING_OPERATION_TYPE_VALUE_PROCESS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const MESSAGINGOPERATIONVALUES_PROCESS =\n  TMP_MESSAGINGOPERATIONVALUES_PROCESS;\n\n/**\n * Identifies the Values for MessagingOperationValues enum definition\n *\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n * @deprecated Use the MESSAGINGOPERATIONVALUES_XXXXX constants rather than the MessagingOperationValues.XXXXX for bundle minification.\n */\nexport type MessagingOperationValues = {\n  /** receive. */\n  RECEIVE: 'receive';\n\n  /** process. */\n  PROCESS: 'process';\n};\n\n/**\n * The constant map of values for MessagingOperationValues.\n * @deprecated Use the MESSAGINGOPERATIONVALUES_XXXXX constants rather than the MessagingOperationValues.XXXXX for bundle minification.\n */\nexport const MessagingOperationValues: MessagingOperationValues =\n  /*#__PURE__*/ createConstMap<MessagingOperationValues>([\n    TMP_MESSAGINGOPERATIONVALUES_RECEIVE,\n    TMP_MESSAGINGOPERATIONVALUES_PROCESS,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for RpcGrpcStatusCodeValues enum definition\n *\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_RPCGRPCSTATUSCODEVALUES_OK = 0;\nconst TMP_RPCGRPCSTATUSCODEVALUES_CANCELLED = 1;\nconst TMP_RPCGRPCSTATUSCODEVALUES_UNKNOWN = 2;\nconst TMP_RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT = 3;\nconst TMP_RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED = 4;\nconst TMP_RPCGRPCSTATUSCODEVALUES_NOT_FOUND = 5;\nconst TMP_RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS = 6;\nconst TMP_RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED = 7;\nconst TMP_RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED = 8;\nconst TMP_RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION = 9;\nconst TMP_RPCGRPCSTATUSCODEVALUES_ABORTED = 10;\nconst TMP_RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE = 11;\nconst TMP_RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED = 12;\nconst TMP_RPCGRPCSTATUSCODEVALUES_INTERNAL = 13;\nconst TMP_RPCGRPCSTATUSCODEVALUES_UNAVAILABLE = 14;\nconst TMP_RPCGRPCSTATUSCODEVALUES_DATA_LOSS = 15;\nconst TMP_RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED = 16;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_OK in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_OK = TMP_RPCGRPCSTATUSCODEVALUES_OK;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_CANCELLED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_CANCELLED =\n  TMP_RPCGRPCSTATUSCODEVALUES_CANCELLED;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNKNOWN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_UNKNOWN =\n  TMP_RPCGRPCSTATUSCODEVALUES_UNKNOWN;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_INVALID_ARGUMENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT =\n  TMP_RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_DEADLINE_EXCEEDED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED =\n  TMP_RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_NOT_FOUND in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_NOT_FOUND =\n  TMP_RPCGRPCSTATUSCODEVALUES_NOT_FOUND;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_ALREADY_EXISTS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS =\n  TMP_RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_PERMISSION_DENIED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED =\n  TMP_RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_RESOURCE_EXHAUSTED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED =\n  TMP_RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_FAILED_PRECONDITION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION =\n  TMP_RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_ABORTED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_ABORTED =\n  TMP_RPCGRPCSTATUSCODEVALUES_ABORTED;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_OUT_OF_RANGE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE =\n  TMP_RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNIMPLEMENTED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED =\n  TMP_RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_INTERNAL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_INTERNAL =\n  TMP_RPCGRPCSTATUSCODEVALUES_INTERNAL;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNAVAILABLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_UNAVAILABLE =\n  TMP_RPCGRPCSTATUSCODEVALUES_UNAVAILABLE;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_DATA_LOSS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_DATA_LOSS =\n  TMP_RPCGRPCSTATUSCODEVALUES_DATA_LOSS;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNAUTHENTICATED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED =\n  TMP_RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED;\n\n/**\n * Identifies the Values for RpcGrpcStatusCodeValues enum definition\n *\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n * @deprecated Use the RPCGRPCSTATUSCODEVALUES_XXXXX constants rather than the RpcGrpcStatusCodeValues.XXXXX for bundle minification.\n */\nexport type RpcGrpcStatusCodeValues = {\n  /** OK. */\n  OK: 0;\n\n  /** CANCELLED. */\n  CANCELLED: 1;\n\n  /** UNKNOWN. */\n  UNKNOWN: 2;\n\n  /** INVALID_ARGUMENT. */\n  INVALID_ARGUMENT: 3;\n\n  /** DEADLINE_EXCEEDED. */\n  DEADLINE_EXCEEDED: 4;\n\n  /** NOT_FOUND. */\n  NOT_FOUND: 5;\n\n  /** ALREADY_EXISTS. */\n  ALREADY_EXISTS: 6;\n\n  /** PERMISSION_DENIED. */\n  PERMISSION_DENIED: 7;\n\n  /** RESOURCE_EXHAUSTED. */\n  RESOURCE_EXHAUSTED: 8;\n\n  /** FAILED_PRECONDITION. */\n  FAILED_PRECONDITION: 9;\n\n  /** ABORTED. */\n  ABORTED: 10;\n\n  /** OUT_OF_RANGE. */\n  OUT_OF_RANGE: 11;\n\n  /** UNIMPLEMENTED. */\n  UNIMPLEMENTED: 12;\n\n  /** INTERNAL. */\n  INTERNAL: 13;\n\n  /** UNAVAILABLE. */\n  UNAVAILABLE: 14;\n\n  /** DATA_LOSS. */\n  DATA_LOSS: 15;\n\n  /** UNAUTHENTICATED. */\n  UNAUTHENTICATED: 16;\n};\n\n/**\n * The constant map of values for RpcGrpcStatusCodeValues.\n * @deprecated Use the RPCGRPCSTATUSCODEVALUES_XXXXX constants rather than the RpcGrpcStatusCodeValues.XXXXX for bundle minification.\n */\nexport const RpcGrpcStatusCodeValues: RpcGrpcStatusCodeValues = {\n  OK: TMP_RPCGRPCSTATUSCODEVALUES_OK,\n  CANCELLED: TMP_RPCGRPCSTATUSCODEVALUES_CANCELLED,\n  UNKNOWN: TMP_RPCGRPCSTATUSCODEVALUES_UNKNOWN,\n  INVALID_ARGUMENT: TMP_RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT,\n  DEADLINE_EXCEEDED: TMP_RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED,\n  NOT_FOUND: TMP_RPCGRPCSTATUSCODEVALUES_NOT_FOUND,\n  ALREADY_EXISTS: TMP_RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS,\n  PERMISSION_DENIED: TMP_RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED,\n  RESOURCE_EXHAUSTED: TMP_RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED,\n  FAILED_PRECONDITION: TMP_RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION,\n  ABORTED: TMP_RPCGRPCSTATUSCODEVALUES_ABORTED,\n  OUT_OF_RANGE: TMP_RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE,\n  UNIMPLEMENTED: TMP_RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED,\n  INTERNAL: TMP_RPCGRPCSTATUSCODEVALUES_INTERNAL,\n  UNAVAILABLE: TMP_RPCGRPCSTATUSCODEVALUES_UNAVAILABLE,\n  DATA_LOSS: TMP_RPCGRPCSTATUSCODEVALUES_DATA_LOSS,\n  UNAUTHENTICATED: TMP_RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED,\n};\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for MessageTypeValues enum definition\n *\n * Whether this is a received or sent message.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_MESSAGETYPEVALUES_SENT = 'SENT';\nconst TMP_MESSAGETYPEVALUES_RECEIVED = 'RECEIVED';\n\n/**\n * Whether this is a received or sent message.\n *\n * @deprecated Use MESSAGE_TYPE_VALUE_SENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const MESSAGETYPEVALUES_SENT = TMP_MESSAGETYPEVALUES_SENT;\n\n/**\n * Whether this is a received or sent message.\n *\n * @deprecated Use MESSAGE_TYPE_VALUE_RECEIVED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const MESSAGETYPEVALUES_RECEIVED = TMP_MESSAGETYPEVALUES_RECEIVED;\n\n/**\n * Identifies the Values for MessageTypeValues enum definition\n *\n * Whether this is a received or sent message.\n * @deprecated Use the MESSAGETYPEVALUES_XXXXX constants rather than the MessageTypeValues.XXXXX for bundle minification.\n */\nexport type MessageTypeValues = {\n  /** sent. */\n  SENT: 'SENT';\n\n  /** received. */\n  RECEIVED: 'RECEIVED';\n};\n\n/**\n * The constant map of values for MessageTypeValues.\n * @deprecated Use the MESSAGETYPEVALUES_XXXXX constants rather than the MessageTypeValues.XXXXX for bundle minification.\n */\nexport const MessageTypeValues: MessageTypeValues =\n  /*#__PURE__*/ createConstMap<MessageTypeValues>([\n    TMP_MESSAGETYPEVALUES_SENT,\n    TMP_MESSAGETYPEVALUES_RECEIVED,\n  ]);\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 12013, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12019, "column": 0}, "map": {"version":3,"file":"enums.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/sdk-trace-base/src/enums.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Event name definitions\nexport const ExceptionEventName = 'exception';\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG,CAEH,yBAAyB;;;;AAClB,IAAM,kBAAkB,GAAG,WAAW,CAAC","ignoreList":[0]}},
    {"offset": {"line": 12038, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12044, "column": 0}, "map": {"version":3,"file":"Span.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/sdk-trace-base/src/Span.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  diag,\n  Exception,\n  HrTime,\n  Link,\n  Span as APISpan,\n  SpanAttributes,\n  SpanAttributeValue,\n  SpanContext,\n  SpanKind,\n  SpanStatus,\n  SpanStatusCode,\n  TimeInput,\n} from '@opentelemetry/api';\nimport {\n  addHrTimes,\n  millisToHrTime,\n  getTimeOrigin,\n  hrTime,\n  hrTimeDuration,\n  InstrumentationLibrary,\n  isAttributeValue,\n  isTimeInput,\n  isTimeInputHrTime,\n  otperformance,\n  sanitizeAttributes,\n} from '@opentelemetry/core';\nimport { IResource } from '@opentelemetry/resources';\nimport {\n  SEMATTRS_EXCEPTION_MESSAGE,\n  SEMATTRS_EXCEPTION_STACKTRACE,\n  SEMATTRS_EXCEPTION_TYPE,\n} from '@opentelemetry/semantic-conventions';\nimport { ExceptionEventName } from './enums';\nimport { ReadableSpan } from './export/ReadableSpan';\nimport { SpanProcessor } from './SpanProcessor';\nimport { TimedEvent } from './TimedEvent';\nimport { Tracer } from './Tracer';\nimport { SpanLimits } from './types';\n\n/**\n * This class represents a span.\n */\nexport class Span implements APISpan, ReadableSpan {\n  // Below properties are included to implement ReadableSpan for export\n  // purposes but are not intended to be written-to directly.\n  private readonly _spanContext: SpanContext;\n  readonly kind: SpanKind;\n  readonly parentSpanId?: string;\n  readonly attributes: SpanAttributes = {};\n  readonly links: Link[] = [];\n  readonly events: TimedEvent[] = [];\n  readonly startTime: HrTime;\n  readonly resource: IResource;\n  readonly instrumentationLibrary: InstrumentationLibrary;\n\n  private _droppedAttributesCount = 0;\n  private _droppedEventsCount: number = 0;\n  private _droppedLinksCount: number = 0;\n\n  name: string;\n  status: SpanStatus = {\n    code: SpanStatusCode.UNSET,\n  };\n  endTime: HrTime = [0, 0];\n  private _ended = false;\n  private _duration: HrTime = [-1, -1];\n  private readonly _spanProcessor: SpanProcessor;\n  private readonly _spanLimits: SpanLimits;\n  private readonly _attributeValueLengthLimit: number;\n\n  private readonly _performanceStartTime: number;\n  private readonly _performanceOffset: number;\n  private readonly _startTimeProvided: boolean;\n\n  /**\n   * Constructs a new Span instance.\n   *\n   * @deprecated calling Span constructor directly is not supported. Please use tracer.startSpan.\n   * */\n  constructor(\n    parentTracer: Tracer,\n    context: Context,\n    spanName: string,\n    spanContext: SpanContext,\n    kind: SpanKind,\n    parentSpanId?: string,\n    links: Link[] = [],\n    startTime?: TimeInput,\n    _deprecatedClock?: unknown, // keeping this argument even though it is unused to ensure backwards compatibility\n    attributes?: SpanAttributes\n  ) {\n    this.name = spanName;\n    this._spanContext = spanContext;\n    this.parentSpanId = parentSpanId;\n    this.kind = kind;\n    this.links = links;\n\n    const now = Date.now();\n    this._performanceStartTime = otperformance.now();\n    this._performanceOffset =\n      now - (this._performanceStartTime + getTimeOrigin());\n    this._startTimeProvided = startTime != null;\n\n    this.startTime = this._getTime(startTime ?? now);\n\n    this.resource = parentTracer.resource;\n    this.instrumentationLibrary = parentTracer.instrumentationLibrary;\n    this._spanLimits = parentTracer.getSpanLimits();\n    this._attributeValueLengthLimit =\n      this._spanLimits.attributeValueLengthLimit || 0;\n\n    if (attributes != null) {\n      this.setAttributes(attributes);\n    }\n\n    this._spanProcessor = parentTracer.getActiveSpanProcessor();\n    this._spanProcessor.onStart(this, context);\n  }\n\n  spanContext(): SpanContext {\n    return this._spanContext;\n  }\n\n  setAttribute(key: string, value?: SpanAttributeValue): this;\n  setAttribute(key: string, value: unknown): this {\n    if (value == null || this._isSpanEnded()) return this;\n    if (key.length === 0) {\n      diag.warn(`Invalid attribute key: ${key}`);\n      return this;\n    }\n    if (!isAttributeValue(value)) {\n      diag.warn(`Invalid attribute value set for key: ${key}`);\n      return this;\n    }\n\n    if (\n      Object.keys(this.attributes).length >=\n        this._spanLimits.attributeCountLimit! &&\n      !Object.prototype.hasOwnProperty.call(this.attributes, key)\n    ) {\n      this._droppedAttributesCount++;\n      return this;\n    }\n    this.attributes[key] = this._truncateToSize(value);\n    return this;\n  }\n\n  setAttributes(attributes: SpanAttributes): this {\n    for (const [k, v] of Object.entries(attributes)) {\n      this.setAttribute(k, v);\n    }\n    return this;\n  }\n\n  /**\n   *\n   * @param name Span Name\n   * @param [attributesOrStartTime] Span attributes or start time\n   *     if type is {@type TimeInput} and 3rd param is undefined\n   * @param [timeStamp] Specified time stamp for the event\n   */\n  addEvent(\n    name: string,\n    attributesOrStartTime?: SpanAttributes | TimeInput,\n    timeStamp?: TimeInput\n  ): this {\n    if (this._isSpanEnded()) return this;\n    if (this._spanLimits.eventCountLimit === 0) {\n      diag.warn('No events allowed.');\n      this._droppedEventsCount++;\n      return this;\n    }\n    if (this.events.length >= this._spanLimits.eventCountLimit!) {\n      if (this._droppedEventsCount === 0) {\n        diag.debug('Dropping extra events.');\n      }\n      this.events.shift();\n      this._droppedEventsCount++;\n    }\n\n    if (isTimeInput(attributesOrStartTime)) {\n      if (!isTimeInput(timeStamp)) {\n        timeStamp = attributesOrStartTime;\n      }\n      attributesOrStartTime = undefined;\n    }\n\n    const attributes = sanitizeAttributes(attributesOrStartTime);\n\n    this.events.push({\n      name,\n      attributes,\n      time: this._getTime(timeStamp),\n      droppedAttributesCount: 0,\n    });\n    return this;\n  }\n\n  addLink(link: Link): this {\n    this.links.push(link);\n    return this;\n  }\n\n  addLinks(links: Link[]): this {\n    this.links.push(...links);\n    return this;\n  }\n\n  setStatus(status: SpanStatus): this {\n    if (this._isSpanEnded()) return this;\n    this.status = { ...status };\n\n    // When using try-catch, the caught \"error\" is of type `any`. When then assigning `any` to `status.message`,\n    // TypeScript will not error. While this can happen during use of any API, it is more common on Span#setStatus()\n    // as it's likely used in a catch-block. Therefore, we validate if `status.message` is actually a string, null, or\n    // undefined to avoid an incorrect type causing issues downstream.\n    if (this.status.message != null && typeof status.message !== 'string') {\n      diag.warn(\n        `Dropping invalid status.message of type '${typeof status.message}', expected 'string'`\n      );\n      delete this.status.message;\n    }\n\n    return this;\n  }\n\n  updateName(name: string): this {\n    if (this._isSpanEnded()) return this;\n    this.name = name;\n    return this;\n  }\n\n  end(endTime?: TimeInput): void {\n    if (this._isSpanEnded()) {\n      diag.error(\n        `${this.name} ${this._spanContext.traceId}-${this._spanContext.spanId} - You can only call end() on a span once.`\n      );\n      return;\n    }\n    this._ended = true;\n\n    this.endTime = this._getTime(endTime);\n    this._duration = hrTimeDuration(this.startTime, this.endTime);\n\n    if (this._duration[0] < 0) {\n      diag.warn(\n        'Inconsistent start and end time, startTime > endTime. Setting span duration to 0ms.',\n        this.startTime,\n        this.endTime\n      );\n      this.endTime = this.startTime.slice() as HrTime;\n      this._duration = [0, 0];\n    }\n\n    if (this._droppedEventsCount > 0) {\n      diag.warn(\n        `Dropped ${this._droppedEventsCount} events because eventCountLimit reached`\n      );\n    }\n\n    this._spanProcessor.onEnd(this);\n  }\n\n  private _getTime(inp?: TimeInput): HrTime {\n    if (typeof inp === 'number' && inp <= otperformance.now()) {\n      // must be a performance timestamp\n      // apply correction and convert to hrtime\n      return hrTime(inp + this._performanceOffset);\n    }\n\n    if (typeof inp === 'number') {\n      return millisToHrTime(inp);\n    }\n\n    if (inp instanceof Date) {\n      return millisToHrTime(inp.getTime());\n    }\n\n    if (isTimeInputHrTime(inp)) {\n      return inp;\n    }\n\n    if (this._startTimeProvided) {\n      // if user provided a time for the start manually\n      // we can't use duration to calculate event/end times\n      return millisToHrTime(Date.now());\n    }\n\n    const msDuration = otperformance.now() - this._performanceStartTime;\n    return addHrTimes(this.startTime, millisToHrTime(msDuration));\n  }\n\n  isRecording(): boolean {\n    return this._ended === false;\n  }\n\n  recordException(exception: Exception, time?: TimeInput): void {\n    const attributes: SpanAttributes = {};\n    if (typeof exception === 'string') {\n      attributes[SEMATTRS_EXCEPTION_MESSAGE] = exception;\n    } else if (exception) {\n      if (exception.code) {\n        attributes[SEMATTRS_EXCEPTION_TYPE] = exception.code.toString();\n      } else if (exception.name) {\n        attributes[SEMATTRS_EXCEPTION_TYPE] = exception.name;\n      }\n      if (exception.message) {\n        attributes[SEMATTRS_EXCEPTION_MESSAGE] = exception.message;\n      }\n      if (exception.stack) {\n        attributes[SEMATTRS_EXCEPTION_STACKTRACE] = exception.stack;\n      }\n    }\n\n    // these are minimum requirements from spec\n    if (\n      attributes[SEMATTRS_EXCEPTION_TYPE] ||\n      attributes[SEMATTRS_EXCEPTION_MESSAGE]\n    ) {\n      this.addEvent(ExceptionEventName, attributes, time);\n    } else {\n      diag.warn(`Failed to record an exception ${exception}`);\n    }\n  }\n\n  get duration(): HrTime {\n    return this._duration;\n  }\n\n  get ended(): boolean {\n    return this._ended;\n  }\n\n  get droppedAttributesCount(): number {\n    return this._droppedAttributesCount;\n  }\n\n  get droppedEventsCount(): number {\n    return this._droppedEventsCount;\n  }\n\n  get droppedLinksCount(): number {\n    return this._droppedLinksCount;\n  }\n\n  private _isSpanEnded(): boolean {\n    if (this._ended) {\n      diag.warn(\n        `Can not execute the operation on ended Span {traceId: ${this._spanContext.traceId}, spanId: ${this._spanContext.spanId}}`\n      );\n    }\n    return this._ended;\n  }\n\n  // Utility function to truncate given value within size\n  // for value type of string, will truncate to given limit\n  // for type of non-string, will return same value\n  private _truncateToLimitUtil(value: string, limit: number): string {\n    if (value.length <= limit) {\n      return value;\n    }\n    return value.substring(0, limit);\n  }\n\n  /**\n   * If the given attribute value is of type string and has more characters than given {@code attributeValueLengthLimit} then\n   * return string with truncated to {@code attributeValueLengthLimit} characters\n   *\n   * If the given attribute value is array of strings then\n   * return new array of strings with each element truncated to {@code attributeValueLengthLimit} characters\n   *\n   * Otherwise return same Attribute {@code value}\n   *\n   * @param value Attribute value\n   * @returns truncated attribute value if required, otherwise same value\n   */\n  private _truncateToSize(value: SpanAttributeValue): SpanAttributeValue {\n    const limit = this._attributeValueLengthLimit;\n    // Check limit\n    if (limit <= 0) {\n      // Negative values are invalid, so do not truncate\n      diag.warn(`Attribute value limit must be positive, got ${limit}`);\n      return value;\n    }\n\n    // String\n    if (typeof value === 'string') {\n      return this._truncateToLimitUtil(value, limit);\n    }\n\n    // Array of strings\n    if (Array.isArray(value)) {\n      return (value as []).map(val =>\n        typeof val === 'string' ? this._truncateToLimitUtil(val, limit) : val\n      );\n    }\n\n    // Other types, no need to apply value length limit\n    return value;\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 12432, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12438, "column": 0}, "map": {"version":3,"file":"sampling.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/core/src/utils/sampling.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum TracesSamplerValues {\n  AlwaysOff = 'always_off',\n  AlwaysOn = 'always_on',\n  ParentBasedAlwaysOff = 'parentbased_always_off',\n  ParentBasedAlwaysOn = 'parentbased_always_on',\n  ParentBasedTraceIdRatio = 'parentbased_traceidratio',\n  TraceIdRatio = 'traceidratio',\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAEH,IAAY,mBAOX;AAPD,CAAA,SAAY,mBAAmB;IAC7B,mBAAA,CAAA,YAAA,GAAA,YAAwB,CAAA;IACxB,mBAAA,CAAA,WAAA,GAAA,WAAsB,CAAA;IACtB,mBAAA,CAAA,uBAAA,GAAA,wBAA+C,CAAA;IAC/C,mBAAA,CAAA,sBAAA,GAAA,uBAA6C,CAAA;IAC7C,mBAAA,CAAA,0BAAA,GAAA,0BAAoD,CAAA;IACpD,mBAAA,CAAA,eAAA,GAAA,cAA6B,CAAA;AAC/B,CAAC,EAPW,mBAAmB,IAAA,CAAnB,mBAAmB,GAAA,CAAA,CAAA,GAO9B","ignoreList":[0]}},
    {"offset": {"line": 12464, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12470, "column": 0}, "map": {"version":3,"file":"environment.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/core/src/utils/environment.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagLogLevel } from '@opentelemetry/api';\nimport { TracesSamplerValues } from './sampling';\n\nconst DEFAULT_LIST_SEPARATOR = ',';\n\n/**\n * Environment interface to define all names\n */\n\nconst ENVIRONMENT_BOOLEAN_KEYS = ['OTEL_SDK_DISABLED'] as const;\n\ntype ENVIRONMENT_BOOLEANS = {\n  [K in (typeof ENVIRONMENT_BOOLEAN_KEYS)[number]]?: boolean;\n};\n\nfunction isEnvVarABoolean(key: unknown): key is keyof ENVIRONMENT_BOOLEANS {\n  return (\n    ENVIRONMENT_BOOLEAN_KEYS.indexOf(key as keyof ENVIRONMENT_BOOLEANS) > -1\n  );\n}\n\nconst ENVIRONMENT_NUMBERS_KEYS = [\n  'OTEL_BSP_EXPORT_TIMEOUT',\n  'OTEL_BSP_MAX_EXPORT_BATCH_SIZE',\n  'OTEL_BSP_MAX_QUEUE_SIZE',\n  'OTEL_BSP_SCHEDULE_DELAY',\n  'OTEL_BLRP_EXPORT_TIMEOUT',\n  'OTEL_BLRP_MAX_EXPORT_BATCH_SIZE',\n  'OTEL_BLRP_MAX_QUEUE_SIZE',\n  'OTEL_BLRP_SCHEDULE_DELAY',\n  'OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n  'OTEL_ATTRIBUTE_COUNT_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT',\n  'OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n  'OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT',\n  'OTEL_SPAN_EVENT_COUNT_LIMIT',\n  'OTEL_SPAN_LINK_COUNT_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT',\n  'OTEL_EXPORTER_OTLP_TIMEOUT',\n  'OTEL_EXPORTER_OTLP_TRACES_TIMEOUT',\n  'OTEL_EXPORTER_OTLP_METRICS_TIMEOUT',\n  'OTEL_EXPORTER_OTLP_LOGS_TIMEOUT',\n  'OTEL_EXPORTER_JAEGER_AGENT_PORT',\n] as const;\n\ntype ENVIRONMENT_NUMBERS = {\n  [K in (typeof ENVIRONMENT_NUMBERS_KEYS)[number]]?: number;\n};\n\nfunction isEnvVarANumber(key: unknown): key is keyof ENVIRONMENT_NUMBERS {\n  return (\n    ENVIRONMENT_NUMBERS_KEYS.indexOf(key as keyof ENVIRONMENT_NUMBERS) > -1\n  );\n}\n\nconst ENVIRONMENT_LISTS_KEYS = [\n  'OTEL_NO_PATCH_MODULES',\n  'OTEL_PROPAGATORS',\n  'OTEL_SEMCONV_STABILITY_OPT_IN',\n] as const;\n\ntype ENVIRONMENT_LISTS = {\n  [K in (typeof ENVIRONMENT_LISTS_KEYS)[number]]?: string[];\n};\n\nfunction isEnvVarAList(key: unknown): key is keyof ENVIRONMENT_LISTS {\n  return ENVIRONMENT_LISTS_KEYS.indexOf(key as keyof ENVIRONMENT_LISTS) > -1;\n}\n\nexport type ENVIRONMENT = {\n  CONTAINER_NAME?: string;\n  ECS_CONTAINER_METADATA_URI_V4?: string;\n  ECS_CONTAINER_METADATA_URI?: string;\n  HOSTNAME?: string;\n  KUBERNETES_SERVICE_HOST?: string;\n  NAMESPACE?: string;\n  OTEL_EXPORTER_JAEGER_AGENT_HOST?: string;\n  OTEL_EXPORTER_JAEGER_ENDPOINT?: string;\n  OTEL_EXPORTER_JAEGER_PASSWORD?: string;\n  OTEL_EXPORTER_JAEGER_USER?: string;\n  OTEL_EXPORTER_OTLP_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_TRACES_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_METRICS_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_LOGS_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_HEADERS?: string;\n  OTEL_EXPORTER_OTLP_TRACES_HEADERS?: string;\n  OTEL_EXPORTER_OTLP_METRICS_HEADERS?: string;\n  OTEL_EXPORTER_OTLP_LOGS_HEADERS?: string;\n  OTEL_EXPORTER_ZIPKIN_ENDPOINT?: string;\n  OTEL_LOG_LEVEL?: DiagLogLevel;\n  OTEL_RESOURCE_ATTRIBUTES?: string;\n  OTEL_SERVICE_NAME?: string;\n  OTEL_TRACES_EXPORTER?: string;\n  OTEL_TRACES_SAMPLER_ARG?: string;\n  OTEL_TRACES_SAMPLER?: string;\n  OTEL_LOGS_EXPORTER?: string;\n  OTEL_EXPORTER_OTLP_INSECURE?: string;\n  OTEL_EXPORTER_OTLP_TRACES_INSECURE?: string;\n  OTEL_EXPORTER_OTLP_METRICS_INSECURE?: string;\n  OTEL_EXPORTER_OTLP_LOGS_INSECURE?: string;\n  OTEL_EXPORTER_OTLP_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_LOGS_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_COMPRESSION?: string;\n  OTEL_EXPORTER_OTLP_TRACES_COMPRESSION?: string;\n  OTEL_EXPORTER_OTLP_METRICS_COMPRESSION?: string;\n  OTEL_EXPORTER_OTLP_LOGS_COMPRESSION?: string;\n  OTEL_EXPORTER_OTLP_CLIENT_KEY?: string;\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY?: string;\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY?: string;\n  OTEL_EXPORTER_OTLP_LOGS_CLIENT_KEY?: string;\n  OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_LOGS_CLIENT_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_PROTOCOL?: string;\n  OTEL_EXPORTER_OTLP_TRACES_PROTOCOL?: string;\n  OTEL_EXPORTER_OTLP_METRICS_PROTOCOL?: string;\n  OTEL_EXPORTER_OTLP_LOGS_PROTOCOL?: string;\n  OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE?: string;\n} & ENVIRONMENT_BOOLEANS &\n  ENVIRONMENT_NUMBERS &\n  ENVIRONMENT_LISTS;\n\nexport type RAW_ENVIRONMENT = {\n  [key: string]: string | number | undefined | string[];\n};\n\nexport const DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT = Infinity;\n\nexport const DEFAULT_ATTRIBUTE_COUNT_LIMIT = 128;\n\nexport const DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT = 128;\nexport const DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT = 128;\n\n/**\n * Default environment variables\n */\nexport const DEFAULT_ENVIRONMENT: Required<ENVIRONMENT> = {\n  OTEL_SDK_DISABLED: false,\n  CONTAINER_NAME: '',\n  ECS_CONTAINER_METADATA_URI_V4: '',\n  ECS_CONTAINER_METADATA_URI: '',\n  HOSTNAME: '',\n  KUBERNETES_SERVICE_HOST: '',\n  NAMESPACE: '',\n  OTEL_BSP_EXPORT_TIMEOUT: 30000,\n  OTEL_BSP_MAX_EXPORT_BATCH_SIZE: 512,\n  OTEL_BSP_MAX_QUEUE_SIZE: 2048,\n  OTEL_BSP_SCHEDULE_DELAY: 5000,\n  OTEL_BLRP_EXPORT_TIMEOUT: 30000,\n  OTEL_BLRP_MAX_EXPORT_BATCH_SIZE: 512,\n  OTEL_BLRP_MAX_QUEUE_SIZE: 2048,\n  OTEL_BLRP_SCHEDULE_DELAY: 5000,\n  OTEL_EXPORTER_JAEGER_AGENT_HOST: '',\n  OTEL_EXPORTER_JAEGER_AGENT_PORT: 6832,\n  OTEL_EXPORTER_JAEGER_ENDPOINT: '',\n  OTEL_EXPORTER_JAEGER_PASSWORD: '',\n  OTEL_EXPORTER_JAEGER_USER: '',\n  OTEL_EXPORTER_OTLP_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_LOGS_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_HEADERS: '',\n  OTEL_EXPORTER_OTLP_TRACES_HEADERS: '',\n  OTEL_EXPORTER_OTLP_METRICS_HEADERS: '',\n  OTEL_EXPORTER_OTLP_LOGS_HEADERS: '',\n  OTEL_EXPORTER_OTLP_TIMEOUT: 10000,\n  OTEL_EXPORTER_OTLP_TRACES_TIMEOUT: 10000,\n  OTEL_EXPORTER_OTLP_METRICS_TIMEOUT: 10000,\n  OTEL_EXPORTER_OTLP_LOGS_TIMEOUT: 10000,\n  OTEL_EXPORTER_ZIPKIN_ENDPOINT: 'http://localhost:9411/api/v2/spans',\n  OTEL_LOG_LEVEL: DiagLogLevel.INFO,\n  OTEL_NO_PATCH_MODULES: [],\n  OTEL_PROPAGATORS: ['tracecontext', 'baggage'],\n  OTEL_RESOURCE_ATTRIBUTES: '',\n  OTEL_SERVICE_NAME: '',\n  OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  OTEL_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT:\n    DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  OTEL_SPAN_EVENT_COUNT_LIMIT: 128,\n  OTEL_SPAN_LINK_COUNT_LIMIT: 128,\n  OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT:\n    DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT,\n  OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT:\n    DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT,\n  OTEL_TRACES_EXPORTER: '',\n  OTEL_TRACES_SAMPLER: TracesSamplerValues.ParentBasedAlwaysOn,\n  OTEL_TRACES_SAMPLER_ARG: '',\n  OTEL_LOGS_EXPORTER: '',\n  OTEL_EXPORTER_OTLP_INSECURE: '',\n  OTEL_EXPORTER_OTLP_TRACES_INSECURE: '',\n  OTEL_EXPORTER_OTLP_METRICS_INSECURE: '',\n  OTEL_EXPORTER_OTLP_LOGS_INSECURE: '',\n  OTEL_EXPORTER_OTLP_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_LOGS_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_TRACES_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_METRICS_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_LOGS_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_LOGS_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_LOGS_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_PROTOCOL: 'http/protobuf',\n  OTEL_EXPORTER_OTLP_TRACES_PROTOCOL: 'http/protobuf',\n  OTEL_EXPORTER_OTLP_METRICS_PROTOCOL: 'http/protobuf',\n  OTEL_EXPORTER_OTLP_LOGS_PROTOCOL: 'http/protobuf',\n  OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE: 'cumulative',\n  OTEL_SEMCONV_STABILITY_OPT_IN: [],\n};\n\n/**\n * @param key\n * @param environment\n * @param values\n */\nfunction parseBoolean(\n  key: keyof ENVIRONMENT_BOOLEANS,\n  environment: ENVIRONMENT,\n  values: RAW_ENVIRONMENT\n) {\n  if (typeof values[key] === 'undefined') {\n    return;\n  }\n\n  const value = String(values[key]);\n  // support case-insensitive \"true\"\n  environment[key] = value.toLowerCase() === 'true';\n}\n\n/**\n * Parses a variable as number with number validation\n * @param name\n * @param environment\n * @param values\n * @param min\n * @param max\n */\nfunction parseNumber(\n  name: keyof ENVIRONMENT_NUMBERS,\n  environment: ENVIRONMENT,\n  values: RAW_ENVIRONMENT,\n  min = -Infinity,\n  max = Infinity\n) {\n  if (typeof values[name] !== 'undefined') {\n    const value = Number(values[name] as string);\n    if (!isNaN(value)) {\n      if (value < min) {\n        environment[name] = min;\n      } else if (value > max) {\n        environment[name] = max;\n      } else {\n        environment[name] = value;\n      }\n    }\n  }\n}\n\n/**\n * Parses list-like strings from input into output.\n * @param name\n * @param environment\n * @param values\n * @param separator\n */\nfunction parseStringList(\n  name: keyof ENVIRONMENT_LISTS,\n  output: ENVIRONMENT,\n  input: RAW_ENVIRONMENT,\n  separator = DEFAULT_LIST_SEPARATOR\n) {\n  const givenValue = input[name];\n  if (typeof givenValue === 'string') {\n    output[name] = givenValue.split(separator).map(v => v.trim());\n  }\n}\n\n// The support string -> DiagLogLevel mappings\nconst logLevelMap: { [key: string]: DiagLogLevel } = {\n  ALL: DiagLogLevel.ALL,\n  VERBOSE: DiagLogLevel.VERBOSE,\n  DEBUG: DiagLogLevel.DEBUG,\n  INFO: DiagLogLevel.INFO,\n  WARN: DiagLogLevel.WARN,\n  ERROR: DiagLogLevel.ERROR,\n  NONE: DiagLogLevel.NONE,\n};\n\n/**\n * Environmentally sets log level if valid log level string is provided\n * @param key\n * @param environment\n * @param values\n */\nfunction setLogLevelFromEnv(\n  key: keyof ENVIRONMENT,\n  environment: RAW_ENVIRONMENT | ENVIRONMENT,\n  values: RAW_ENVIRONMENT\n) {\n  const value = values[key];\n  if (typeof value === 'string') {\n    const theLevel = logLevelMap[value.toUpperCase()];\n    if (theLevel != null) {\n      environment[key] = theLevel;\n    }\n  }\n}\n\n/**\n * Parses environment values\n * @param values\n */\nexport function parseEnvironment(values: RAW_ENVIRONMENT): ENVIRONMENT {\n  const environment: ENVIRONMENT = {};\n\n  for (const env in DEFAULT_ENVIRONMENT) {\n    const key = env as keyof ENVIRONMENT;\n\n    switch (key) {\n      case 'OTEL_LOG_LEVEL':\n        setLogLevelFromEnv(key, environment, values);\n        break;\n\n      default:\n        if (isEnvVarABoolean(key)) {\n          parseBoolean(key, environment, values);\n        } else if (isEnvVarANumber(key)) {\n          parseNumber(key, environment, values);\n        } else if (isEnvVarAList(key)) {\n          parseStringList(key, environment, values);\n        } else {\n          const value = values[key];\n          if (typeof value !== 'undefined' && value !== null) {\n            environment[key] = String(value);\n          }\n        }\n    }\n  }\n\n  return environment;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;AAEH,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAC;AAClD,OAAO,EAAE,mBAAmB,EAAE,MAAM,YAAY,CAAC;;;AAEjD,IAAM,sBAAsB,GAAG,GAAG,CAAC;AAEnC;;GAEG,CAEH,IAAM,wBAAwB,GAAG;IAAC,mBAAmB;CAAU,CAAC;AAMhE,SAAS,gBAAgB,CAAC,GAAY;IACpC,OAAO,AACL,wBAAwB,CAAC,OAAO,CAAC,GAAiC,CAAC,GAAG,CAAC,CAAC,CACzE,CAAC;AACJ,CAAC;AAED,IAAM,wBAAwB,GAAG;IAC/B,yBAAyB;IACzB,gCAAgC;IAChC,yBAAyB;IACzB,yBAAyB;IACzB,0BAA0B;IAC1B,iCAAiC;IACjC,0BAA0B;IAC1B,0BAA0B;IAC1B,mCAAmC;IACnC,4BAA4B;IAC5B,wCAAwC;IACxC,iCAAiC;IACjC,6CAA6C;IAC7C,sCAAsC;IACtC,6BAA6B;IAC7B,4BAA4B;IAC5B,2CAA2C;IAC3C,0CAA0C;IAC1C,4BAA4B;IAC5B,mCAAmC;IACnC,oCAAoC;IACpC,iCAAiC;IACjC,iCAAiC;CACzB,CAAC;AAMX,SAAS,eAAe,CAAC,GAAY;IACnC,OAAO,AACL,wBAAwB,CAAC,OAAO,CAAC,GAAgC,CAAC,GAAG,CAAC,CAAC,CACxE,CAAC;AACJ,CAAC;AAED,IAAM,sBAAsB,GAAG;IAC7B,uBAAuB;IACvB,kBAAkB;IAClB,+BAA+B;CACvB,CAAC;AAMX,SAAS,aAAa,CAAC,GAAY;IACjC,OAAO,sBAAsB,CAAC,OAAO,CAAC,GAA8B,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7E,CAAC;AA8DM,IAAM,oCAAoC,GAAG,QAAQ,CAAC;AAEtD,IAAM,6BAA6B,GAAG,GAAG,CAAC;AAE1C,IAAM,4CAA4C,GAAG,GAAG,CAAC;AACzD,IAAM,2CAA2C,GAAG,GAAG,CAAC;AAKxD,IAAM,mBAAmB,GAA0B;IACxD,iBAAiB,EAAE,KAAK;IACxB,cAAc,EAAE,EAAE;IAClB,6BAA6B,EAAE,EAAE;IACjC,0BAA0B,EAAE,EAAE;IAC9B,QAAQ,EAAE,EAAE;IACZ,uBAAuB,EAAE,EAAE;IAC3B,SAAS,EAAE,EAAE;IACb,uBAAuB,EAAE,KAAK;IAC9B,8BAA8B,EAAE,GAAG;IACnC,uBAAuB,EAAE,IAAI;IAC7B,uBAAuB,EAAE,IAAI;IAC7B,wBAAwB,EAAE,KAAK;IAC/B,+BAA+B,EAAE,GAAG;IACpC,wBAAwB,EAAE,IAAI;IAC9B,wBAAwB,EAAE,IAAI;IAC9B,+BAA+B,EAAE,EAAE;IACnC,+BAA+B,EAAE,IAAI;IACrC,6BAA6B,EAAE,EAAE;IACjC,6BAA6B,EAAE,EAAE;IACjC,yBAAyB,EAAE,EAAE;IAC7B,2BAA2B,EAAE,EAAE;IAC/B,kCAAkC,EAAE,EAAE;IACtC,mCAAmC,EAAE,EAAE;IACvC,gCAAgC,EAAE,EAAE;IACpC,0BAA0B,EAAE,EAAE;IAC9B,iCAAiC,EAAE,EAAE;IACrC,kCAAkC,EAAE,EAAE;IACtC,+BAA+B,EAAE,EAAE;IACnC,0BAA0B,EAAE,KAAK;IACjC,iCAAiC,EAAE,KAAK;IACxC,kCAAkC,EAAE,KAAK;IACzC,+BAA+B,EAAE,KAAK;IACtC,6BAA6B,EAAE,oCAAoC;IACnE,cAAc,mLAAE,eAAY,CAAC,IAAI;IACjC,qBAAqB,EAAE,EAAE;IACzB,gBAAgB,EAAE;QAAC,cAAc;QAAE,SAAS;KAAC;IAC7C,wBAAwB,EAAE,EAAE;IAC5B,iBAAiB,EAAE,EAAE;IACrB,iCAAiC,EAAE,oCAAoC;IACvE,0BAA0B,EAAE,6BAA6B;IACzD,sCAAsC,EAAE,oCAAoC;IAC5E,+BAA+B,EAAE,6BAA6B;IAC9D,2CAA2C,EACzC,oCAAoC;IACtC,oCAAoC,EAAE,6BAA6B;IACnE,2BAA2B,EAAE,GAAG;IAChC,0BAA0B,EAAE,GAAG;IAC/B,yCAAyC,EACvC,4CAA4C;IAC9C,wCAAwC,EACtC,2CAA2C;IAC7C,oBAAoB,EAAE,EAAE;IACxB,mBAAmB,+OAAE,sBAAmB,CAAC,mBAAmB;IAC5D,uBAAuB,EAAE,EAAE;IAC3B,kBAAkB,EAAE,EAAE;IACtB,2BAA2B,EAAE,EAAE;IAC/B,kCAAkC,EAAE,EAAE;IACtC,mCAAmC,EAAE,EAAE;IACvC,gCAAgC,EAAE,EAAE;IACpC,8BAA8B,EAAE,EAAE;IAClC,qCAAqC,EAAE,EAAE;IACzC,sCAAsC,EAAE,EAAE;IAC1C,mCAAmC,EAAE,EAAE;IACvC,8BAA8B,EAAE,EAAE;IAClC,qCAAqC,EAAE,EAAE;IACzC,sCAAsC,EAAE,EAAE;IAC1C,mCAAmC,EAAE,EAAE;IACvC,6BAA6B,EAAE,EAAE;IACjC,oCAAoC,EAAE,EAAE;IACxC,qCAAqC,EAAE,EAAE;IACzC,kCAAkC,EAAE,EAAE;IACtC,qCAAqC,EAAE,EAAE;IACzC,4CAA4C,EAAE,EAAE;IAChD,6CAA6C,EAAE,EAAE;IACjD,0CAA0C,EAAE,EAAE;IAC9C,2BAA2B,EAAE,eAAe;IAC5C,kCAAkC,EAAE,eAAe;IACnD,mCAAmC,EAAE,eAAe;IACpD,gCAAgC,EAAE,eAAe;IACjD,iDAAiD,EAAE,YAAY;IAC/D,6BAA6B,EAAE,EAAE;CAClC,CAAC;AAEF;;;;GAIG,CACH,SAAS,YAAY,CACnB,GAA+B,EAC/B,WAAwB,EACxB,MAAuB;IAEvB,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,WAAW,EAAE;QACtC,OAAO;KACR;IAED,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IAClC,kCAAkC;IAClC,WAAW,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,WAAW,EAAE,KAAK,MAAM,CAAC;AACpD,CAAC;AAED;;;;;;;GAOG,CACH,SAAS,WAAW,CAClB,IAA+B,EAC/B,WAAwB,EACxB,MAAuB,EACvB,GAAe,EACf,GAAc;IADd,IAAA,QAAA,KAAA,GAAA;QAAA,MAAA,CAAO,QAAQ;IAAA;IACf,IAAA,QAAA,KAAA,GAAA;QAAA,MAAA,QAAc;IAAA;IAEd,IAAI,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,WAAW,EAAE;QACvC,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAW,CAAC,CAAC;QAC7C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YACjB,IAAI,KAAK,GAAG,GAAG,EAAE;gBACf,WAAW,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;aACzB,MAAM,IAAI,KAAK,GAAG,GAAG,EAAE;gBACtB,WAAW,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;aACzB,MAAM;gBACL,WAAW,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;aAC3B;SACF;KACF;AACH,CAAC;AAED;;;;;;GAMG,CACH,SAAS,eAAe,CACtB,IAA6B,EAC7B,MAAmB,EACnB,KAAsB,EACtB,SAAkC;IAAlC,IAAA,cAAA,KAAA,GAAA;QAAA,YAAA,sBAAkC;IAAA;IAElC,IAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;IAC/B,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;QAClC,MAAM,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,SAAA,CAAC;YAAI,OAAA,CAAC,CAAC,IAAI,EAAE;QAAR,CAAQ,CAAC,CAAC;KAC/D;AACH,CAAC;AAED,8CAA8C;AAC9C,IAAM,WAAW,GAAoC;IACnD,GAAG,mLAAE,eAAY,CAAC,GAAG;IACrB,OAAO,mLAAE,eAAY,CAAC,OAAO;IAC7B,KAAK,mLAAE,eAAY,CAAC,KAAK;IACzB,IAAI,mLAAE,eAAY,CAAC,IAAI;IACvB,IAAI,mLAAE,eAAY,CAAC,IAAI;IACvB,KAAK,mLAAE,eAAY,CAAC,KAAK;IACzB,IAAI,mLAAE,eAAY,CAAC,IAAI;CACxB,CAAC;AAEF;;;;;GAKG,CACH,SAAS,kBAAkB,CACzB,GAAsB,EACtB,WAA0C,EAC1C,MAAuB;IAEvB,IAAM,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IAC1B,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAC7B,IAAM,QAAQ,GAAG,WAAW,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;QAClD,IAAI,QAAQ,IAAI,IAAI,EAAE;YACpB,WAAW,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;SAC7B;KACF;AACH,CAAC;AAMK,SAAU,gBAAgB,CAAC,MAAuB;IACtD,IAAM,WAAW,GAAgB,CAAA,CAAE,CAAC;IAEpC,IAAK,IAAM,GAAG,IAAI,mBAAmB,CAAE;QACrC,IAAM,GAAG,GAAG,GAAwB,CAAC;QAErC,OAAQ,GAAG,EAAE;YACX,KAAK,gBAAgB;gBACnB,kBAAkB,CAAC,GAAG,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;gBAC7C,MAAM;YAER;gBACE,IAAI,gBAAgB,CAAC,GAAG,CAAC,EAAE;oBACzB,YAAY,CAAC,GAAG,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;iBACxC,MAAM,IAAI,eAAe,CAAC,GAAG,CAAC,EAAE;oBAC/B,WAAW,CAAC,GAAG,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;iBACvC,MAAM,IAAI,aAAa,CAAC,GAAG,CAAC,EAAE;oBAC7B,eAAe,CAAC,GAAG,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;iBAC3C,MAAM;oBACL,IAAM,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;oBAC1B,IAAI,OAAO,KAAK,KAAK,WAAW,IAAI,KAAK,KAAK,IAAI,EAAE;wBAClD,WAAW,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;qBAClC;iBACF;SACJ;KACF;IAED,OAAO,WAAW,CAAC;AACrB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 12733, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12739, "column": 0}, "map": {"version":3,"file":"globalThis.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/core/src/platform/browser/globalThis.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Updates to this file should also be replicated to @opentelemetry/api too.\n\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport const _globalThis: typeof globalThis =\n  typeof globalThis === 'object'\n    ? globalThis\n    : typeof self === 'object'\n      ? self\n      : typeof window === 'object'\n        ? window\n        : typeof global === 'object'\n          ? global\n          : ({} as typeof globalThis);\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG,CAEH,4EAA4E;AAE5E;;;;;;GAMG,CAEH,8DAAA,EAAgE,CAChE,8EAA8E;;;;AACvE,IAAM,WAAW,GACtB,OAAO,UAAU,KAAK,QAAQ,GAC1B,UAAU,GACV,OAAO,IAAI,KAAK,QAAQ,GACtB,IAAI,GACJ,OAAO,MAAM,KAAK,QAAQ,mDAExB,OAAO,MAAM,KAAK,QAAQ,GACxB,MAAM,GACL,CAAA,CAAwB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 12765, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12771, "column": 0}, "map": {"version":3,"file":"environment.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/core/src/platform/browser/environment.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DEFAULT_ENVIRONMENT,\n  ENVIRONMENT,\n  RAW_ENVIRONMENT,\n  parseEnvironment,\n} from '../../utils/environment';\nimport { _globalThis } from './globalThis';\n\n/**\n * Gets the environment variables\n */\nexport function getEnv(): Required<ENVIRONMENT> {\n  const globalEnv = parseEnvironment(\n    _globalThis as typeof globalThis & RAW_ENVIRONMENT\n  );\n  return Object.assign({}, DEFAULT_ENVIRONMENT, globalEnv);\n}\n\nexport function getEnvWithoutDefaults(): ENVIRONMENT {\n  return parseEnvironment(_globalThis as typeof globalThis & RAW_ENVIRONMENT);\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,OAAO,EACL,mBAAmB,EAGnB,gBAAgB,GACjB,MAAM,yBAAyB,CAAC;AACjC,OAAO,EAAE,WAAW,EAAE,MAAM,cAAc,CAAC;;;AAKrC,SAAU,MAAM;IACpB,IAAM,SAAS,uPAAG,mBAAA,AAAgB,+PAChC,cAAkD,CACnD,CAAC;IACF,OAAO,MAAM,CAAC,MAAM,CAAC,CAAA,CAAE,kPAAE,sBAAmB,EAAE,SAAS,CAAC,CAAC;AAC3D,CAAC;AAEK,SAAU,qBAAqB;IACnC,2PAAO,mBAAA,AAAgB,+PAAC,cAAkD,CAAC,CAAC;AAC9E,CAAC","ignoreList":[0]}},
    {"offset": {"line": 12800, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12806, "column": 0}, "map": {"version":3,"file":"logging-error-handler.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/core/src/common/logging-error-handler.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag, Exception } from '@opentelemetry/api';\nimport { ErrorHandler } from './types';\n\n/**\n * Returns a function that logs an error using the provided logger, or a\n * console logger if one was not provided.\n */\nexport function loggingErrorHandler(): ErrorHandler {\n  return (ex: Exception) => {\n    diag.error(stringifyException(ex));\n  };\n}\n\n/**\n * Converts an exception into a string representation\n * @param {Exception} ex\n */\nfunction stringifyException(ex: Exception | string): string {\n  if (typeof ex === 'string') {\n    return ex;\n  } else {\n    return JSON.stringify(flattenException(ex));\n  }\n}\n\n/**\n * Flattens an exception into key-value pairs by traversing the prototype chain\n * and coercing values to strings. Duplicate properties will not be overwritten;\n * the first insert wins.\n */\nfunction flattenException(ex: Exception): Record<string, string> {\n  const result = {} as Record<string, string>;\n  let current = ex;\n\n  while (current !== null) {\n    Object.getOwnPropertyNames(current).forEach(propertyName => {\n      if (result[propertyName]) return;\n      const value = current[propertyName as keyof typeof current];\n      if (value) {\n        result[propertyName] = String(value);\n      }\n    });\n    current = Object.getPrototypeOf(current);\n  }\n\n  return result;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAEH,OAAO,EAAE,IAAI,EAAa,MAAM,oBAAoB,CAAC;;AAO/C,SAAU,mBAAmB;IACjC,OAAO,SAAC,EAAa;yLACnB,OAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC;AACJ,CAAC;AAED;;;GAGG,CACH,SAAS,kBAAkB,CAAC,EAAsB;IAChD,IAAI,OAAO,EAAE,KAAK,QAAQ,EAAE;QAC1B,OAAO,EAAE,CAAC;KACX,MAAM;QACL,OAAO,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC;KAC7C;AACH,CAAC;AAED;;;;GAIG,CACH,SAAS,gBAAgB,CAAC,EAAa;IACrC,IAAM,MAAM,GAAG,CAAA,CAA4B,CAAC;IAC5C,IAAI,OAAO,GAAG,EAAE,CAAC;IAEjB,MAAO,OAAO,KAAK,IAAI,CAAE;QACvB,MAAM,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,SAAA,YAAY;YACtD,IAAI,MAAM,CAAC,YAAY,CAAC,EAAE,OAAO;YACjC,IAAM,KAAK,GAAG,OAAO,CAAC,YAAoC,CAAC,CAAC;YAC5D,IAAI,KAAK,EAAE;gBACT,MAAM,CAAC,YAAY,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;aACtC;QACH,CAAC,CAAC,CAAC;QACH,OAAO,GAAG,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;KAC1C;IAED,OAAO,MAAM,CAAC;AAChB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 12859, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12865, "column": 0}, "map": {"version":3,"file":"global-error-handler.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/core/src/common/global-error-handler.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Exception } from '@opentelemetry/api';\nimport { loggingErrorHandler } from './logging-error-handler';\nimport { ErrorHandler } from './types';\n\n/** The global error handler delegate */\nlet delegateHandler = loggingErrorHandler();\n\n/**\n * Set the global error handler\n * @param {ErrorHandler} handler\n */\nexport function setGlobalErrorHandler(handler: ErrorHandler): void {\n  delegateHandler = handler;\n}\n\n/**\n * Return the global error handler\n * @param {Exception} ex\n */\nexport function globalErrorHandler(ex: Exception): void {\n  try {\n    delegateHandler(ex);\n  } catch {} // eslint-disable-line no-empty\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;;AAGH,OAAO,EAAE,mBAAmB,EAAE,MAAM,yBAAyB,CAAC;;AAG9D,sCAAA,EAAwC,CACxC,IAAI,eAAe,wQAAG,sBAAA,AAAmB,EAAE,CAAC;AAMtC,SAAU,qBAAqB,CAAC,OAAqB;IACzD,eAAe,GAAG,OAAO,CAAC;AAC5B,CAAC;AAMK,SAAU,kBAAkB,CAAC,EAAa;IAC9C,IAAI;QACF,eAAe,CAAC,EAAE,CAAC,CAAC;KACrB,CAAC,OAAA,IAAM,CAAA,CAAE,CAAC,+BAA+B;AAC5C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 12894, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12900, "column": 0}, "map": {"version":3,"file":"ParentBasedSampler.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/sdk-trace-base/src/sampler/ParentBasedSampler.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  isSpanContextValid,\n  Link,\n  SpanAttributes,\n  SpanKind,\n  TraceFlags,\n  trace,\n} from '@opentelemetry/api';\nimport { globalErrorHandler } from '@opentelemetry/core';\nimport { AlwaysOffSampler } from './AlwaysOffSampler';\nimport { AlwaysOnSampler } from './AlwaysOnSampler';\nimport { Sampler, SamplingResult } from '../Sampler';\n\n/**\n * A composite sampler that either respects the parent span's sampling decision\n * or delegates to `delegateSampler` for root spans.\n */\nexport class ParentBasedSampler implements Sampler {\n  private _root: Sampler;\n  private _remoteParentSampled: Sampler;\n  private _remoteParentNotSampled: Sampler;\n  private _localParentSampled: Sampler;\n  private _localParentNotSampled: Sampler;\n\n  constructor(config: ParentBasedSamplerConfig) {\n    this._root = config.root;\n\n    if (!this._root) {\n      globalErrorHandler(\n        new Error('ParentBasedSampler must have a root sampler configured')\n      );\n      this._root = new AlwaysOnSampler();\n    }\n\n    this._remoteParentSampled =\n      config.remoteParentSampled ?? new AlwaysOnSampler();\n    this._remoteParentNotSampled =\n      config.remoteParentNotSampled ?? new AlwaysOffSampler();\n    this._localParentSampled =\n      config.localParentSampled ?? new AlwaysOnSampler();\n    this._localParentNotSampled =\n      config.localParentNotSampled ?? new AlwaysOffSampler();\n  }\n\n  shouldSample(\n    context: Context,\n    traceId: string,\n    spanName: string,\n    spanKind: SpanKind,\n    attributes: SpanAttributes,\n    links: Link[]\n  ): SamplingResult {\n    const parentContext = trace.getSpanContext(context);\n\n    if (!parentContext || !isSpanContextValid(parentContext)) {\n      return this._root.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    if (parentContext.isRemote) {\n      if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n        return this._remoteParentSampled.shouldSample(\n          context,\n          traceId,\n          spanName,\n          spanKind,\n          attributes,\n          links\n        );\n      }\n      return this._remoteParentNotSampled.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n      return this._localParentSampled.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    return this._localParentNotSampled.shouldSample(\n      context,\n      traceId,\n      spanName,\n      spanKind,\n      attributes,\n      links\n    );\n  }\n\n  toString(): string {\n    return `ParentBased{root=${this._root.toString()}, remoteParentSampled=${this._remoteParentSampled.toString()}, remoteParentNotSampled=${this._remoteParentNotSampled.toString()}, localParentSampled=${this._localParentSampled.toString()}, localParentNotSampled=${this._localParentNotSampled.toString()}}`;\n  }\n}\n\ninterface ParentBasedSamplerConfig {\n  /** Sampler called for spans with no parent */\n  root: Sampler;\n  /** Sampler called for spans with a remote parent which was sampled. Default AlwaysOn */\n  remoteParentSampled?: Sampler;\n  /** Sampler called for spans with a remote parent which was not sampled. Default AlwaysOff */\n  remoteParentNotSampled?: Sampler;\n  /** Sampler called for spans with a local parent which was sampled. Default AlwaysOn */\n  localParentSampled?: Sampler;\n  /** Sampler called for spans with a local parent which was not sampled. Default AlwaysOff */\n  localParentNotSampled?: Sampler;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 12964, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12970, "column": 0}, "map": {"version":3,"file":"TraceIdRatioBasedSampler.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/sdk-trace-base/src/sampler/TraceIdRatioBasedSampler.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isValidTraceId } from '@opentelemetry/api';\nimport { Sampler, SamplingDecision, SamplingResult } from '../Sampler';\n\n/** Sampler that samples a given fraction of traces based of trace id deterministically. */\nexport class TraceIdRatioBasedSampler implements Sampler {\n  private _upperBound: number;\n\n  constructor(private readonly _ratio: number = 0) {\n    this._ratio = this._normalize(_ratio);\n    this._upperBound = Math.floor(this._ratio * 0xffffffff);\n  }\n\n  shouldSample(context: unknown, traceId: string): SamplingResult {\n    return {\n      decision:\n        isValidTraceId(traceId) && this._accumulate(traceId) < this._upperBound\n          ? SamplingDecision.RECORD_AND_SAMPLED\n          : SamplingDecision.NOT_RECORD,\n    };\n  }\n\n  toString(): string {\n    return `TraceIdRatioBased{${this._ratio}}`;\n  }\n\n  private _normalize(ratio: number): number {\n    if (typeof ratio !== 'number' || isNaN(ratio)) return 0;\n    return ratio >= 1 ? 1 : ratio <= 0 ? 0 : ratio;\n  }\n\n  private _accumulate(traceId: string): number {\n    let accumulation = 0;\n    for (let i = 0; i < traceId.length / 8; i++) {\n      const pos = i * 8;\n      const part = parseInt(traceId.slice(pos, pos + 8), 16);\n      accumulation = (accumulation ^ part) >>> 0;\n    }\n    return accumulation;\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAEH,OAAO,EAAE,cAAc,EAAE,MAAM,oBAAoB,CAAC;AACpD,OAAO,EAAW,gBAAgB,EAAkB,MAAM,YAAY,CAAC;;;AAEvE,yFAAA,EAA2F,CAC3F,IAAA,2BAAA;IAGE,SAAA,yBAA6B,MAAkB;QAAlB,IAAA,WAAA,KAAA,GAAA;YAAA,SAAA,CAAkB;QAAA;QAAlB,IAAA,CAAA,MAAM,GAAN,MAAM,CAAY;QAC7C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACtC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,CAAC;IAC1D,CAAC;IAED,yBAAA,SAAA,CAAA,YAAY,GAAZ,SAAa,OAAgB,EAAE,OAAe;QAC5C,OAAO;YACL,QAAQ,uLACN,iBAAA,AAAc,EAAC,OAAO,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,WAAW,sPACnE,mBAAgB,CAAC,kBAAkB,sPACnC,mBAAgB,CAAC,UAAU;SAClC,CAAC;IACJ,CAAC;IAED,yBAAA,SAAA,CAAA,QAAQ,GAAR;QACE,OAAO,uBAAqB,IAAI,CAAC,MAAM,GAAA,GAAG,CAAC;IAC7C,CAAC;IAEO,yBAAA,SAAA,CAAA,UAAU,GAAlB,SAAmB,KAAa;QAC9B,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC;QACxD,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IACjD,CAAC;IAEO,yBAAA,SAAA,CAAA,WAAW,GAAnB,SAAoB,OAAe;QACjC,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,CAAE;YAC3C,IAAM,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YAClB,IAAM,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YACvD,YAAY,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;SAC5C;QACD,OAAO,YAAY,CAAC;IACtB,CAAC;IACH,OAAA,wBAAC;AAAD,CAAC,AAnCD,IAmCC","ignoreList":[0]}},
    {"offset": {"line": 13025, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13031, "column": 0}, "map": {"version":3,"file":"config.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/sdk-trace-base/src/config.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport { getEnv, TracesSamplerValues, ENVIRONMENT } from '@opentelemetry/core';\nimport { Sampler } from './Sampler';\nimport { AlwaysOffSampler } from './sampler/AlwaysOffSampler';\nimport { AlwaysOnSampler } from './sampler/AlwaysOnSampler';\nimport { ParentBasedSampler } from './sampler/ParentBasedSampler';\nimport { TraceIdRatioBasedSampler } from './sampler/TraceIdRatioBasedSampler';\n\nconst FALLBACK_OTEL_TRACES_SAMPLER = TracesSamplerValues.AlwaysOn;\nconst DEFAULT_RATIO = 1;\n\n/**\n * Load default configuration. For fields with primitive values, any user-provided\n * value will override the corresponding default value. For fields with\n * non-primitive values (like `spanLimits`), the user-provided value will be\n * used to extend the default value.\n */\n\n// object needs to be wrapped in this function and called when needed otherwise\n// envs are parsed before tests are ran - causes tests using these envs to fail\nexport function loadDefaultConfig() {\n  const env = getEnv();\n\n  return {\n    sampler: buildSamplerFromEnv(env),\n    forceFlushTimeoutMillis: 30000,\n    generalLimits: {\n      attributeValueLengthLimit: env.OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n      attributeCountLimit: env.OTEL_ATTRIBUTE_COUNT_LIMIT,\n    },\n    spanLimits: {\n      attributeValueLengthLimit: env.OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n      attributeCountLimit: env.OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT,\n      linkCountLimit: env.OTEL_SPAN_LINK_COUNT_LIMIT,\n      eventCountLimit: env.OTEL_SPAN_EVENT_COUNT_LIMIT,\n      attributePerEventCountLimit:\n        env.OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT,\n      attributePerLinkCountLimit: env.OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT,\n    },\n    mergeResourceWithDefaults: true,\n  };\n}\n\n/**\n * Based on environment, builds a sampler, complies with specification.\n * @param environment optional, by default uses getEnv(), but allows passing a value to reuse parsed environment\n */\nexport function buildSamplerFromEnv(\n  environment: Required<ENVIRONMENT> = getEnv()\n): Sampler {\n  switch (environment.OTEL_TRACES_SAMPLER) {\n    case TracesSamplerValues.AlwaysOn:\n      return new AlwaysOnSampler();\n    case TracesSamplerValues.AlwaysOff:\n      return new AlwaysOffSampler();\n    case TracesSamplerValues.ParentBasedAlwaysOn:\n      return new ParentBasedSampler({\n        root: new AlwaysOnSampler(),\n      });\n    case TracesSamplerValues.ParentBasedAlwaysOff:\n      return new ParentBasedSampler({\n        root: new AlwaysOffSampler(),\n      });\n    case TracesSamplerValues.TraceIdRatio:\n      return new TraceIdRatioBasedSampler(\n        getSamplerProbabilityFromEnv(environment)\n      );\n    case TracesSamplerValues.ParentBasedTraceIdRatio:\n      return new ParentBasedSampler({\n        root: new TraceIdRatioBasedSampler(\n          getSamplerProbabilityFromEnv(environment)\n        ),\n      });\n    default:\n      diag.error(\n        `OTEL_TRACES_SAMPLER value \"${environment.OTEL_TRACES_SAMPLER} invalid, defaulting to ${FALLBACK_OTEL_TRACES_SAMPLER}\".`\n      );\n      return new AlwaysOnSampler();\n  }\n}\n\nfunction getSamplerProbabilityFromEnv(\n  environment: Required<ENVIRONMENT>\n): number | undefined {\n  if (\n    environment.OTEL_TRACES_SAMPLER_ARG === undefined ||\n    environment.OTEL_TRACES_SAMPLER_ARG === ''\n  ) {\n    diag.error(\n      `OTEL_TRACES_SAMPLER_ARG is blank, defaulting to ${DEFAULT_RATIO}.`\n    );\n    return DEFAULT_RATIO;\n  }\n\n  const probability = Number(environment.OTEL_TRACES_SAMPLER_ARG);\n\n  if (isNaN(probability)) {\n    diag.error(\n      `OTEL_TRACES_SAMPLER_ARG=${environment.OTEL_TRACES_SAMPLER_ARG} was given, but it is invalid, defaulting to ${DEFAULT_RATIO}.`\n    );\n    return DEFAULT_RATIO;\n  }\n\n  if (probability < 0 || probability > 1) {\n    diag.error(\n      `OTEL_TRACES_SAMPLER_ARG=${environment.OTEL_TRACES_SAMPLER_ARG} was given, but it is out of range ([0..1]), defaulting to ${DEFAULT_RATIO}.`\n    );\n    return DEFAULT_RATIO;\n  }\n\n  return probability;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,OAAO,EAAE,IAAI,EAAE,MAAM,oBAAoB,CAAC;AAC1C,OAAO,EAAE,MAAM,EAAE,mBAAmB,EAAe,MAAM,qBAAqB,CAAC;;AAG/E,OAAO,EAAE,eAAe,EAAE,MAAM,2BAA2B,CAAC;AAD5D,OAAO,EAAE,gBAAgB,EAAE,MAAM,4BAA4B,CAAC;AAE9D,OAAO,EAAE,kBAAkB,EAAE,MAAM,8BAA8B,CAAC;AAClE,OAAO,EAAE,wBAAwB,EAAE,MAAM,oCAAoC,CAAC;;;;;;;AAE9E,IAAM,4BAA4B,gPAAG,sBAAmB,CAAC,QAAQ,CAAC;AAClE,IAAM,aAAa,GAAG,CAAC,CAAC;AAWlB,SAAU,iBAAiB;IAC/B,IAAM,GAAG,GAAG,2QAAA,AAAM,EAAE,CAAC;IAErB,OAAO;QACL,OAAO,EAAE,mBAAmB,CAAC,GAAG,CAAC;QACjC,uBAAuB,EAAE,KAAK;QAC9B,aAAa,EAAE;YACb,yBAAyB,EAAE,GAAG,CAAC,iCAAiC;YAChE,mBAAmB,EAAE,GAAG,CAAC,0BAA0B;SACpD;QACD,UAAU,EAAE;YACV,yBAAyB,EAAE,GAAG,CAAC,sCAAsC;YACrE,mBAAmB,EAAE,GAAG,CAAC,+BAA+B;YACxD,cAAc,EAAE,GAAG,CAAC,0BAA0B;YAC9C,eAAe,EAAE,GAAG,CAAC,2BAA2B;YAChD,2BAA2B,EACzB,GAAG,CAAC,yCAAyC;YAC/C,0BAA0B,EAAE,GAAG,CAAC,wCAAwC;SACzE;QACD,yBAAyB,EAAE,IAAI;KAChC,CAAC;AACJ,CAAC;AAMK,SAAU,mBAAmB,CACjC,WAA6C;IAA7C,IAAA,gBAAA,KAAA,GAAA;QAAA,eAAqC,0QAAA,AAAM,EAAE;IAAA;IAE7C,OAAQ,WAAW,CAAC,mBAAmB,EAAE;QACvC,kPAAK,sBAAmB,CAAC,QAAQ;YAC/B,OAAO,IAAI,wRAAe,EAAE,CAAC;QAC/B,kPAAK,sBAAmB,CAAC,SAAS;YAChC,OAAO,2QAAI,mBAAgB,EAAE,CAAC;QAChC,kPAAK,sBAAmB,CAAC,mBAAmB;YAC1C,OAAO,6QAAI,qBAAkB,CAAC;gBAC5B,IAAI,EAAE,0QAAI,kBAAe,EAAE;aAC5B,CAAC,CAAC;QACL,iPAAK,uBAAmB,CAAC,oBAAoB;YAC3C,OAAO,6QAAI,qBAAkB,CAAC;gBAC5B,IAAI,EAAE,2QAAI,mBAAgB,EAAE;aAC7B,CAAC,CAAC;QACL,KAAK,mQAAmB,CAAC,YAAY;YACnC,OAAO,mRAAI,2BAAwB,CACjC,4BAA4B,CAAC,WAAW,CAAC,CAC1C,CAAC;QACJ,kPAAK,sBAAmB,CAAC,uBAAuB;YAC9C,OAAO,6QAAI,qBAAkB,CAAC;gBAC5B,IAAI,EAAE,mRAAI,2BAAwB,CAChC,4BAA4B,CAAC,WAAW,CAAC,CAC1C;aACF,CAAC,CAAC;QACL;YACE,wLAAI,CAAC,KAAK,CACR,iCAA8B,WAAW,CAAC,mBAAmB,GAAA,6BAA2B,4BAA4B,GAAA,KAAI,CACzH,CAAC;YACF,OAAO,0QAAI,kBAAe,EAAE,CAAC;KAChC;AACH,CAAC;AAED,SAAS,4BAA4B,CACnC,WAAkC;IAElC,IACE,WAAW,CAAC,uBAAuB,KAAK,SAAS,IACjD,WAAW,CAAC,uBAAuB,KAAK,EAAE,EAC1C;QACA,wLAAI,CAAC,KAAK,CACR,qDAAmD,aAAa,GAAA,GAAG,CACpE,CAAC;QACF,OAAO,aAAa,CAAC;KACtB;IAED,IAAM,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC,uBAAuB,CAAC,CAAC;IAEhE,IAAI,KAAK,CAAC,WAAW,CAAC,EAAE;yLACtB,OAAI,CAAC,KAAK,CACR,6BAA2B,WAAW,CAAC,uBAAuB,GAAA,kDAAgD,aAAa,GAAA,GAAG,CAC/H,CAAC;QACF,OAAO,aAAa,CAAC;KACtB;IAED,IAAI,WAAW,GAAG,CAAC,IAAI,WAAW,GAAG,CAAC,EAAE;yLACtC,OAAI,CAAC,KAAK,CACR,6BAA2B,WAAW,CAAC,uBAAuB,GAAA,gEAA8D,aAAa,GAAA,GAAG,CAC7I,CAAC;QACF,OAAO,aAAa,CAAC;KACtB;IAED,OAAO,WAAW,CAAC;AACrB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 13128, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13134, "column": 0}, "map": {"version":3,"file":"utility.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/sdk-trace-base/src/utility.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { buildSamplerFromEnv, loadDefaultConfig } from './config';\nimport { Sampler } from './Sampler';\nimport { SpanLimits, TracerConfig, GeneralLimits } from './types';\nimport {\n  DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  getEnvWithoutDefaults,\n} from '@opentelemetry/core';\n\n/**\n * Function to merge Default configuration (as specified in './config') with\n * user provided configurations.\n */\nexport function mergeConfig(userConfig: TracerConfig): TracerConfig & {\n  sampler: Sampler;\n  spanLimits: SpanLimits;\n  generalLimits: GeneralLimits;\n} {\n  const perInstanceDefaults: Partial<TracerConfig> = {\n    sampler: buildSamplerFromEnv(),\n  };\n\n  const DEFAULT_CONFIG = loadDefaultConfig();\n\n  const target = Object.assign(\n    {},\n    DEFAULT_CONFIG,\n    perInstanceDefaults,\n    userConfig\n  );\n\n  target.generalLimits = Object.assign(\n    {},\n    DEFAULT_CONFIG.generalLimits,\n    userConfig.generalLimits || {}\n  );\n\n  target.spanLimits = Object.assign(\n    {},\n    DEFAULT_CONFIG.spanLimits,\n    userConfig.spanLimits || {}\n  );\n\n  return target;\n}\n\n/**\n * When general limits are provided and model specific limits are not,\n * configures the model specific limits by using the values from the general ones.\n * @param userConfig User provided tracer configuration\n */\nexport function reconfigureLimits(userConfig: TracerConfig): TracerConfig {\n  const spanLimits = Object.assign({}, userConfig.spanLimits);\n\n  const parsedEnvConfig = getEnvWithoutDefaults();\n\n  /**\n   * Reassign span attribute count limit to use first non null value defined by user or use default value\n   */\n  spanLimits.attributeCountLimit =\n    userConfig.spanLimits?.attributeCountLimit ??\n    userConfig.generalLimits?.attributeCountLimit ??\n    parsedEnvConfig.OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT ??\n    parsedEnvConfig.OTEL_ATTRIBUTE_COUNT_LIMIT ??\n    DEFAULT_ATTRIBUTE_COUNT_LIMIT;\n\n  /**\n   * Reassign span attribute value length limit to use first non null value defined by user or use default value\n   */\n  spanLimits.attributeValueLengthLimit =\n    userConfig.spanLimits?.attributeValueLengthLimit ??\n    userConfig.generalLimits?.attributeValueLengthLimit ??\n    parsedEnvConfig.OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT ??\n    parsedEnvConfig.OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT ??\n    DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT;\n\n  return Object.assign({}, userConfig, { spanLimits });\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,OAAO,EAAE,mBAAmB,EAAE,iBAAiB,EAAE,MAAM,UAAU,CAAC;AAGlE,OAAO,EACL,6BAA6B,EAC7B,oCAAoC,EACpC,qBAAqB,GACtB,MAAM,qBAAqB,CAAC;;;;AAMvB,SAAU,WAAW,CAAC,UAAwB;IAKlD,IAAM,mBAAmB,GAA0B;QACjD,OAAO,wPAAE,sBAAA,AAAmB,EAAE;KAC/B,CAAC;IAEF,IAAM,cAAc,wPAAG,qBAAA,AAAiB,EAAE,CAAC;IAE3C,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAC1B,CAAA,CAAE,EACF,cAAc,EACd,mBAAmB,EACnB,UAAU,CACX,CAAC;IAEF,MAAM,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,CAClC,CAAA,CAAE,EACF,cAAc,CAAC,aAAa,EAC5B,UAAU,CAAC,aAAa,IAAI,CAAA,CAAE,CAC/B,CAAC;IAEF,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAC/B,CAAA,CAAE,EACF,cAAc,CAAC,UAAU,EACzB,UAAU,CAAC,UAAU,IAAI,CAAA,CAAE,CAC5B,CAAC;IAEF,OAAO,MAAM,CAAC;AAChB,CAAC;AAOK,SAAU,iBAAiB,CAAC,UAAwB;;IACxD,IAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,CAAA,CAAE,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC;IAE5D,IAAM,eAAe,qQAAG,wBAAA,AAAqB,EAAE,CAAC;IAEhD;;OAEG,CACH,UAAU,CAAC,mBAAmB,GAC5B,CAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,KAAA,UAAU,CAAC,UAAU,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,mBAAmB,MAAA,QAAA,OAAA,KAAA,IAAA,KAC1C,CAAA,KAAA,UAAU,CAAC,aAAa,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,mBAAmB,MAAA,QAAA,OAAA,KAAA,IAAA,KAC7C,eAAe,CAAC,+BAA+B,MAAA,QAAA,OAAA,KAAA,IAAA,KAC/C,eAAe,CAAC,0BAA0B,MAAA,QAAA,OAAA,KAAA,IAAA,oPAC1C,iCAA6B,CAAC;IAEhC;;OAEG,CACH,UAAU,CAAC,yBAAyB,GAClC,CAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,KAAA,UAAU,CAAC,UAAU,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,yBAAyB,MAAA,QAAA,OAAA,KAAA,IAAA,KAChD,CAAA,KAAA,UAAU,CAAC,aAAa,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,yBAAyB,MAAA,QAAA,OAAA,KAAA,IAAA,KACnD,eAAe,CAAC,sCAAsC,MAAA,QAAA,OAAA,KAAA,IAAA,KACtD,eAAe,CAAC,iCAAiC,MAAA,QAAA,OAAA,KAAA,IAAA,qPACjD,uCAAoC,CAAC;IAEvC,OAAO,MAAM,CAAC,MAAM,CAAC,CAAA,CAAE,EAAE,UAAU,EAAE;QAAE,UAAU,EAAA,UAAA;IAAA,CAAE,CAAC,CAAC;AACvD,CAAC","ignoreList":[0]}},
    {"offset": {"line": 13181, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13187, "column": 0}, "map": {"version":3,"file":"RandomIdGenerator.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/sdk-trace-base/src/platform/browser/RandomIdGenerator.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IdGenerator } from '../../IdGenerator';\n\nconst SPAN_ID_BYTES = 8;\nconst TRACE_ID_BYTES = 16;\n\nexport class RandomIdGenerator implements IdGenerator {\n  /**\n   * Returns a random 16-byte trace ID formatted/encoded as a 32 lowercase hex\n   * characters corresponding to 128 bits.\n   */\n  generateTraceId = getIdGenerator(TRACE_ID_BYTES);\n\n  /**\n   * Returns a random 8-byte span ID formatted/encoded as a 16 lowercase hex\n   * characters corresponding to 64 bits.\n   */\n  generateSpanId = getIdGenerator(SPAN_ID_BYTES);\n}\n\nconst SHARED_CHAR_CODES_ARRAY = Array(32);\nfunction getIdGenerator(bytes: number): () => string {\n  return function generateId() {\n    for (let i = 0; i < bytes * 2; i++) {\n      SHARED_CHAR_CODES_ARRAY[i] = Math.floor(Math.random() * 16) + 48;\n      // valid hex characters in the range 48-57 and 97-102\n      if (SHARED_CHAR_CODES_ARRAY[i] >= 58) {\n        SHARED_CHAR_CODES_ARRAY[i] += 39;\n      }\n    }\n    return String.fromCharCode.apply(\n      null,\n      SHARED_CHAR_CODES_ARRAY.slice(0, bytes * 2)\n    );\n  };\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAIH,IAAM,aAAa,GAAG,CAAC,CAAC;AACxB,IAAM,cAAc,GAAG,EAAE,CAAC;AAE1B,IAAA,oBAAA;IAAA,SAAA;QACE;;;WAGG,CACH,IAAA,CAAA,eAAe,GAAG,cAAc,CAAC,cAAc,CAAC,CAAC;QAEjD;;;WAGG,CACH,IAAA,CAAA,cAAc,GAAG,cAAc,CAAC,aAAa,CAAC,CAAC;IACjD,CAAC;IAAD,OAAA,iBAAC;AAAD,CAAC,AAZD,IAYC;;AAED,IAAM,uBAAuB,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;AAC1C,SAAS,cAAc,CAAC,KAAa;IACnC,OAAO,SAAS,UAAU;QACxB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,CAAE;YAClC,uBAAuB,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;YACjE,qDAAqD;YACrD,IAAI,uBAAuB,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE;gBACpC,uBAAuB,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;aAClC;SACF;QACD,OAAO,MAAM,CAAC,YAAY,CAAC,KAAK,CAC9B,IAAI,EACJ,uBAAuB,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAC5C,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 13233, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13239, "column": 0}, "map": {"version":3,"file":"Tracer.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/sdk-trace-base/src/Tracer.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport {\n  InstrumentationLibrary,\n  sanitizeAttributes,\n  isTracingSuppressed,\n} from '@opentelemetry/core';\nimport { IResource } from '@opentelemetry/resources';\nimport { BasicTracerProvider } from './BasicTracerProvider';\nimport { Span } from './Span';\nimport { GeneralLimits, SpanLimits, TracerConfig } from './types';\nimport { mergeConfig } from './utility';\nimport { SpanProcessor } from './SpanProcessor';\nimport { Sampler } from './Sampler';\nimport { IdGenerator } from './IdGenerator';\nimport { RandomIdGenerator } from './platform';\n\n/**\n * This class represents a basic tracer.\n */\nexport class Tracer implements api.Tracer {\n  private readonly _sampler: Sampler;\n  private readonly _generalLimits: GeneralLimits;\n  private readonly _spanLimits: SpanLimits;\n  private readonly _idGenerator: IdGenerator;\n  readonly resource: IResource;\n  readonly instrumentationLibrary: InstrumentationLibrary;\n\n  /**\n   * Constructs a new Tracer instance.\n   */\n  constructor(\n    instrumentationLibrary: InstrumentationLibrary,\n    config: TracerConfig,\n    private _tracerProvider: BasicTracerProvider\n  ) {\n    const localConfig = mergeConfig(config);\n    this._sampler = localConfig.sampler;\n    this._generalLimits = localConfig.generalLimits;\n    this._spanLimits = localConfig.spanLimits;\n    this._idGenerator = config.idGenerator || new RandomIdGenerator();\n    this.resource = _tracerProvider.resource;\n    this.instrumentationLibrary = instrumentationLibrary;\n  }\n\n  /**\n   * Starts a new Span or returns the default NoopSpan based on the sampling\n   * decision.\n   */\n  startSpan(\n    name: string,\n    options: api.SpanOptions = {},\n    context = api.context.active()\n  ): api.Span {\n    // remove span from context in case a root span is requested via options\n    if (options.root) {\n      context = api.trace.deleteSpan(context);\n    }\n    const parentSpan = api.trace.getSpan(context);\n\n    if (isTracingSuppressed(context)) {\n      api.diag.debug('Instrumentation suppressed, returning Noop Span');\n      const nonRecordingSpan = api.trace.wrapSpanContext(\n        api.INVALID_SPAN_CONTEXT\n      );\n      return nonRecordingSpan;\n    }\n\n    const parentSpanContext = parentSpan?.spanContext();\n    const spanId = this._idGenerator.generateSpanId();\n    let traceId;\n    let traceState;\n    let parentSpanId;\n    if (\n      !parentSpanContext ||\n      !api.trace.isSpanContextValid(parentSpanContext)\n    ) {\n      // New root span.\n      traceId = this._idGenerator.generateTraceId();\n    } else {\n      // New child span.\n      traceId = parentSpanContext.traceId;\n      traceState = parentSpanContext.traceState;\n      parentSpanId = parentSpanContext.spanId;\n    }\n\n    const spanKind = options.kind ?? api.SpanKind.INTERNAL;\n    const links = (options.links ?? []).map(link => {\n      return {\n        context: link.context,\n        attributes: sanitizeAttributes(link.attributes),\n      };\n    });\n    const attributes = sanitizeAttributes(options.attributes);\n    // make sampling decision\n    const samplingResult = this._sampler.shouldSample(\n      context,\n      traceId,\n      name,\n      spanKind,\n      attributes,\n      links\n    );\n\n    traceState = samplingResult.traceState ?? traceState;\n\n    const traceFlags =\n      samplingResult.decision === api.SamplingDecision.RECORD_AND_SAMPLED\n        ? api.TraceFlags.SAMPLED\n        : api.TraceFlags.NONE;\n    const spanContext = { traceId, spanId, traceFlags, traceState };\n    if (samplingResult.decision === api.SamplingDecision.NOT_RECORD) {\n      api.diag.debug(\n        'Recording is off, propagating context in a non-recording span'\n      );\n      const nonRecordingSpan = api.trace.wrapSpanContext(spanContext);\n      return nonRecordingSpan;\n    }\n\n    // Set initial span attributes. The attributes object may have been mutated\n    // by the sampler, so we sanitize the merged attributes before setting them.\n    const initAttributes = sanitizeAttributes(\n      Object.assign(attributes, samplingResult.attributes)\n    );\n\n    const span = new Span(\n      this,\n      context,\n      name,\n      spanContext,\n      spanKind,\n      parentSpanId,\n      links,\n      options.startTime,\n      undefined,\n      initAttributes\n    );\n    return span;\n  }\n\n  /**\n   * Starts a new {@link Span} and calls the given function passing it the\n   * created span as first argument.\n   * Additionally the new span gets set in context and this context is activated\n   * for the duration of the function call.\n   *\n   * @param name The name of the span\n   * @param [options] SpanOptions used for span creation\n   * @param [context] Context to use to extract parent\n   * @param fn function called in the context of the span and receives the newly created span as an argument\n   * @returns return value of fn\n   * @example\n   *   const something = tracer.startActiveSpan('op', span => {\n   *     try {\n   *       do some work\n   *       span.setStatus({code: SpanStatusCode.OK});\n   *       return something;\n   *     } catch (err) {\n   *       span.setStatus({\n   *         code: SpanStatusCode.ERROR,\n   *         message: err.message,\n   *       });\n   *       throw err;\n   *     } finally {\n   *       span.end();\n   *     }\n   *   });\n   * @example\n   *   const span = tracer.startActiveSpan('op', span => {\n   *     try {\n   *       do some work\n   *       return span;\n   *     } catch (err) {\n   *       span.setStatus({\n   *         code: SpanStatusCode.ERROR,\n   *         message: err.message,\n   *       });\n   *       throw err;\n   *     }\n   *   });\n   *   do some more work\n   *   span.end();\n   */\n  startActiveSpan<F extends (span: api.Span) => ReturnType<F>>(\n    name: string,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: api.Span) => ReturnType<F>>(\n    name: string,\n    opts: api.SpanOptions,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: api.Span) => ReturnType<F>>(\n    name: string,\n    opts: api.SpanOptions,\n    ctx: api.Context,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: api.Span) => ReturnType<F>>(\n    name: string,\n    arg2?: F | api.SpanOptions,\n    arg3?: F | api.Context,\n    arg4?: F\n  ): ReturnType<F> | undefined {\n    let opts: api.SpanOptions | undefined;\n    let ctx: api.Context | undefined;\n    let fn: F;\n\n    if (arguments.length < 2) {\n      return;\n    } else if (arguments.length === 2) {\n      fn = arg2 as F;\n    } else if (arguments.length === 3) {\n      opts = arg2 as api.SpanOptions | undefined;\n      fn = arg3 as F;\n    } else {\n      opts = arg2 as api.SpanOptions | undefined;\n      ctx = arg3 as api.Context | undefined;\n      fn = arg4 as F;\n    }\n\n    const parentContext = ctx ?? api.context.active();\n    const span = this.startSpan(name, opts, parentContext);\n    const contextWithSpanSet = api.trace.setSpan(parentContext, span);\n\n    return api.context.with(contextWithSpanSet, fn, undefined, span);\n  }\n\n  /** Returns the active {@link GeneralLimits}. */\n  getGeneralLimits(): GeneralLimits {\n    return this._generalLimits;\n  }\n\n  /** Returns the active {@link SpanLimits}. */\n  getSpanLimits(): SpanLimits {\n    return this._spanLimits;\n  }\n\n  getActiveSpanProcessor(): SpanProcessor {\n    return this._tracerProvider.getActiveSpanProcessor();\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 13380, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13386, "column": 0}, "map": {"version":3,"file":"MultiSpanProcessor.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/sdk-trace-base/src/MultiSpanProcessor.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '@opentelemetry/api';\nimport { globalErrorHandler } from '@opentelemetry/core';\nimport { ReadableSpan } from './export/ReadableSpan';\nimport { Span } from './Span';\nimport { SpanProcessor } from './SpanProcessor';\n\n/**\n * Implementation of the {@link SpanProcessor} that simply forwards all\n * received events to a list of {@link SpanProcessor}s.\n */\nexport class MultiSpanProcessor implements SpanProcessor {\n  constructor(private readonly _spanProcessors: SpanProcessor[]) {}\n\n  forceFlush(): Promise<void> {\n    const promises: Promise<void>[] = [];\n\n    for (const spanProcessor of this._spanProcessors) {\n      promises.push(spanProcessor.forceFlush());\n    }\n    return new Promise(resolve => {\n      Promise.all(promises)\n        .then(() => {\n          resolve();\n        })\n        .catch(error => {\n          globalErrorHandler(\n            error || new Error('MultiSpanProcessor: forceFlush failed')\n          );\n          resolve();\n        });\n    });\n  }\n\n  onStart(span: Span, context: Context): void {\n    for (const spanProcessor of this._spanProcessors) {\n      spanProcessor.onStart(span, context);\n    }\n  }\n\n  onEnd(span: ReadableSpan): void {\n    for (const spanProcessor of this._spanProcessors) {\n      spanProcessor.onEnd(span);\n    }\n  }\n\n  shutdown(): Promise<void> {\n    const promises: Promise<void>[] = [];\n\n    for (const spanProcessor of this._spanProcessors) {\n      promises.push(spanProcessor.shutdown());\n    }\n    return new Promise((resolve, reject) => {\n      Promise.all(promises).then(() => {\n        resolve();\n      }, reject);\n    });\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAGH,OAAO,EAAE,kBAAkB,EAAE,MAAM,qBAAqB,CAAC;;;;;;;;;;;;;;;;AAKzD;;;GAGG,CACH,IAAA,qBAAA;IACE,SAAA,mBAA6B,eAAgC;QAAhC,IAAA,CAAA,eAAe,GAAf,eAAe,CAAiB;IAAG,CAAC;IAEjE,mBAAA,SAAA,CAAA,UAAU,GAAV;;QACE,IAAM,QAAQ,GAAoB,EAAE,CAAC;;YAErC,IAA4B,IAAA,KAAA,SAAA,IAAI,CAAC,eAAe,CAAA,EAAA,KAAA,GAAA,IAAA,EAAA,EAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;gBAA7C,IAAM,aAAa,GAAA,GAAA,KAAA;gBACtB,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,CAAC;aAC3C;;;;;;;;;;;;QACD,OAAO,IAAI,OAAO,CAAC,SAAA,OAAO;YACxB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAClB,IAAI,CAAC;gBACJ,OAAO,EAAE,CAAC;YACZ,CAAC,CAAC,CACD,KAAK,CAAC,SAAA,KAAK;oRACV,qBAAA,AAAkB,EAChB,KAAK,IAAI,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAC5D,CAAC;gBACF,OAAO,EAAE,CAAC;YACZ,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mBAAA,SAAA,CAAA,OAAO,GAAP,SAAQ,IAAU,EAAE,OAAgB;;;YAClC,IAA4B,IAAA,KAAA,SAAA,IAAI,CAAC,eAAe,CAAA,EAAA,KAAA,GAAA,IAAA,EAAA,EAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;gBAA7C,IAAM,aAAa,GAAA,GAAA,KAAA;gBACtB,aAAa,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;aACtC;;;;;;;;;;;;IACH,CAAC;IAED,mBAAA,SAAA,CAAA,KAAK,GAAL,SAAM,IAAkB;;;YACtB,IAA4B,IAAA,KAAA,SAAA,IAAI,CAAC,eAAe,CAAA,EAAA,KAAA,GAAA,IAAA,EAAA,EAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;gBAA7C,IAAM,aAAa,GAAA,GAAA,KAAA;gBACtB,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC3B;;;;;;;;;;;;IACH,CAAC;IAED,mBAAA,SAAA,CAAA,QAAQ,GAAR;;QACE,IAAM,QAAQ,GAAoB,EAAE,CAAC;;YAErC,IAA4B,IAAA,KAAA,SAAA,IAAI,CAAC,eAAe,CAAA,EAAA,KAAA,GAAA,IAAA,EAAA,EAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;gBAA7C,IAAM,aAAa,GAAA,GAAA,KAAA;gBACtB,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC;aACzC;;;;;;;;;;;;QACD,OAAO,IAAI,OAAO,CAAC,SAAC,OAAO,EAAE,MAAM;YACjC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC;gBACzB,OAAO,EAAE,CAAC;YACZ,CAAC,EAAE,MAAM,CAAC,CAAC;QACb,CAAC,CAAC,CAAC;IACL,CAAC;IACH,OAAA,kBAAC;AAAD,CAAC,AA/CD,IA+CC","ignoreList":[0]}},
    {"offset": {"line": 13521, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13527, "column": 0}, "map": {"version":3,"file":"composite.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/core/src/propagation/composite.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  TextMapGetter,\n  TextMapPropagator,\n  diag,\n  TextMapSetter,\n} from '@opentelemetry/api';\n\n/** Configuration object for composite propagator */\nexport interface CompositePropagatorConfig {\n  /**\n   * List of propagators to run. Propagators run in the\n   * list order. If a propagator later in the list writes the same context\n   * key as a propagator earlier in the list, the later on will \"win\".\n   */\n  propagators?: TextMapPropagator[];\n}\n\n/** Combines multiple propagators into a single propagator. */\nexport class CompositePropagator implements TextMapPropagator {\n  private readonly _propagators: TextMapPropagator[];\n  private readonly _fields: string[];\n\n  /**\n   * Construct a composite propagator from a list of propagators.\n   *\n   * @param [config] Configuration object for composite propagator\n   */\n  constructor(config: CompositePropagatorConfig = {}) {\n    this._propagators = config.propagators ?? [];\n\n    this._fields = Array.from(\n      new Set(\n        this._propagators\n          // older propagators may not have fields function, null check to be sure\n          .map(p => (typeof p.fields === 'function' ? p.fields() : []))\n          .reduce((x, y) => x.concat(y), [])\n      )\n    );\n  }\n\n  /**\n   * Run each of the configured propagators with the given context and carrier.\n   * Propagators are run in the order they are configured, so if multiple\n   * propagators write the same carrier key, the propagator later in the list\n   * will \"win\".\n   *\n   * @param context Context to inject\n   * @param carrier Carrier into which context will be injected\n   */\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    for (const propagator of this._propagators) {\n      try {\n        propagator.inject(context, carrier, setter);\n      } catch (err) {\n        diag.warn(\n          `Failed to inject with ${propagator.constructor.name}. Err: ${err.message}`\n        );\n      }\n    }\n  }\n\n  /**\n   * Run each of the configured propagators with the given context and carrier.\n   * Propagators are run in the order they are configured, so if multiple\n   * propagators write the same context key, the propagator later in the list\n   * will \"win\".\n   *\n   * @param context Context to add values to\n   * @param carrier Carrier from which to extract context\n   */\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    return this._propagators.reduce((ctx, propagator) => {\n      try {\n        return propagator.extract(ctx, carrier, getter);\n      } catch (err) {\n        diag.warn(\n          `Failed to extract with ${propagator.constructor.name}. Err: ${err.message}`\n        );\n      }\n      return ctx;\n    }, context);\n  }\n\n  fields(): string[] {\n    // return a new array so our fields cannot be modified\n    return this._fields.slice();\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAEH,OAAO,EAIL,IAAI,GAEL,MAAM,oBAAoB,CAAC;;;;;;;;;;;;;;;;AAY5B,4DAAA,EAA8D,CAC9D,IAAA,sBAAA;IAIE;;;;OAIG,CACH,SAAA,oBAAY,MAAsC;QAAtC,IAAA,WAAA,KAAA,GAAA;YAAA,SAAA,CAAA,CAAsC;QAAA;;QAChD,IAAI,CAAC,YAAY,GAAG,CAAA,KAAA,MAAM,CAAC,WAAW,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC;QAE7C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,IAAI,CACvB,IAAI,GAAG,CACL,IAAI,CAAC,YAAY,AACf,wEAAwE;SACvE,GAAG,CAAC,SAAA,CAAC;YAAI,OAAA,AAAC,OAAO,CAAC,CAAC,MAAM,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAAlD,CAAkD,CAAC,CAC5D,MAAM,CAAC,SAAC,CAAC,EAAE,CAAC;YAAK,OAAA,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QAAX,CAAW,EAAE,EAAE,CAAC,CACrC,CACF,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG,CACH,oBAAA,SAAA,CAAA,MAAM,GAAN,SAAO,OAAgB,EAAE,OAAgB,EAAE,MAAqB;;;YAC9D,IAAyB,IAAA,KAAA,SAAA,IAAI,CAAC,YAAY,CAAA,EAAA,KAAA,GAAA,IAAA,EAAA,EAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;gBAAvC,IAAM,UAAU,GAAA,GAAA,KAAA;gBACnB,IAAI;oBACF,UAAU,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;iBAC7C,CAAC,OAAO,GAAG,EAAE;qMACZ,OAAI,CAAC,IAAI,CACP,2BAAyB,UAAU,CAAC,WAAW,CAAC,IAAI,GAAA,YAAU,GAAG,CAAC,OAAS,CAC5E,CAAC;iBACH;aACF;;;;;;;;;;;;IACH,CAAC;IAED;;;;;;;;OAQG,CACH,oBAAA,SAAA,CAAA,OAAO,GAAP,SAAQ,OAAgB,EAAE,OAAgB,EAAE,MAAqB;QAC/D,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,SAAC,GAAG,EAAE,UAAU;YAC9C,IAAI;gBACF,OAAO,UAAU,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;aACjD,CAAC,OAAO,GAAG,EAAE;iMACZ,OAAI,CAAC,IAAI,CACP,4BAA0B,UAAU,CAAC,WAAW,CAAC,IAAI,GAAA,YAAU,GAAG,CAAC,OAAS,CAC7E,CAAC;aACH;YACD,OAAO,GAAG,CAAC;QACb,CAAC,EAAE,OAAO,CAAC,CAAC;IACd,CAAC;IAED,oBAAA,SAAA,CAAA,MAAM,GAAN;QACE,sDAAsD;QACtD,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;IAC9B,CAAC;IACH,OAAA,mBAAC;AAAD,CAAC,AArED,IAqEC","ignoreList":[0]}},
    {"offset": {"line": 13635, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13641, "column": 0}, "map": {"version":3,"file":"validators.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/core/src/internal/validators.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nconst VALID_KEY = `[a-z]${VALID_KEY_CHAR_RANGE}{0,255}`;\nconst VALID_VENDOR_KEY = `[a-z0-9]${VALID_KEY_CHAR_RANGE}{0,240}@[a-z]${VALID_KEY_CHAR_RANGE}{0,13}`;\nconst VALID_KEY_REGEX = new RegExp(`^(?:${VALID_KEY}|${VALID_VENDOR_KEY})$`);\nconst VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nconst INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nexport function validateKey(key: string): boolean {\n  return VALID_KEY_REGEX.test(key);\n}\n\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nexport function validateValue(value: string): boolean {\n  return (\n    VALID_VALUE_BASE_REGEX.test(value) &&\n    !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value)\n  );\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;;AAEH,IAAM,oBAAoB,GAAG,cAAc,CAAC;AAC5C,IAAM,SAAS,GAAG,UAAQ,oBAAoB,GAAA,SAAS,CAAC;AACxD,IAAM,gBAAgB,GAAG,aAAW,oBAAoB,GAAA,kBAAgB,oBAAoB,GAAA,QAAQ,CAAC;AACrG,IAAM,eAAe,GAAG,IAAI,MAAM,CAAC,SAAO,SAAS,GAAA,MAAI,gBAAgB,GAAA,IAAI,CAAC,CAAC;AAC7E,IAAM,sBAAsB,GAAG,qBAAqB,CAAC;AACrD,IAAM,+BAA+B,GAAG,KAAK,CAAC;AAUxC,SAAU,WAAW,CAAC,GAAW;IACrC,OAAO,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACnC,CAAC;AAMK,SAAU,aAAa,CAAC,KAAa;IACzC,OAAO,AACL,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,IAClC,CAAC,+BAA+B,CAAC,IAAI,CAAC,KAAK,CAAC,CAC7C,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 13671, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13677, "column": 0}, "map": {"version":3,"file":"TraceState.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/core/src/trace/TraceState.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { validateKey, validateValue } from '../internal/validators';\n\nconst MAX_TRACE_STATE_ITEMS = 32;\nconst MAX_TRACE_STATE_LEN = 512;\nconst LIST_MEMBERS_SEPARATOR = ',';\nconst LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nexport class TraceState implements api.TraceState {\n  private _internalState: Map<string, string> = new Map();\n\n  constructor(rawTraceState?: string) {\n    if (rawTraceState) this._parse(rawTraceState);\n  }\n\n  set(key: string, value: string): TraceState {\n    // TODO: Benchmark the different approaches(map vs list) and\n    // use the faster one.\n    const traceState = this._clone();\n    if (traceState._internalState.has(key)) {\n      traceState._internalState.delete(key);\n    }\n    traceState._internalState.set(key, value);\n    return traceState;\n  }\n\n  unset(key: string): TraceState {\n    const traceState = this._clone();\n    traceState._internalState.delete(key);\n    return traceState;\n  }\n\n  get(key: string): string | undefined {\n    return this._internalState.get(key);\n  }\n\n  serialize(): string {\n    return this._keys()\n      .reduce((agg: string[], key) => {\n        agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + this.get(key));\n        return agg;\n      }, [])\n      .join(LIST_MEMBERS_SEPARATOR);\n  }\n\n  private _parse(rawTraceState: string) {\n    if (rawTraceState.length > MAX_TRACE_STATE_LEN) return;\n    this._internalState = rawTraceState\n      .split(LIST_MEMBERS_SEPARATOR)\n      .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n      .reduce((agg: Map<string, string>, part: string) => {\n        const listMember = part.trim(); // Optional Whitespace (OWS) handling\n        const i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n        if (i !== -1) {\n          const key = listMember.slice(0, i);\n          const value = listMember.slice(i + 1, part.length);\n          if (validateKey(key) && validateValue(value)) {\n            agg.set(key, value);\n          } else {\n            // TODO: Consider to add warning log\n          }\n        }\n        return agg;\n      }, new Map());\n\n    // Because of the reverse() requirement, trunc must be done after map is created\n    if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n      this._internalState = new Map(\n        Array.from(this._internalState.entries())\n          .reverse() // Use reverse same as original tracestate parse chain\n          .slice(0, MAX_TRACE_STATE_ITEMS)\n      );\n    }\n  }\n\n  private _keys(): string[] {\n    return Array.from(this._internalState.keys()).reverse();\n  }\n\n  private _clone(): TraceState {\n    const traceState = new TraceState();\n    traceState._internalState = new Map(this._internalState);\n    return traceState;\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 13773, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13779, "column": 0}, "map": {"version":3,"file":"W3CTraceContextPropagator.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/core/src/trace/W3CTraceContextPropagator.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  isSpanContextValid,\n  SpanContext,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n  trace,\n  TraceFlags,\n} from '@opentelemetry/api';\nimport { isTracingSuppressed } from './suppress-tracing';\nimport { TraceState } from './TraceState';\n\nexport const TRACE_PARENT_HEADER = 'traceparent';\nexport const TRACE_STATE_HEADER = 'tracestate';\n\nconst VERSION = '00';\nconst VERSION_PART = '(?!ff)[\\\\da-f]{2}';\nconst TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\nconst PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\nconst FLAGS_PART = '[\\\\da-f]{2}';\nconst TRACE_PARENT_REGEX = new RegExp(\n  `^\\\\s?(${VERSION_PART})-(${TRACE_ID_PART})-(${PARENT_ID_PART})-(${FLAGS_PART})(-.*)?\\\\s?$`\n);\n\n/**\n * Parses information from the [traceparent] span tag and converts it into {@link SpanContext}\n * @param traceParent - A meta property that comes from server.\n *     It should be dynamically generated server side to have the server's request trace Id,\n *     a parent span Id that was set on the server's request span,\n *     and the trace flags to indicate the server's sampling decision\n *     (01 = sampled, 00 = not sampled).\n *     for example: '{version}-{traceId}-{spanId}-{sampleDecision}'\n *     For more information see {@link https://www.w3.org/TR/trace-context/}\n */\nexport function parseTraceParent(traceParent: string): SpanContext | null {\n  const match = TRACE_PARENT_REGEX.exec(traceParent);\n  if (!match) return null;\n\n  // According to the specification the implementation should be compatible\n  // with future versions. If there are more parts, we only reject it if it's using version 00\n  // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n  if (match[1] === '00' && match[5]) return null;\n\n  return {\n    traceId: match[2],\n    spanId: match[3],\n    traceFlags: parseInt(match[4], 16),\n  };\n}\n\n/**\n * Propagates {@link SpanContext} through Trace Context format propagation.\n *\n * Based on the Trace Context specification:\n * https://www.w3.org/TR/trace-context/\n */\nexport class W3CTraceContextPropagator implements TextMapPropagator {\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    const spanContext = trace.getSpanContext(context);\n    if (\n      !spanContext ||\n      isTracingSuppressed(context) ||\n      !isSpanContextValid(spanContext)\n    )\n      return;\n\n    const traceParent = `${VERSION}-${spanContext.traceId}-${\n      spanContext.spanId\n    }-0${Number(spanContext.traceFlags || TraceFlags.NONE).toString(16)}`;\n\n    setter.set(carrier, TRACE_PARENT_HEADER, traceParent);\n    if (spanContext.traceState) {\n      setter.set(\n        carrier,\n        TRACE_STATE_HEADER,\n        spanContext.traceState.serialize()\n      );\n    }\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const traceParentHeader = getter.get(carrier, TRACE_PARENT_HEADER);\n    if (!traceParentHeader) return context;\n    const traceParent = Array.isArray(traceParentHeader)\n      ? traceParentHeader[0]\n      : traceParentHeader;\n    if (typeof traceParent !== 'string') return context;\n    const spanContext = parseTraceParent(traceParent);\n    if (!spanContext) return context;\n\n    spanContext.isRemote = true;\n\n    const traceStateHeader = getter.get(carrier, TRACE_STATE_HEADER);\n    if (traceStateHeader) {\n      // If more than one `tracestate` header is found, we merge them into a\n      // single header.\n      const state = Array.isArray(traceStateHeader)\n        ? traceStateHeader.join(',')\n        : traceStateHeader;\n      spanContext.traceState = new TraceState(\n        typeof state === 'string' ? state : undefined\n      );\n    }\n    return trace.setSpanContext(context, spanContext);\n  }\n\n  fields(): string[] {\n    return [TRACE_PARENT_HEADER, TRACE_STATE_HEADER];\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 13869, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13875, "column": 0}, "map": {"version":3,"file":"constants.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/core/src/baggage/constants.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const BAGGAGE_KEY_PAIR_SEPARATOR = '=';\nexport const BAGGAGE_PROPERTIES_SEPARATOR = ';';\nexport const BAGGAGE_ITEMS_SEPARATOR = ',';\n\n// Name of the http header used to propagate the baggage\nexport const BAGGAGE_HEADER = 'baggage';\n// Maximum number of name-value pairs allowed by w3c spec\nexport const BAGGAGE_MAX_NAME_VALUE_PAIRS = 180;\n// Maximum number of bytes per a single name-value pair allowed by w3c spec\nexport const BAGGAGE_MAX_PER_NAME_VALUE_PAIRS = 4096;\n// Maximum total length of all name-value pairs allowed by w3c spec\nexport const BAGGAGE_MAX_TOTAL_LENGTH = 8192;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;AAEI,IAAM,0BAA0B,GAAG,GAAG,CAAC;AACvC,IAAM,4BAA4B,GAAG,GAAG,CAAC;AACzC,IAAM,uBAAuB,GAAG,GAAG,CAAC;AAGpC,IAAM,cAAc,GAAG,SAAS,CAAC;AAEjC,IAAM,4BAA4B,GAAG,GAAG,CAAC;AAEzC,IAAM,gCAAgC,GAAG,IAAI,CAAC;AAE9C,IAAM,wBAAwB,GAAG,IAAI,CAAC","ignoreList":[0]}},
    {"offset": {"line": 13905, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13911, "column": 0}, "map": {"version":3,"file":"utils.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/core/src/baggage/utils.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  Baggage,\n  BaggageEntryMetadata,\n  baggageEntryMetadataFromString,\n} from '@opentelemetry/api';\nimport {\n  BAGGAGE_ITEMS_SEPARATOR,\n  BAGGAGE_PROPERTIES_SEPARATOR,\n  BAGGAGE_KEY_PAIR_SEPARATOR,\n  BAGGAGE_MAX_TOTAL_LENGTH,\n} from './constants';\n\ntype ParsedBaggageKeyValue = {\n  key: string;\n  value: string;\n  metadata: BaggageEntryMetadata | undefined;\n};\n\nexport function serializeKeyPairs(keyPairs: string[]): string {\n  return keyPairs.reduce((hValue: string, current: string) => {\n    const value = `${hValue}${\n      hValue !== '' ? BAGGAGE_ITEMS_SEPARATOR : ''\n    }${current}`;\n    return value.length > BAGGAGE_MAX_TOTAL_LENGTH ? hValue : value;\n  }, '');\n}\n\nexport function getKeyPairs(baggage: Baggage): string[] {\n  return baggage.getAllEntries().map(([key, value]) => {\n    let entry = `${encodeURIComponent(key)}=${encodeURIComponent(value.value)}`;\n\n    // include opaque metadata if provided\n    // NOTE: we intentionally don't URI-encode the metadata - that responsibility falls on the metadata implementation\n    if (value.metadata !== undefined) {\n      entry += BAGGAGE_PROPERTIES_SEPARATOR + value.metadata.toString();\n    }\n\n    return entry;\n  });\n}\n\nexport function parsePairKeyValue(\n  entry: string\n): ParsedBaggageKeyValue | undefined {\n  const valueProps = entry.split(BAGGAGE_PROPERTIES_SEPARATOR);\n  if (valueProps.length <= 0) return;\n  const keyPairPart = valueProps.shift();\n  if (!keyPairPart) return;\n  const separatorIndex = keyPairPart.indexOf(BAGGAGE_KEY_PAIR_SEPARATOR);\n  if (separatorIndex <= 0) return;\n  const key = decodeURIComponent(\n    keyPairPart.substring(0, separatorIndex).trim()\n  );\n  const value = decodeURIComponent(\n    keyPairPart.substring(separatorIndex + 1).trim()\n  );\n  let metadata;\n  if (valueProps.length > 0) {\n    metadata = baggageEntryMetadataFromString(\n      valueProps.join(BAGGAGE_PROPERTIES_SEPARATOR)\n    );\n  }\n  return { key, value, metadata };\n}\n\n/**\n * Parse a string serialized in the baggage HTTP Format (without metadata):\n * https://github.com/w3c/baggage/blob/master/baggage/HTTP_HEADER_FORMAT.md\n */\nexport function parseKeyPairsIntoRecord(\n  value?: string\n): Record<string, string> {\n  if (typeof value !== 'string' || value.length === 0) return {};\n  return value\n    .split(BAGGAGE_ITEMS_SEPARATOR)\n    .map(entry => {\n      return parsePairKeyValue(entry);\n    })\n    .filter(keyPair => keyPair !== undefined && keyPair.value.length > 0)\n    .reduce<Record<string, string>>((headers, keyPair) => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      headers[keyPair!.key] = keyPair!.value;\n      return headers;\n    }, {});\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 14003, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14009, "column": 0}, "map": {"version":3,"file":"W3CBaggagePropagator.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/core/src/baggage/propagation/W3CBaggagePropagator.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BaggageEntry,\n  Context,\n  propagation,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n} from '@opentelemetry/api';\n\nimport { isTracingSuppressed } from '../../trace/suppress-tracing';\nimport {\n  BAGGAGE_HEADER,\n  BAGGAGE_ITEMS_SEPARATOR,\n  BAGGAGE_MAX_NAME_VALUE_PAIRS,\n  BAGGAGE_MAX_PER_NAME_VALUE_PAIRS,\n} from '../constants';\nimport { getKeyPairs, parsePairKeyValue, serializeKeyPairs } from '../utils';\n\n/**\n * Propagates {@link Baggage} through Context format propagation.\n *\n * Based on the Baggage specification:\n * https://w3c.github.io/baggage/\n */\nexport class W3CBaggagePropagator implements TextMapPropagator {\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    const baggage = propagation.getBaggage(context);\n    if (!baggage || isTracingSuppressed(context)) return;\n    const keyPairs = getKeyPairs(baggage)\n      .filter((pair: string) => {\n        return pair.length <= BAGGAGE_MAX_PER_NAME_VALUE_PAIRS;\n      })\n      .slice(0, BAGGAGE_MAX_NAME_VALUE_PAIRS);\n    const headerValue = serializeKeyPairs(keyPairs);\n    if (headerValue.length > 0) {\n      setter.set(carrier, BAGGAGE_HEADER, headerValue);\n    }\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const headerValue = getter.get(carrier, BAGGAGE_HEADER);\n    const baggageString = Array.isArray(headerValue)\n      ? headerValue.join(BAGGAGE_ITEMS_SEPARATOR)\n      : headerValue;\n    if (!baggageString) return context;\n    const baggage: Record<string, BaggageEntry> = {};\n    if (baggageString.length === 0) {\n      return context;\n    }\n    const pairs = baggageString.split(BAGGAGE_ITEMS_SEPARATOR);\n    pairs.forEach(entry => {\n      const keyPair = parsePairKeyValue(entry);\n      if (keyPair) {\n        const baggageEntry: BaggageEntry = { value: keyPair.value };\n        if (keyPair.metadata) {\n          baggageEntry.metadata = keyPair.metadata;\n        }\n        baggage[keyPair.key] = baggageEntry;\n      }\n    });\n    if (Object.entries(baggage).length === 0) {\n      return context;\n    }\n    return propagation.setBaggage(context, propagation.createBaggage(baggage));\n  }\n\n  fields(): string[] {\n    return [BAGGAGE_HEADER];\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAEH,OAAO,EAGL,WAAW,GAIZ,MAAM,oBAAoB,CAAC;AAE5B,OAAO,EAAE,mBAAmB,EAAE,MAAM,8BAA8B,CAAC;AAOnE,OAAO,EAAE,WAAW,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,MAAM,UAAU,CAAC;AAN7E,OAAO,EACL,cAAc,EACd,uBAAuB,EACvB,4BAA4B,EAC5B,gCAAgC,GACjC,MAAM,cAAc,CAAC;;;;;AAGtB;;;;;GAKG,CACH,IAAA,uBAAA;IAAA,SAAA,wBA6CA,CAAC;IA5CC,qBAAA,SAAA,CAAA,MAAM,GAAN,SAAO,OAAgB,EAAE,OAAgB,EAAE,MAAqB;QAC9D,IAAM,OAAO,oLAAG,cAAW,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,OAAO,gQAAI,sBAAA,AAAmB,EAAC,OAAO,CAAC,EAAE,OAAO;QACrD,IAAM,QAAQ,GAAG,8PAAA,AAAW,EAAC,OAAO,CAAC,CAClC,MAAM,CAAC,SAAC,IAAY;YACnB,OAAO,IAAI,CAAC,MAAM,mPAAI,oCAAgC,CAAC;QACzD,CAAC,CAAC,CACD,KAAK,CAAC,CAAC,kPAAE,+BAA4B,CAAC,CAAC;QAC1C,IAAM,WAAW,GAAG,oQAAA,AAAiB,EAAC,QAAQ,CAAC,CAAC;QAChD,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;YAC1B,MAAM,CAAC,GAAG,CAAC,OAAO,kPAAE,iBAAc,EAAE,WAAW,CAAC,CAAC;SAClD;IACH,CAAC;IAED,qBAAA,SAAA,CAAA,OAAO,GAAP,SAAQ,OAAgB,EAAE,OAAgB,EAAE,MAAqB;QAC/D,IAAM,WAAW,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,kPAAE,iBAAc,CAAC,CAAC;QACxD,IAAM,aAAa,GAAG,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,GAC5C,WAAW,CAAC,IAAI,iPAAC,0BAAuB,CAAC,GACzC,WAAW,CAAC;QAChB,IAAI,CAAC,aAAa,EAAE,OAAO,OAAO,CAAC;QACnC,IAAM,OAAO,GAAiC,CAAA,CAAE,CAAC;QACjD,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YAC9B,OAAO,OAAO,CAAC;SAChB;QACD,IAAM,KAAK,GAAG,aAAa,CAAC,KAAK,iPAAC,0BAAuB,CAAC,CAAC;QAC3D,KAAK,CAAC,OAAO,CAAC,SAAA,KAAK;YACjB,IAAM,OAAO,mPAAG,oBAAA,AAAiB,EAAC,KAAK,CAAC,CAAC;YACzC,IAAI,OAAO,EAAE;gBACX,IAAM,YAAY,GAAiB;oBAAE,KAAK,EAAE,OAAO,CAAC,KAAK;gBAAA,CAAE,CAAC;gBAC5D,IAAI,OAAO,CAAC,QAAQ,EAAE;oBACpB,YAAY,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;iBAC1C;gBACD,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC;aACrC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YACxC,OAAO,OAAO,CAAC;SAChB;QACD,wLAAO,cAAW,CAAC,UAAU,CAAC,OAAO,mLAAE,cAAW,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED,qBAAA,SAAA,CAAA,MAAM,GAAN;QACE,OAAO;4PAAC,iBAAc;SAAC,CAAC;IAC1B,CAAC;IACH,OAAA,oBAAC;AAAD,CAAC,AA7CD,IA6CC","ignoreList":[0]}},
    {"offset": {"line": 14087, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14093, "column": 0}, "map": {"version":3,"file":"lodash.merge.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/core/src/utils/lodash.merge.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * based on lodash in order to support esm builds without esModuleInterop.\n * lodash is using MIT License.\n **/\n\nconst objectTag = '[object Object]';\nconst nullTag = '[object Null]';\nconst undefinedTag = '[object Undefined]';\nconst funcProto = Function.prototype;\nconst funcToString = funcProto.toString;\nconst objectCtorString = funcToString.call(Object);\nconst getPrototype = overArg(Object.getPrototypeOf, Object);\nconst objectProto = Object.prototype;\nconst hasOwnProperty = objectProto.hasOwnProperty;\nconst symToStringTag = Symbol ? Symbol.toStringTag : undefined;\nconst nativeObjectToString = objectProto.toString;\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func: Function, transform: any): any {\n  return function (arg: any) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nexport function isPlainObject(value: any) {\n  if (!isObjectLike(value) || baseGetTag(value) !== objectTag) {\n    return false;\n  }\n  const proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  const Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (\n    typeof Ctor == 'function' &&\n    Ctor instanceof Ctor &&\n    funcToString.call(Ctor) === objectCtorString\n  );\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value: any) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value: any) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return symToStringTag && symToStringTag in Object(value)\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value: any) {\n  const isOwn = hasOwnProperty.call(value, symToStringTag as any),\n    tag = value[symToStringTag as any];\n  let unmasked = false;\n\n  try {\n    value[symToStringTag as any] = undefined;\n    unmasked = true;\n  } catch (e) {\n    // silence\n  }\n\n  const result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag as any] = tag;\n    } else {\n      delete value[symToStringTag as any];\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value: any) {\n  return nativeObjectToString.call(value);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 14219, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14225, "column": 0}, "map": {"version":3,"file":"merge.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/core/src/utils/merge.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { isPlainObject } from './lodash.merge';\n\nconst MAX_LEVEL = 20;\n\ninterface ObjectInto {\n  obj: any;\n  key: string;\n}\n\n/**\n * Merges objects together\n * @param args - objects / values to be merged\n */\nexport function merge(...args: any[]): any {\n  let result: any = args.shift();\n  const objects: WeakMap<any, ObjectInto[]> | undefined = new WeakMap<\n    any,\n    ObjectInto[]\n  >();\n  while (args.length > 0) {\n    result = mergeTwoObjects(result, args.shift(), 0, objects);\n  }\n\n  return result;\n}\n\nfunction takeValue(value: any): any {\n  if (isArray(value)) {\n    return value.slice();\n  }\n  return value;\n}\n\n/**\n * Merges two objects\n * @param one - first object\n * @param two - second object\n * @param level - current deep level\n * @param objects - objects holder that has been already referenced - to prevent\n * cyclic dependency\n */\nfunction mergeTwoObjects(\n  one: any,\n  two: any,\n  level = 0,\n  objects: WeakMap<any, ObjectInto[]>\n): any {\n  let result: any;\n  if (level > MAX_LEVEL) {\n    return undefined;\n  }\n  level++;\n  if (isPrimitive(one) || isPrimitive(two) || isFunction(two)) {\n    result = takeValue(two);\n  } else if (isArray(one)) {\n    result = one.slice();\n    if (isArray(two)) {\n      for (let i = 0, j = two.length; i < j; i++) {\n        result.push(takeValue(two[i]));\n      }\n    } else if (isObject(two)) {\n      const keys = Object.keys(two);\n      for (let i = 0, j = keys.length; i < j; i++) {\n        const key = keys[i];\n        result[key] = takeValue(two[key]);\n      }\n    }\n  } else if (isObject(one)) {\n    if (isObject(two)) {\n      if (!shouldMerge(one, two)) {\n        return two;\n      }\n      result = Object.assign({}, one);\n      const keys = Object.keys(two);\n\n      for (let i = 0, j = keys.length; i < j; i++) {\n        const key = keys[i];\n        const twoValue = two[key];\n\n        if (isPrimitive(twoValue)) {\n          if (typeof twoValue === 'undefined') {\n            delete result[key];\n          } else {\n            // result[key] = takeValue(twoValue);\n            result[key] = twoValue;\n          }\n        } else {\n          const obj1 = result[key];\n          const obj2 = twoValue;\n\n          if (\n            wasObjectReferenced(one, key, objects) ||\n            wasObjectReferenced(two, key, objects)\n          ) {\n            delete result[key];\n          } else {\n            if (isObject(obj1) && isObject(obj2)) {\n              const arr1 = objects.get(obj1) || [];\n              const arr2 = objects.get(obj2) || [];\n              arr1.push({ obj: one, key });\n              arr2.push({ obj: two, key });\n              objects.set(obj1, arr1);\n              objects.set(obj2, arr2);\n            }\n\n            result[key] = mergeTwoObjects(\n              result[key],\n              twoValue,\n              level,\n              objects\n            );\n          }\n        }\n      }\n    } else {\n      result = two;\n    }\n  }\n\n  return result;\n}\n\n/**\n * Function to check if object has been already reference\n * @param obj\n * @param key\n * @param objects\n */\nfunction wasObjectReferenced(\n  obj: any,\n  key: string,\n  objects: WeakMap<any, ObjectInto[]>\n): boolean {\n  const arr = objects.get(obj[key]) || [];\n  for (let i = 0, j = arr.length; i < j; i++) {\n    const info = arr[i];\n    if (info.key === key && info.obj === obj) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isArray(value: any): boolean {\n  return Array.isArray(value);\n}\n\nfunction isFunction(value: any): boolean {\n  return typeof value === 'function';\n}\n\nfunction isObject(value: any): boolean {\n  return (\n    !isPrimitive(value) &&\n    !isArray(value) &&\n    !isFunction(value) &&\n    typeof value === 'object'\n  );\n}\n\nfunction isPrimitive(value: any): boolean {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean' ||\n    typeof value === 'undefined' ||\n    value instanceof Date ||\n    value instanceof RegExp ||\n    value === null\n  );\n}\n\nfunction shouldMerge(one: any, two: any): boolean {\n  if (!isPlainObject(one) || !isPlainObject(two)) {\n    return false;\n  }\n\n  return true;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 14374, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14380, "column": 0}, "map": {"version":3,"file":"SemanticResourceAttributes.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/semantic-conventions/src/resource/SemanticResourceAttributes.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createConstMap } from '../internal/utils';\n\n//----------------------------------------------------------------------------------------------------------\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\n//----------------------------------------------------------------------------------------------------------\n\n//----------------------------------------------------------------------------------------------------------\n// Constant values for SemanticResourceAttributes\n//----------------------------------------------------------------------------------------------------------\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_CLOUD_PROVIDER = 'cloud.provider';\nconst TMP_CLOUD_ACCOUNT_ID = 'cloud.account.id';\nconst TMP_CLOUD_REGION = 'cloud.region';\nconst TMP_CLOUD_AVAILABILITY_ZONE = 'cloud.availability_zone';\nconst TMP_CLOUD_PLATFORM = 'cloud.platform';\nconst TMP_AWS_ECS_CONTAINER_ARN = 'aws.ecs.container.arn';\nconst TMP_AWS_ECS_CLUSTER_ARN = 'aws.ecs.cluster.arn';\nconst TMP_AWS_ECS_LAUNCHTYPE = 'aws.ecs.launchtype';\nconst TMP_AWS_ECS_TASK_ARN = 'aws.ecs.task.arn';\nconst TMP_AWS_ECS_TASK_FAMILY = 'aws.ecs.task.family';\nconst TMP_AWS_ECS_TASK_REVISION = 'aws.ecs.task.revision';\nconst TMP_AWS_EKS_CLUSTER_ARN = 'aws.eks.cluster.arn';\nconst TMP_AWS_LOG_GROUP_NAMES = 'aws.log.group.names';\nconst TMP_AWS_LOG_GROUP_ARNS = 'aws.log.group.arns';\nconst TMP_AWS_LOG_STREAM_NAMES = 'aws.log.stream.names';\nconst TMP_AWS_LOG_STREAM_ARNS = 'aws.log.stream.arns';\nconst TMP_CONTAINER_NAME = 'container.name';\nconst TMP_CONTAINER_ID = 'container.id';\nconst TMP_CONTAINER_RUNTIME = 'container.runtime';\nconst TMP_CONTAINER_IMAGE_NAME = 'container.image.name';\nconst TMP_CONTAINER_IMAGE_TAG = 'container.image.tag';\nconst TMP_DEPLOYMENT_ENVIRONMENT = 'deployment.environment';\nconst TMP_DEVICE_ID = 'device.id';\nconst TMP_DEVICE_MODEL_IDENTIFIER = 'device.model.identifier';\nconst TMP_DEVICE_MODEL_NAME = 'device.model.name';\nconst TMP_FAAS_NAME = 'faas.name';\nconst TMP_FAAS_ID = 'faas.id';\nconst TMP_FAAS_VERSION = 'faas.version';\nconst TMP_FAAS_INSTANCE = 'faas.instance';\nconst TMP_FAAS_MAX_MEMORY = 'faas.max_memory';\nconst TMP_HOST_ID = 'host.id';\nconst TMP_HOST_NAME = 'host.name';\nconst TMP_HOST_TYPE = 'host.type';\nconst TMP_HOST_ARCH = 'host.arch';\nconst TMP_HOST_IMAGE_NAME = 'host.image.name';\nconst TMP_HOST_IMAGE_ID = 'host.image.id';\nconst TMP_HOST_IMAGE_VERSION = 'host.image.version';\nconst TMP_K8S_CLUSTER_NAME = 'k8s.cluster.name';\nconst TMP_K8S_NODE_NAME = 'k8s.node.name';\nconst TMP_K8S_NODE_UID = 'k8s.node.uid';\nconst TMP_K8S_NAMESPACE_NAME = 'k8s.namespace.name';\nconst TMP_K8S_POD_UID = 'k8s.pod.uid';\nconst TMP_K8S_POD_NAME = 'k8s.pod.name';\nconst TMP_K8S_CONTAINER_NAME = 'k8s.container.name';\nconst TMP_K8S_REPLICASET_UID = 'k8s.replicaset.uid';\nconst TMP_K8S_REPLICASET_NAME = 'k8s.replicaset.name';\nconst TMP_K8S_DEPLOYMENT_UID = 'k8s.deployment.uid';\nconst TMP_K8S_DEPLOYMENT_NAME = 'k8s.deployment.name';\nconst TMP_K8S_STATEFULSET_UID = 'k8s.statefulset.uid';\nconst TMP_K8S_STATEFULSET_NAME = 'k8s.statefulset.name';\nconst TMP_K8S_DAEMONSET_UID = 'k8s.daemonset.uid';\nconst TMP_K8S_DAEMONSET_NAME = 'k8s.daemonset.name';\nconst TMP_K8S_JOB_UID = 'k8s.job.uid';\nconst TMP_K8S_JOB_NAME = 'k8s.job.name';\nconst TMP_K8S_CRONJOB_UID = 'k8s.cronjob.uid';\nconst TMP_K8S_CRONJOB_NAME = 'k8s.cronjob.name';\nconst TMP_OS_TYPE = 'os.type';\nconst TMP_OS_DESCRIPTION = 'os.description';\nconst TMP_OS_NAME = 'os.name';\nconst TMP_OS_VERSION = 'os.version';\nconst TMP_PROCESS_PID = 'process.pid';\nconst TMP_PROCESS_EXECUTABLE_NAME = 'process.executable.name';\nconst TMP_PROCESS_EXECUTABLE_PATH = 'process.executable.path';\nconst TMP_PROCESS_COMMAND = 'process.command';\nconst TMP_PROCESS_COMMAND_LINE = 'process.command_line';\nconst TMP_PROCESS_COMMAND_ARGS = 'process.command_args';\nconst TMP_PROCESS_OWNER = 'process.owner';\nconst TMP_PROCESS_RUNTIME_NAME = 'process.runtime.name';\nconst TMP_PROCESS_RUNTIME_VERSION = 'process.runtime.version';\nconst TMP_PROCESS_RUNTIME_DESCRIPTION = 'process.runtime.description';\nconst TMP_SERVICE_NAME = 'service.name';\nconst TMP_SERVICE_NAMESPACE = 'service.namespace';\nconst TMP_SERVICE_INSTANCE_ID = 'service.instance.id';\nconst TMP_SERVICE_VERSION = 'service.version';\nconst TMP_TELEMETRY_SDK_NAME = 'telemetry.sdk.name';\nconst TMP_TELEMETRY_SDK_LANGUAGE = 'telemetry.sdk.language';\nconst TMP_TELEMETRY_SDK_VERSION = 'telemetry.sdk.version';\nconst TMP_TELEMETRY_AUTO_VERSION = 'telemetry.auto.version';\nconst TMP_WEBENGINE_NAME = 'webengine.name';\nconst TMP_WEBENGINE_VERSION = 'webengine.version';\nconst TMP_WEBENGINE_DESCRIPTION = 'webengine.description';\n\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use ATTR_CLOUD_PROVIDER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CLOUD_PROVIDER = TMP_CLOUD_PROVIDER;\n\n/**\n * The cloud account ID the resource is assigned to.\n *\n * @deprecated Use ATTR_CLOUD_ACCOUNT_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CLOUD_ACCOUNT_ID = TMP_CLOUD_ACCOUNT_ID;\n\n/**\n * The geographical region the resource is running. Refer to your provider&#39;s docs to see the available regions, for example [Alibaba Cloud regions](https://www.alibabacloud.com/help/doc-detail/40654.htm), [AWS regions](https://aws.amazon.com/about-aws/global-infrastructure/regions_az/), [Azure regions](https://azure.microsoft.com/en-us/global-infrastructure/geographies/), or [Google Cloud regions](https://cloud.google.com/about/locations).\n *\n * @deprecated Use ATTR_CLOUD_REGION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CLOUD_REGION = TMP_CLOUD_REGION;\n\n/**\n * Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.\n *\n * Note: Availability zones are called &#34;zones&#34; on Alibaba Cloud and Google Cloud.\n *\n * @deprecated Use ATTR_CLOUD_AVAILABILITY_ZONE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CLOUD_AVAILABILITY_ZONE = TMP_CLOUD_AVAILABILITY_ZONE;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use ATTR_CLOUD_PLATFORM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CLOUD_PLATFORM = TMP_CLOUD_PLATFORM;\n\n/**\n * The Amazon Resource Name (ARN) of an [ECS container instance](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_instances.html).\n *\n * @deprecated Use ATTR_AWS_ECS_CONTAINER_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_ECS_CONTAINER_ARN = TMP_AWS_ECS_CONTAINER_ARN;\n\n/**\n * The ARN of an [ECS cluster](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/clusters.html).\n *\n * @deprecated Use ATTR_AWS_ECS_CLUSTER_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_ECS_CLUSTER_ARN = TMP_AWS_ECS_CLUSTER_ARN;\n\n/**\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n *\n * @deprecated Use ATTR_AWS_ECS_LAUNCHTYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_ECS_LAUNCHTYPE = TMP_AWS_ECS_LAUNCHTYPE;\n\n/**\n * The ARN of an [ECS task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html).\n *\n * @deprecated Use ATTR_AWS_ECS_TASK_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_ECS_TASK_ARN = TMP_AWS_ECS_TASK_ARN;\n\n/**\n * The task definition family this task definition is a member of.\n *\n * @deprecated Use ATTR_AWS_ECS_TASK_FAMILY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_ECS_TASK_FAMILY = TMP_AWS_ECS_TASK_FAMILY;\n\n/**\n * The revision for this task definition.\n *\n * @deprecated Use ATTR_AWS_ECS_TASK_REVISION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_ECS_TASK_REVISION = TMP_AWS_ECS_TASK_REVISION;\n\n/**\n * The ARN of an EKS cluster.\n *\n * @deprecated Use ATTR_AWS_EKS_CLUSTER_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_EKS_CLUSTER_ARN = TMP_AWS_EKS_CLUSTER_ARN;\n\n/**\n * The name(s) of the AWS log group(s) an application is writing to.\n *\n * Note: Multiple log groups must be supported for cases like multi-container applications, where a single application has sidecar containers, and each write to their own log group.\n *\n * @deprecated Use ATTR_AWS_LOG_GROUP_NAMES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_LOG_GROUP_NAMES = TMP_AWS_LOG_GROUP_NAMES;\n\n/**\n * The Amazon Resource Name(s) (ARN) of the AWS log group(s).\n *\n * Note: See the [log group ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format).\n *\n * @deprecated Use ATTR_AWS_LOG_GROUP_ARNS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_LOG_GROUP_ARNS = TMP_AWS_LOG_GROUP_ARNS;\n\n/**\n * The name(s) of the AWS log stream(s) an application is writing to.\n *\n * @deprecated Use ATTR_AWS_LOG_STREAM_NAMES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_LOG_STREAM_NAMES = TMP_AWS_LOG_STREAM_NAMES;\n\n/**\n * The ARN(s) of the AWS log stream(s).\n *\n * Note: See the [log stream ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format). One log group can contain several log streams, so these ARNs necessarily identify both a log group and a log stream.\n *\n * @deprecated Use ATTR_AWS_LOG_STREAM_ARNS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_LOG_STREAM_ARNS = TMP_AWS_LOG_STREAM_ARNS;\n\n/**\n * Container name.\n *\n * @deprecated Use ATTR_CONTAINER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CONTAINER_NAME = TMP_CONTAINER_NAME;\n\n/**\n * Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/reference/run/#container-identification). The UUID might be abbreviated.\n *\n * @deprecated Use ATTR_CONTAINER_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CONTAINER_ID = TMP_CONTAINER_ID;\n\n/**\n * The container runtime managing this container.\n *\n * @deprecated Use ATTR_CONTAINER_RUNTIME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CONTAINER_RUNTIME = TMP_CONTAINER_RUNTIME;\n\n/**\n * Name of the image the container was built on.\n *\n * @deprecated Use ATTR_CONTAINER_IMAGE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CONTAINER_IMAGE_NAME = TMP_CONTAINER_IMAGE_NAME;\n\n/**\n * Container image tag.\n *\n * @deprecated Use ATTR_CONTAINER_IMAGE_TAGS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CONTAINER_IMAGE_TAG = TMP_CONTAINER_IMAGE_TAG;\n\n/**\n * Name of the [deployment environment](https://en.wikipedia.org/wiki/Deployment_environment) (aka deployment tier).\n *\n * @deprecated Use ATTR_DEPLOYMENT_ENVIRONMENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_DEPLOYMENT_ENVIRONMENT = TMP_DEPLOYMENT_ENVIRONMENT;\n\n/**\n * A unique identifier representing the device.\n *\n * Note: The device identifier MUST only be defined using the values outlined below. This value is not an advertising identifier and MUST NOT be used as such. On iOS (Swift or Objective-C), this value MUST be equal to the [vendor identifier](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor). On Android (Java or Kotlin), this value MUST be equal to the Firebase Installation ID or a globally unique UUID which is persisted across sessions in your application. More information can be found [here](https://developer.android.com/training/articles/user-data-ids) on best practices and exact implementation details. Caution should be taken when storing personal data or anything which can identify a user. GDPR and data protection laws may apply, ensure you do your own due diligence.\n *\n * @deprecated Use ATTR_DEVICE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_DEVICE_ID = TMP_DEVICE_ID;\n\n/**\n * The model identifier for the device.\n *\n * Note: It&#39;s recommended this value represents a machine readable version of the model identifier rather than the market or consumer-friendly name of the device.\n *\n * @deprecated Use ATTR_DEVICE_MODEL_IDENTIFIER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_DEVICE_MODEL_IDENTIFIER = TMP_DEVICE_MODEL_IDENTIFIER;\n\n/**\n * The marketing name for the device model.\n *\n * Note: It&#39;s recommended this value represents a human readable version of the device model rather than a machine readable alternative.\n *\n * @deprecated Use ATTR_DEVICE_MODEL_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_DEVICE_MODEL_NAME = TMP_DEVICE_MODEL_NAME;\n\n/**\n * The name of the single function that this runtime instance executes.\n *\n * Note: This is the name of the function as configured/deployed on the FaaS platform and is usually different from the name of the callback function (which may be stored in the [`code.namespace`/`code.function`](../../trace/semantic_conventions/span-general.md#source-code-attributes) span attributes).\n *\n * @deprecated Use ATTR_FAAS_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_FAAS_NAME = TMP_FAAS_NAME;\n\n/**\n* The unique ID of the single function that this runtime instance executes.\n*\n* Note: Depending on the cloud provider, use:\n\n* **AWS Lambda:** The function [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).\nTake care not to use the &#34;invoked ARN&#34; directly but replace any\n[alias suffix](https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html) with the resolved function version, as the same runtime instance may be invokable with multiple\ndifferent aliases.\n* **GCP:** The [URI of the resource](https://cloud.google.com/iam/docs/full-resource-names)\n* **Azure:** The [Fully Qualified Resource ID](https://docs.microsoft.com/en-us/rest/api/resources/resources/get-by-id).\n\nOn some providers, it may not be possible to determine the full ID at startup,\nwhich is why this field cannot be made required. For example, on AWS the account ID\npart of the ARN is not available without calling another AWS API\nwhich may be deemed too slow for a short-running lambda function.\nAs an alternative, consider setting `faas.id` as a span attribute instead.\n*\n* @deprecated Use ATTR_CLOUD_RESOURCE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n*/\nexport const SEMRESATTRS_FAAS_ID = TMP_FAAS_ID;\n\n/**\n* The immutable version of the function being executed.\n*\n* Note: Depending on the cloud provider and platform, use:\n\n* **AWS Lambda:** The [function version](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html)\n  (an integer represented as a decimal string).\n* **Google Cloud Run:** The [revision](https://cloud.google.com/run/docs/managing/revisions)\n  (i.e., the function name plus the revision suffix).\n* **Google Cloud Functions:** The value of the\n  [`K_REVISION` environment variable](https://cloud.google.com/functions/docs/env-var#runtime_environment_variables_set_automatically).\n* **Azure Functions:** Not applicable. Do not set this attribute.\n*\n* @deprecated Use ATTR_FAAS_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n*/\nexport const SEMRESATTRS_FAAS_VERSION = TMP_FAAS_VERSION;\n\n/**\n * The execution environment ID as a string, that will be potentially reused for other invocations to the same function/function version.\n *\n * Note: * **AWS Lambda:** Use the (full) log stream name.\n *\n * @deprecated Use ATTR_FAAS_INSTANCE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_FAAS_INSTANCE = TMP_FAAS_INSTANCE;\n\n/**\n * The amount of memory available to the serverless function in MiB.\n *\n * Note: It&#39;s recommended to set this attribute since e.g. too little memory can easily stop a Java AWS Lambda function from working correctly. On AWS Lambda, the environment variable `AWS_LAMBDA_FUNCTION_MEMORY_SIZE` provides this information.\n *\n * @deprecated Use ATTR_FAAS_MAX_MEMORY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_FAAS_MAX_MEMORY = TMP_FAAS_MAX_MEMORY;\n\n/**\n * Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider.\n *\n * @deprecated Use ATTR_HOST_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_HOST_ID = TMP_HOST_ID;\n\n/**\n * Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.\n *\n * @deprecated Use ATTR_HOST_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_HOST_NAME = TMP_HOST_NAME;\n\n/**\n * Type of host. For Cloud, this must be the machine type.\n *\n * @deprecated Use ATTR_HOST_TYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_HOST_TYPE = TMP_HOST_TYPE;\n\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use ATTR_HOST_ARCH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_HOST_ARCH = TMP_HOST_ARCH;\n\n/**\n * Name of the VM image or OS install the host was instantiated from.\n *\n * @deprecated Use ATTR_HOST_IMAGE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_HOST_IMAGE_NAME = TMP_HOST_IMAGE_NAME;\n\n/**\n * VM image ID. For Cloud, this value is from the provider.\n *\n * @deprecated Use ATTR_HOST_IMAGE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_HOST_IMAGE_ID = TMP_HOST_IMAGE_ID;\n\n/**\n * The version string of the VM image as defined in [Version Attributes](README.md#version-attributes).\n *\n * @deprecated Use ATTR_HOST_IMAGE_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_HOST_IMAGE_VERSION = TMP_HOST_IMAGE_VERSION;\n\n/**\n * The name of the cluster.\n *\n * @deprecated Use ATTR_K8S_CLUSTER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_CLUSTER_NAME = TMP_K8S_CLUSTER_NAME;\n\n/**\n * The name of the Node.\n *\n * @deprecated Use ATTR_K8S_NODE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_NODE_NAME = TMP_K8S_NODE_NAME;\n\n/**\n * The UID of the Node.\n *\n * @deprecated Use ATTR_K8S_NODE_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_NODE_UID = TMP_K8S_NODE_UID;\n\n/**\n * The name of the namespace that the pod is running in.\n *\n * @deprecated Use ATTR_K8S_NAMESPACE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_NAMESPACE_NAME = TMP_K8S_NAMESPACE_NAME;\n\n/**\n * The UID of the Pod.\n *\n * @deprecated Use ATTR_K8S_POD_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_POD_UID = TMP_K8S_POD_UID;\n\n/**\n * The name of the Pod.\n *\n * @deprecated Use ATTR_K8S_POD_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_POD_NAME = TMP_K8S_POD_NAME;\n\n/**\n * The name of the Container in a Pod template.\n *\n * @deprecated Use ATTR_K8S_CONTAINER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_CONTAINER_NAME = TMP_K8S_CONTAINER_NAME;\n\n/**\n * The UID of the ReplicaSet.\n *\n * @deprecated Use ATTR_K8S_REPLICASET_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_REPLICASET_UID = TMP_K8S_REPLICASET_UID;\n\n/**\n * The name of the ReplicaSet.\n *\n * @deprecated Use ATTR_K8S_REPLICASET_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_REPLICASET_NAME = TMP_K8S_REPLICASET_NAME;\n\n/**\n * The UID of the Deployment.\n *\n * @deprecated Use ATTR_K8S_DEPLOYMENT_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_DEPLOYMENT_UID = TMP_K8S_DEPLOYMENT_UID;\n\n/**\n * The name of the Deployment.\n *\n * @deprecated Use ATTR_K8S_DEPLOYMENT_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_DEPLOYMENT_NAME = TMP_K8S_DEPLOYMENT_NAME;\n\n/**\n * The UID of the StatefulSet.\n *\n * @deprecated Use ATTR_K8S_STATEFULSET_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_STATEFULSET_UID = TMP_K8S_STATEFULSET_UID;\n\n/**\n * The name of the StatefulSet.\n *\n * @deprecated Use ATTR_K8S_STATEFULSET_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_STATEFULSET_NAME = TMP_K8S_STATEFULSET_NAME;\n\n/**\n * The UID of the DaemonSet.\n *\n * @deprecated Use ATTR_K8S_DAEMONSET_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_DAEMONSET_UID = TMP_K8S_DAEMONSET_UID;\n\n/**\n * The name of the DaemonSet.\n *\n * @deprecated Use ATTR_K8S_DAEMONSET_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_DAEMONSET_NAME = TMP_K8S_DAEMONSET_NAME;\n\n/**\n * The UID of the Job.\n *\n * @deprecated Use ATTR_K8S_JOB_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_JOB_UID = TMP_K8S_JOB_UID;\n\n/**\n * The name of the Job.\n *\n * @deprecated Use ATTR_K8S_JOB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_JOB_NAME = TMP_K8S_JOB_NAME;\n\n/**\n * The UID of the CronJob.\n *\n * @deprecated Use ATTR_K8S_CRONJOB_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_CRONJOB_UID = TMP_K8S_CRONJOB_UID;\n\n/**\n * The name of the CronJob.\n *\n * @deprecated Use ATTR_K8S_CRONJOB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_CRONJOB_NAME = TMP_K8S_CRONJOB_NAME;\n\n/**\n * The operating system type.\n *\n * @deprecated Use ATTR_OS_TYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_OS_TYPE = TMP_OS_TYPE;\n\n/**\n * Human readable (not intended to be parsed) OS version information, like e.g. reported by `ver` or `lsb_release -a` commands.\n *\n * @deprecated Use ATTR_OS_DESCRIPTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_OS_DESCRIPTION = TMP_OS_DESCRIPTION;\n\n/**\n * Human readable operating system name.\n *\n * @deprecated Use ATTR_OS_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_OS_NAME = TMP_OS_NAME;\n\n/**\n * The version string of the operating system as defined in [Version Attributes](../../resource/semantic_conventions/README.md#version-attributes).\n *\n * @deprecated Use ATTR_OS_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_OS_VERSION = TMP_OS_VERSION;\n\n/**\n * Process identifier (PID).\n *\n * @deprecated Use ATTR_PROCESS_PID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_PID = TMP_PROCESS_PID;\n\n/**\n * The name of the process executable. On Linux based systems, can be set to the `Name` in `proc/[pid]/status`. On Windows, can be set to the base name of `GetProcessImageFileNameW`.\n *\n * @deprecated Use ATTR_PROCESS_EXECUTABLE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_EXECUTABLE_NAME = TMP_PROCESS_EXECUTABLE_NAME;\n\n/**\n * The full path to the process executable. On Linux based systems, can be set to the target of `proc/[pid]/exe`. On Windows, can be set to the result of `GetProcessImageFileNameW`.\n *\n * @deprecated Use ATTR_PROCESS_EXECUTABLE_PATH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_EXECUTABLE_PATH = TMP_PROCESS_EXECUTABLE_PATH;\n\n/**\n * The command used to launch the process (i.e. the command name). On Linux based systems, can be set to the zeroth string in `proc/[pid]/cmdline`. On Windows, can be set to the first parameter extracted from `GetCommandLineW`.\n *\n * @deprecated Use ATTR_PROCESS_COMMAND in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_COMMAND = TMP_PROCESS_COMMAND;\n\n/**\n * The full command used to launch the process as a single string representing the full command. On Windows, can be set to the result of `GetCommandLineW`. Do not set this if you have to assemble it just for monitoring; use `process.command_args` instead.\n *\n * @deprecated Use ATTR_PROCESS_COMMAND_LINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_COMMAND_LINE = TMP_PROCESS_COMMAND_LINE;\n\n/**\n * All the command arguments (including the command/executable itself) as received by the process. On Linux-based systems (and some other Unixoid systems supporting procfs), can be set according to the list of null-delimited strings extracted from `proc/[pid]/cmdline`. For libc-based executables, this would be the full argv vector passed to `main`.\n *\n * @deprecated Use ATTR_PROCESS_COMMAND_ARGS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_COMMAND_ARGS = TMP_PROCESS_COMMAND_ARGS;\n\n/**\n * The username of the user that owns the process.\n *\n * @deprecated Use ATTR_PROCESS_OWNER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_OWNER = TMP_PROCESS_OWNER;\n\n/**\n * The name of the runtime of this process. For compiled native binaries, this SHOULD be the name of the compiler.\n *\n * @deprecated Use ATTR_PROCESS_RUNTIME_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_RUNTIME_NAME = TMP_PROCESS_RUNTIME_NAME;\n\n/**\n * The version of the runtime of this process, as returned by the runtime without modification.\n *\n * @deprecated Use ATTR_PROCESS_RUNTIME_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_RUNTIME_VERSION = TMP_PROCESS_RUNTIME_VERSION;\n\n/**\n * An additional description about the runtime of the process, for example a specific vendor customization of the runtime environment.\n *\n * @deprecated Use ATTR_PROCESS_RUNTIME_DESCRIPTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_RUNTIME_DESCRIPTION =\n  TMP_PROCESS_RUNTIME_DESCRIPTION;\n\n/**\n * Logical name of the service.\n *\n * Note: MUST be the same for all instances of horizontally scaled services. If the value was not specified, SDKs MUST fallback to `unknown_service:` concatenated with [`process.executable.name`](process.md#process), e.g. `unknown_service:bash`. If `process.executable.name` is not available, the value MUST be set to `unknown_service`.\n *\n * @deprecated Use ATTR_SERVICE_NAME.\n */\nexport const SEMRESATTRS_SERVICE_NAME = TMP_SERVICE_NAME;\n\n/**\n * A namespace for `service.name`.\n *\n * Note: A string value having a meaning that helps to distinguish a group of services, for example the team name that owns a group of services. `service.name` is expected to be unique within the same namespace. If `service.namespace` is not specified in the Resource then `service.name` is expected to be unique for all services that have no explicit namespace defined (so the empty/unspecified namespace is simply one more valid namespace). Zero-length namespace string is assumed equal to unspecified namespace.\n *\n * @deprecated Use ATTR_SERVICE_NAMESPACE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_SERVICE_NAMESPACE = TMP_SERVICE_NAMESPACE;\n\n/**\n * The string ID of the service instance.\n *\n * Note: MUST be unique for each instance of the same `service.namespace,service.name` pair (in other words `service.namespace,service.name,service.instance.id` triplet MUST be globally unique). The ID helps to distinguish instances of the same service that exist at the same time (e.g. instances of a horizontally scaled service). It is preferable for the ID to be persistent and stay the same for the lifetime of the service instance, however it is acceptable that the ID is ephemeral and changes during important lifetime events for the service (e.g. service restarts). If the service has no inherent unique ID that can be used as the value of this attribute it is recommended to generate a random Version 1 or Version 4 RFC 4122 UUID (services aiming for reproducible UUIDs may also use Version 5, see RFC 4122 for more recommendations).\n *\n * @deprecated Use ATTR_SERVICE_INSTANCE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_SERVICE_INSTANCE_ID = TMP_SERVICE_INSTANCE_ID;\n\n/**\n * The version string of the service API or implementation.\n *\n * @deprecated Use ATTR_SERVICE_VERSION.\n */\nexport const SEMRESATTRS_SERVICE_VERSION = TMP_SERVICE_VERSION;\n\n/**\n * The name of the telemetry SDK as defined above.\n *\n * @deprecated Use ATTR_TELEMETRY_SDK_NAME.\n */\nexport const SEMRESATTRS_TELEMETRY_SDK_NAME = TMP_TELEMETRY_SDK_NAME;\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use ATTR_TELEMETRY_SDK_LANGUAGE.\n */\nexport const SEMRESATTRS_TELEMETRY_SDK_LANGUAGE = TMP_TELEMETRY_SDK_LANGUAGE;\n\n/**\n * The version string of the telemetry SDK.\n *\n * @deprecated Use ATTR_TELEMETRY_SDK_VERSION.\n */\nexport const SEMRESATTRS_TELEMETRY_SDK_VERSION = TMP_TELEMETRY_SDK_VERSION;\n\n/**\n * The version string of the auto instrumentation agent, if used.\n *\n * @deprecated Use ATTR_TELEMETRY_DISTRO_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_TELEMETRY_AUTO_VERSION = TMP_TELEMETRY_AUTO_VERSION;\n\n/**\n * The name of the web engine.\n *\n * @deprecated Use ATTR_WEBENGINE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_WEBENGINE_NAME = TMP_WEBENGINE_NAME;\n\n/**\n * The version of the web engine.\n *\n * @deprecated Use ATTR_WEBENGINE_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_WEBENGINE_VERSION = TMP_WEBENGINE_VERSION;\n\n/**\n * Additional description of the web engine (e.g. detailed version and edition information).\n *\n * @deprecated Use ATTR_WEBENGINE_DESCRIPTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_WEBENGINE_DESCRIPTION = TMP_WEBENGINE_DESCRIPTION;\n\n/**\n * Definition of available values for SemanticResourceAttributes\n * This type is used for backward compatibility, you should use the individual exported\n * constants SemanticResourceAttributes_XXXXX rather than the exported constant map. As any single reference\n * to a constant map value will result in all strings being included into your bundle.\n * @deprecated Use the SEMRESATTRS_XXXXX constants rather than the SemanticResourceAttributes.XXXXX for bundle minification.\n */\nexport type SemanticResourceAttributes = {\n  /**\n   * Name of the cloud provider.\n   */\n  CLOUD_PROVIDER: 'cloud.provider';\n\n  /**\n   * The cloud account ID the resource is assigned to.\n   */\n  CLOUD_ACCOUNT_ID: 'cloud.account.id';\n\n  /**\n   * The geographical region the resource is running. Refer to your provider&#39;s docs to see the available regions, for example [Alibaba Cloud regions](https://www.alibabacloud.com/help/doc-detail/40654.htm), [AWS regions](https://aws.amazon.com/about-aws/global-infrastructure/regions_az/), [Azure regions](https://azure.microsoft.com/en-us/global-infrastructure/geographies/), or [Google Cloud regions](https://cloud.google.com/about/locations).\n   */\n  CLOUD_REGION: 'cloud.region';\n\n  /**\n   * Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.\n   *\n   * Note: Availability zones are called &#34;zones&#34; on Alibaba Cloud and Google Cloud.\n   */\n  CLOUD_AVAILABILITY_ZONE: 'cloud.availability_zone';\n\n  /**\n   * The cloud platform in use.\n   *\n   * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n   */\n  CLOUD_PLATFORM: 'cloud.platform';\n\n  /**\n   * The Amazon Resource Name (ARN) of an [ECS container instance](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_instances.html).\n   */\n  AWS_ECS_CONTAINER_ARN: 'aws.ecs.container.arn';\n\n  /**\n   * The ARN of an [ECS cluster](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/clusters.html).\n   */\n  AWS_ECS_CLUSTER_ARN: 'aws.ecs.cluster.arn';\n\n  /**\n   * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n   */\n  AWS_ECS_LAUNCHTYPE: 'aws.ecs.launchtype';\n\n  /**\n   * The ARN of an [ECS task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html).\n   */\n  AWS_ECS_TASK_ARN: 'aws.ecs.task.arn';\n\n  /**\n   * The task definition family this task definition is a member of.\n   */\n  AWS_ECS_TASK_FAMILY: 'aws.ecs.task.family';\n\n  /**\n   * The revision for this task definition.\n   */\n  AWS_ECS_TASK_REVISION: 'aws.ecs.task.revision';\n\n  /**\n   * The ARN of an EKS cluster.\n   */\n  AWS_EKS_CLUSTER_ARN: 'aws.eks.cluster.arn';\n\n  /**\n   * The name(s) of the AWS log group(s) an application is writing to.\n   *\n   * Note: Multiple log groups must be supported for cases like multi-container applications, where a single application has sidecar containers, and each write to their own log group.\n   */\n  AWS_LOG_GROUP_NAMES: 'aws.log.group.names';\n\n  /**\n   * The Amazon Resource Name(s) (ARN) of the AWS log group(s).\n   *\n   * Note: See the [log group ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format).\n   */\n  AWS_LOG_GROUP_ARNS: 'aws.log.group.arns';\n\n  /**\n   * The name(s) of the AWS log stream(s) an application is writing to.\n   */\n  AWS_LOG_STREAM_NAMES: 'aws.log.stream.names';\n\n  /**\n   * The ARN(s) of the AWS log stream(s).\n   *\n   * Note: See the [log stream ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format). One log group can contain several log streams, so these ARNs necessarily identify both a log group and a log stream.\n   */\n  AWS_LOG_STREAM_ARNS: 'aws.log.stream.arns';\n\n  /**\n   * Container name.\n   */\n  CONTAINER_NAME: 'container.name';\n\n  /**\n   * Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/reference/run/#container-identification). The UUID might be abbreviated.\n   */\n  CONTAINER_ID: 'container.id';\n\n  /**\n   * The container runtime managing this container.\n   */\n  CONTAINER_RUNTIME: 'container.runtime';\n\n  /**\n   * Name of the image the container was built on.\n   */\n  CONTAINER_IMAGE_NAME: 'container.image.name';\n\n  /**\n   * Container image tag.\n   */\n  CONTAINER_IMAGE_TAG: 'container.image.tag';\n\n  /**\n   * Name of the [deployment environment](https://en.wikipedia.org/wiki/Deployment_environment) (aka deployment tier).\n   */\n  DEPLOYMENT_ENVIRONMENT: 'deployment.environment';\n\n  /**\n   * A unique identifier representing the device.\n   *\n   * Note: The device identifier MUST only be defined using the values outlined below. This value is not an advertising identifier and MUST NOT be used as such. On iOS (Swift or Objective-C), this value MUST be equal to the [vendor identifier](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor). On Android (Java or Kotlin), this value MUST be equal to the Firebase Installation ID or a globally unique UUID which is persisted across sessions in your application. More information can be found [here](https://developer.android.com/training/articles/user-data-ids) on best practices and exact implementation details. Caution should be taken when storing personal data or anything which can identify a user. GDPR and data protection laws may apply, ensure you do your own due diligence.\n   */\n  DEVICE_ID: 'device.id';\n\n  /**\n   * The model identifier for the device.\n   *\n   * Note: It&#39;s recommended this value represents a machine readable version of the model identifier rather than the market or consumer-friendly name of the device.\n   */\n  DEVICE_MODEL_IDENTIFIER: 'device.model.identifier';\n\n  /**\n   * The marketing name for the device model.\n   *\n   * Note: It&#39;s recommended this value represents a human readable version of the device model rather than a machine readable alternative.\n   */\n  DEVICE_MODEL_NAME: 'device.model.name';\n\n  /**\n   * The name of the single function that this runtime instance executes.\n   *\n   * Note: This is the name of the function as configured/deployed on the FaaS platform and is usually different from the name of the callback function (which may be stored in the [`code.namespace`/`code.function`](../../trace/semantic_conventions/span-general.md#source-code-attributes) span attributes).\n   */\n  FAAS_NAME: 'faas.name';\n\n  /**\n  * The unique ID of the single function that this runtime instance executes.\n  *\n  * Note: Depending on the cloud provider, use:\n\n* **AWS Lambda:** The function [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).\nTake care not to use the &#34;invoked ARN&#34; directly but replace any\n[alias suffix](https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html) with the resolved function version, as the same runtime instance may be invokable with multiple\ndifferent aliases.\n* **GCP:** The [URI of the resource](https://cloud.google.com/iam/docs/full-resource-names)\n* **Azure:** The [Fully Qualified Resource ID](https://docs.microsoft.com/en-us/rest/api/resources/resources/get-by-id).\n\nOn some providers, it may not be possible to determine the full ID at startup,\nwhich is why this field cannot be made required. For example, on AWS the account ID\npart of the ARN is not available without calling another AWS API\nwhich may be deemed too slow for a short-running lambda function.\nAs an alternative, consider setting `faas.id` as a span attribute instead.\n  */\n  FAAS_ID: 'faas.id';\n\n  /**\n  * The immutable version of the function being executed.\n  *\n  * Note: Depending on the cloud provider and platform, use:\n\n* **AWS Lambda:** The [function version](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html)\n  (an integer represented as a decimal string).\n* **Google Cloud Run:** The [revision](https://cloud.google.com/run/docs/managing/revisions)\n  (i.e., the function name plus the revision suffix).\n* **Google Cloud Functions:** The value of the\n  [`K_REVISION` environment variable](https://cloud.google.com/functions/docs/env-var#runtime_environment_variables_set_automatically).\n* **Azure Functions:** Not applicable. Do not set this attribute.\n  */\n  FAAS_VERSION: 'faas.version';\n\n  /**\n   * The execution environment ID as a string, that will be potentially reused for other invocations to the same function/function version.\n   *\n   * Note: * **AWS Lambda:** Use the (full) log stream name.\n   */\n  FAAS_INSTANCE: 'faas.instance';\n\n  /**\n   * The amount of memory available to the serverless function in MiB.\n   *\n   * Note: It&#39;s recommended to set this attribute since e.g. too little memory can easily stop a Java AWS Lambda function from working correctly. On AWS Lambda, the environment variable `AWS_LAMBDA_FUNCTION_MEMORY_SIZE` provides this information.\n   */\n  FAAS_MAX_MEMORY: 'faas.max_memory';\n\n  /**\n   * Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider.\n   */\n  HOST_ID: 'host.id';\n\n  /**\n   * Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.\n   */\n  HOST_NAME: 'host.name';\n\n  /**\n   * Type of host. For Cloud, this must be the machine type.\n   */\n  HOST_TYPE: 'host.type';\n\n  /**\n   * The CPU architecture the host system is running on.\n   */\n  HOST_ARCH: 'host.arch';\n\n  /**\n   * Name of the VM image or OS install the host was instantiated from.\n   */\n  HOST_IMAGE_NAME: 'host.image.name';\n\n  /**\n   * VM image ID. For Cloud, this value is from the provider.\n   */\n  HOST_IMAGE_ID: 'host.image.id';\n\n  /**\n   * The version string of the VM image as defined in [Version Attributes](README.md#version-attributes).\n   */\n  HOST_IMAGE_VERSION: 'host.image.version';\n\n  /**\n   * The name of the cluster.\n   */\n  K8S_CLUSTER_NAME: 'k8s.cluster.name';\n\n  /**\n   * The name of the Node.\n   */\n  K8S_NODE_NAME: 'k8s.node.name';\n\n  /**\n   * The UID of the Node.\n   */\n  K8S_NODE_UID: 'k8s.node.uid';\n\n  /**\n   * The name of the namespace that the pod is running in.\n   */\n  K8S_NAMESPACE_NAME: 'k8s.namespace.name';\n\n  /**\n   * The UID of the Pod.\n   */\n  K8S_POD_UID: 'k8s.pod.uid';\n\n  /**\n   * The name of the Pod.\n   */\n  K8S_POD_NAME: 'k8s.pod.name';\n\n  /**\n   * The name of the Container in a Pod template.\n   */\n  K8S_CONTAINER_NAME: 'k8s.container.name';\n\n  /**\n   * The UID of the ReplicaSet.\n   */\n  K8S_REPLICASET_UID: 'k8s.replicaset.uid';\n\n  /**\n   * The name of the ReplicaSet.\n   */\n  K8S_REPLICASET_NAME: 'k8s.replicaset.name';\n\n  /**\n   * The UID of the Deployment.\n   */\n  K8S_DEPLOYMENT_UID: 'k8s.deployment.uid';\n\n  /**\n   * The name of the Deployment.\n   */\n  K8S_DEPLOYMENT_NAME: 'k8s.deployment.name';\n\n  /**\n   * The UID of the StatefulSet.\n   */\n  K8S_STATEFULSET_UID: 'k8s.statefulset.uid';\n\n  /**\n   * The name of the StatefulSet.\n   */\n  K8S_STATEFULSET_NAME: 'k8s.statefulset.name';\n\n  /**\n   * The UID of the DaemonSet.\n   */\n  K8S_DAEMONSET_UID: 'k8s.daemonset.uid';\n\n  /**\n   * The name of the DaemonSet.\n   */\n  K8S_DAEMONSET_NAME: 'k8s.daemonset.name';\n\n  /**\n   * The UID of the Job.\n   */\n  K8S_JOB_UID: 'k8s.job.uid';\n\n  /**\n   * The name of the Job.\n   */\n  K8S_JOB_NAME: 'k8s.job.name';\n\n  /**\n   * The UID of the CronJob.\n   */\n  K8S_CRONJOB_UID: 'k8s.cronjob.uid';\n\n  /**\n   * The name of the CronJob.\n   */\n  K8S_CRONJOB_NAME: 'k8s.cronjob.name';\n\n  /**\n   * The operating system type.\n   */\n  OS_TYPE: 'os.type';\n\n  /**\n   * Human readable (not intended to be parsed) OS version information, like e.g. reported by `ver` or `lsb_release -a` commands.\n   */\n  OS_DESCRIPTION: 'os.description';\n\n  /**\n   * Human readable operating system name.\n   */\n  OS_NAME: 'os.name';\n\n  /**\n   * The version string of the operating system as defined in [Version Attributes](../../resource/semantic_conventions/README.md#version-attributes).\n   */\n  OS_VERSION: 'os.version';\n\n  /**\n   * Process identifier (PID).\n   */\n  PROCESS_PID: 'process.pid';\n\n  /**\n   * The name of the process executable. On Linux based systems, can be set to the `Name` in `proc/[pid]/status`. On Windows, can be set to the base name of `GetProcessImageFileNameW`.\n   */\n  PROCESS_EXECUTABLE_NAME: 'process.executable.name';\n\n  /**\n   * The full path to the process executable. On Linux based systems, can be set to the target of `proc/[pid]/exe`. On Windows, can be set to the result of `GetProcessImageFileNameW`.\n   */\n  PROCESS_EXECUTABLE_PATH: 'process.executable.path';\n\n  /**\n   * The command used to launch the process (i.e. the command name). On Linux based systems, can be set to the zeroth string in `proc/[pid]/cmdline`. On Windows, can be set to the first parameter extracted from `GetCommandLineW`.\n   */\n  PROCESS_COMMAND: 'process.command';\n\n  /**\n   * The full command used to launch the process as a single string representing the full command. On Windows, can be set to the result of `GetCommandLineW`. Do not set this if you have to assemble it just for monitoring; use `process.command_args` instead.\n   */\n  PROCESS_COMMAND_LINE: 'process.command_line';\n\n  /**\n   * All the command arguments (including the command/executable itself) as received by the process. On Linux-based systems (and some other Unixoid systems supporting procfs), can be set according to the list of null-delimited strings extracted from `proc/[pid]/cmdline`. For libc-based executables, this would be the full argv vector passed to `main`.\n   */\n  PROCESS_COMMAND_ARGS: 'process.command_args';\n\n  /**\n   * The username of the user that owns the process.\n   */\n  PROCESS_OWNER: 'process.owner';\n\n  /**\n   * The name of the runtime of this process. For compiled native binaries, this SHOULD be the name of the compiler.\n   */\n  PROCESS_RUNTIME_NAME: 'process.runtime.name';\n\n  /**\n   * The version of the runtime of this process, as returned by the runtime without modification.\n   */\n  PROCESS_RUNTIME_VERSION: 'process.runtime.version';\n\n  /**\n   * An additional description about the runtime of the process, for example a specific vendor customization of the runtime environment.\n   */\n  PROCESS_RUNTIME_DESCRIPTION: 'process.runtime.description';\n\n  /**\n   * Logical name of the service.\n   *\n   * Note: MUST be the same for all instances of horizontally scaled services. If the value was not specified, SDKs MUST fallback to `unknown_service:` concatenated with [`process.executable.name`](process.md#process), e.g. `unknown_service:bash`. If `process.executable.name` is not available, the value MUST be set to `unknown_service`.\n   */\n  SERVICE_NAME: 'service.name';\n\n  /**\n   * A namespace for `service.name`.\n   *\n   * Note: A string value having a meaning that helps to distinguish a group of services, for example the team name that owns a group of services. `service.name` is expected to be unique within the same namespace. If `service.namespace` is not specified in the Resource then `service.name` is expected to be unique for all services that have no explicit namespace defined (so the empty/unspecified namespace is simply one more valid namespace). Zero-length namespace string is assumed equal to unspecified namespace.\n   */\n  SERVICE_NAMESPACE: 'service.namespace';\n\n  /**\n   * The string ID of the service instance.\n   *\n   * Note: MUST be unique for each instance of the same `service.namespace,service.name` pair (in other words `service.namespace,service.name,service.instance.id` triplet MUST be globally unique). The ID helps to distinguish instances of the same service that exist at the same time (e.g. instances of a horizontally scaled service). It is preferable for the ID to be persistent and stay the same for the lifetime of the service instance, however it is acceptable that the ID is ephemeral and changes during important lifetime events for the service (e.g. service restarts). If the service has no inherent unique ID that can be used as the value of this attribute it is recommended to generate a random Version 1 or Version 4 RFC 4122 UUID (services aiming for reproducible UUIDs may also use Version 5, see RFC 4122 for more recommendations).\n   */\n  SERVICE_INSTANCE_ID: 'service.instance.id';\n\n  /**\n   * The version string of the service API or implementation.\n   */\n  SERVICE_VERSION: 'service.version';\n\n  /**\n   * The name of the telemetry SDK as defined above.\n   */\n  TELEMETRY_SDK_NAME: 'telemetry.sdk.name';\n\n  /**\n   * The language of the telemetry SDK.\n   */\n  TELEMETRY_SDK_LANGUAGE: 'telemetry.sdk.language';\n\n  /**\n   * The version string of the telemetry SDK.\n   */\n  TELEMETRY_SDK_VERSION: 'telemetry.sdk.version';\n\n  /**\n   * The version string of the auto instrumentation agent, if used.\n   */\n  TELEMETRY_AUTO_VERSION: 'telemetry.auto.version';\n\n  /**\n   * The name of the web engine.\n   */\n  WEBENGINE_NAME: 'webengine.name';\n\n  /**\n   * The version of the web engine.\n   */\n  WEBENGINE_VERSION: 'webengine.version';\n\n  /**\n   * Additional description of the web engine (e.g. detailed version and edition information).\n   */\n  WEBENGINE_DESCRIPTION: 'webengine.description';\n};\n\n/**\n * Create exported Value Map for SemanticResourceAttributes values\n * @deprecated Use the SEMRESATTRS_XXXXX constants rather than the SemanticResourceAttributes.XXXXX for bundle minification\n */\nexport const SemanticResourceAttributes: SemanticResourceAttributes =\n  /*#__PURE__*/ createConstMap<SemanticResourceAttributes>([\n    TMP_CLOUD_PROVIDER,\n    TMP_CLOUD_ACCOUNT_ID,\n    TMP_CLOUD_REGION,\n    TMP_CLOUD_AVAILABILITY_ZONE,\n    TMP_CLOUD_PLATFORM,\n    TMP_AWS_ECS_CONTAINER_ARN,\n    TMP_AWS_ECS_CLUSTER_ARN,\n    TMP_AWS_ECS_LAUNCHTYPE,\n    TMP_AWS_ECS_TASK_ARN,\n    TMP_AWS_ECS_TASK_FAMILY,\n    TMP_AWS_ECS_TASK_REVISION,\n    TMP_AWS_EKS_CLUSTER_ARN,\n    TMP_AWS_LOG_GROUP_NAMES,\n    TMP_AWS_LOG_GROUP_ARNS,\n    TMP_AWS_LOG_STREAM_NAMES,\n    TMP_AWS_LOG_STREAM_ARNS,\n    TMP_CONTAINER_NAME,\n    TMP_CONTAINER_ID,\n    TMP_CONTAINER_RUNTIME,\n    TMP_CONTAINER_IMAGE_NAME,\n    TMP_CONTAINER_IMAGE_TAG,\n    TMP_DEPLOYMENT_ENVIRONMENT,\n    TMP_DEVICE_ID,\n    TMP_DEVICE_MODEL_IDENTIFIER,\n    TMP_DEVICE_MODEL_NAME,\n    TMP_FAAS_NAME,\n    TMP_FAAS_ID,\n    TMP_FAAS_VERSION,\n    TMP_FAAS_INSTANCE,\n    TMP_FAAS_MAX_MEMORY,\n    TMP_HOST_ID,\n    TMP_HOST_NAME,\n    TMP_HOST_TYPE,\n    TMP_HOST_ARCH,\n    TMP_HOST_IMAGE_NAME,\n    TMP_HOST_IMAGE_ID,\n    TMP_HOST_IMAGE_VERSION,\n    TMP_K8S_CLUSTER_NAME,\n    TMP_K8S_NODE_NAME,\n    TMP_K8S_NODE_UID,\n    TMP_K8S_NAMESPACE_NAME,\n    TMP_K8S_POD_UID,\n    TMP_K8S_POD_NAME,\n    TMP_K8S_CONTAINER_NAME,\n    TMP_K8S_REPLICASET_UID,\n    TMP_K8S_REPLICASET_NAME,\n    TMP_K8S_DEPLOYMENT_UID,\n    TMP_K8S_DEPLOYMENT_NAME,\n    TMP_K8S_STATEFULSET_UID,\n    TMP_K8S_STATEFULSET_NAME,\n    TMP_K8S_DAEMONSET_UID,\n    TMP_K8S_DAEMONSET_NAME,\n    TMP_K8S_JOB_UID,\n    TMP_K8S_JOB_NAME,\n    TMP_K8S_CRONJOB_UID,\n    TMP_K8S_CRONJOB_NAME,\n    TMP_OS_TYPE,\n    TMP_OS_DESCRIPTION,\n    TMP_OS_NAME,\n    TMP_OS_VERSION,\n    TMP_PROCESS_PID,\n    TMP_PROCESS_EXECUTABLE_NAME,\n    TMP_PROCESS_EXECUTABLE_PATH,\n    TMP_PROCESS_COMMAND,\n    TMP_PROCESS_COMMAND_LINE,\n    TMP_PROCESS_COMMAND_ARGS,\n    TMP_PROCESS_OWNER,\n    TMP_PROCESS_RUNTIME_NAME,\n    TMP_PROCESS_RUNTIME_VERSION,\n    TMP_PROCESS_RUNTIME_DESCRIPTION,\n    TMP_SERVICE_NAME,\n    TMP_SERVICE_NAMESPACE,\n    TMP_SERVICE_INSTANCE_ID,\n    TMP_SERVICE_VERSION,\n    TMP_TELEMETRY_SDK_NAME,\n    TMP_TELEMETRY_SDK_LANGUAGE,\n    TMP_TELEMETRY_SDK_VERSION,\n    TMP_TELEMETRY_AUTO_VERSION,\n    TMP_WEBENGINE_NAME,\n    TMP_WEBENGINE_VERSION,\n    TMP_WEBENGINE_DESCRIPTION,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for CloudProviderValues enum definition\n *\n * Name of the cloud provider.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_CLOUDPROVIDERVALUES_ALIBABA_CLOUD = 'alibaba_cloud';\nconst TMP_CLOUDPROVIDERVALUES_AWS = 'aws';\nconst TMP_CLOUDPROVIDERVALUES_AZURE = 'azure';\nconst TMP_CLOUDPROVIDERVALUES_GCP = 'gcp';\n\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_ALIBABA_CLOUD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPROVIDERVALUES_ALIBABA_CLOUD =\n  TMP_CLOUDPROVIDERVALUES_ALIBABA_CLOUD;\n\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_AWS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPROVIDERVALUES_AWS = TMP_CLOUDPROVIDERVALUES_AWS;\n\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_AZURE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPROVIDERVALUES_AZURE = TMP_CLOUDPROVIDERVALUES_AZURE;\n\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_GCP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPROVIDERVALUES_GCP = TMP_CLOUDPROVIDERVALUES_GCP;\n\n/**\n * Identifies the Values for CloudProviderValues enum definition\n *\n * Name of the cloud provider.\n * @deprecated Use the CLOUDPROVIDERVALUES_XXXXX constants rather than the CloudProviderValues.XXXXX for bundle minification.\n */\nexport type CloudProviderValues = {\n  /** Alibaba Cloud. */\n  ALIBABA_CLOUD: 'alibaba_cloud';\n\n  /** Amazon Web Services. */\n  AWS: 'aws';\n\n  /** Microsoft Azure. */\n  AZURE: 'azure';\n\n  /** Google Cloud Platform. */\n  GCP: 'gcp';\n};\n\n/**\n * The constant map of values for CloudProviderValues.\n * @deprecated Use the CLOUDPROVIDERVALUES_XXXXX constants rather than the CloudProviderValues.XXXXX for bundle minification.\n */\nexport const CloudProviderValues: CloudProviderValues =\n  /*#__PURE__*/ createConstMap<CloudProviderValues>([\n    TMP_CLOUDPROVIDERVALUES_ALIBABA_CLOUD,\n    TMP_CLOUDPROVIDERVALUES_AWS,\n    TMP_CLOUDPROVIDERVALUES_AZURE,\n    TMP_CLOUDPROVIDERVALUES_GCP,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for CloudPlatformValues enum definition\n *\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS = 'alibaba_cloud_ecs';\nconst TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC = 'alibaba_cloud_fc';\nconst TMP_CLOUDPLATFORMVALUES_AWS_EC2 = 'aws_ec2';\nconst TMP_CLOUDPLATFORMVALUES_AWS_ECS = 'aws_ecs';\nconst TMP_CLOUDPLATFORMVALUES_AWS_EKS = 'aws_eks';\nconst TMP_CLOUDPLATFORMVALUES_AWS_LAMBDA = 'aws_lambda';\nconst TMP_CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK = 'aws_elastic_beanstalk';\nconst TMP_CLOUDPLATFORMVALUES_AZURE_VM = 'azure_vm';\nconst TMP_CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES =\n  'azure_container_instances';\nconst TMP_CLOUDPLATFORMVALUES_AZURE_AKS = 'azure_aks';\nconst TMP_CLOUDPLATFORMVALUES_AZURE_FUNCTIONS = 'azure_functions';\nconst TMP_CLOUDPLATFORMVALUES_AZURE_APP_SERVICE = 'azure_app_service';\nconst TMP_CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE = 'gcp_compute_engine';\nconst TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_RUN = 'gcp_cloud_run';\nconst TMP_CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE = 'gcp_kubernetes_engine';\nconst TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS = 'gcp_cloud_functions';\nconst TMP_CLOUDPLATFORMVALUES_GCP_APP_ENGINE = 'gcp_app_engine';\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_ALIBABA_CLOUD_ECS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS =\n  TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_ALIBABA_CLOUD_FC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC =\n  TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_EC2 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AWS_EC2 = TMP_CLOUDPLATFORMVALUES_AWS_EC2;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_ECS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AWS_ECS = TMP_CLOUDPLATFORMVALUES_AWS_ECS;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_EKS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AWS_EKS = TMP_CLOUDPLATFORMVALUES_AWS_EKS;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_LAMBDA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AWS_LAMBDA =\n  TMP_CLOUDPLATFORMVALUES_AWS_LAMBDA;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_ELASTIC_BEANSTALK in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK =\n  TMP_CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_VM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AZURE_VM = TMP_CLOUDPLATFORMVALUES_AZURE_VM;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_CONTAINER_INSTANCES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES =\n  TMP_CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_AKS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AZURE_AKS = TMP_CLOUDPLATFORMVALUES_AZURE_AKS;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_FUNCTIONS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AZURE_FUNCTIONS =\n  TMP_CLOUDPLATFORMVALUES_AZURE_FUNCTIONS;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_APP_SERVICE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AZURE_APP_SERVICE =\n  TMP_CLOUDPLATFORMVALUES_AZURE_APP_SERVICE;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_COMPUTE_ENGINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE =\n  TMP_CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_CLOUD_RUN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_GCP_CLOUD_RUN =\n  TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_RUN;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_KUBERNETES_ENGINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE =\n  TMP_CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_CLOUD_FUNCTIONS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS =\n  TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_APP_ENGINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_GCP_APP_ENGINE =\n  TMP_CLOUDPLATFORMVALUES_GCP_APP_ENGINE;\n\n/**\n * Identifies the Values for CloudPlatformValues enum definition\n *\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n * @deprecated Use the CLOUDPLATFORMVALUES_XXXXX constants rather than the CloudPlatformValues.XXXXX for bundle minification.\n */\nexport type CloudPlatformValues = {\n  /** Alibaba Cloud Elastic Compute Service. */\n  ALIBABA_CLOUD_ECS: 'alibaba_cloud_ecs';\n\n  /** Alibaba Cloud Function Compute. */\n  ALIBABA_CLOUD_FC: 'alibaba_cloud_fc';\n\n  /** AWS Elastic Compute Cloud. */\n  AWS_EC2: 'aws_ec2';\n\n  /** AWS Elastic Container Service. */\n  AWS_ECS: 'aws_ecs';\n\n  /** AWS Elastic Kubernetes Service. */\n  AWS_EKS: 'aws_eks';\n\n  /** AWS Lambda. */\n  AWS_LAMBDA: 'aws_lambda';\n\n  /** AWS Elastic Beanstalk. */\n  AWS_ELASTIC_BEANSTALK: 'aws_elastic_beanstalk';\n\n  /** Azure Virtual Machines. */\n  AZURE_VM: 'azure_vm';\n\n  /** Azure Container Instances. */\n  AZURE_CONTAINER_INSTANCES: 'azure_container_instances';\n\n  /** Azure Kubernetes Service. */\n  AZURE_AKS: 'azure_aks';\n\n  /** Azure Functions. */\n  AZURE_FUNCTIONS: 'azure_functions';\n\n  /** Azure App Service. */\n  AZURE_APP_SERVICE: 'azure_app_service';\n\n  /** Google Cloud Compute Engine (GCE). */\n  GCP_COMPUTE_ENGINE: 'gcp_compute_engine';\n\n  /** Google Cloud Run. */\n  GCP_CLOUD_RUN: 'gcp_cloud_run';\n\n  /** Google Cloud Kubernetes Engine (GKE). */\n  GCP_KUBERNETES_ENGINE: 'gcp_kubernetes_engine';\n\n  /** Google Cloud Functions (GCF). */\n  GCP_CLOUD_FUNCTIONS: 'gcp_cloud_functions';\n\n  /** Google Cloud App Engine (GAE). */\n  GCP_APP_ENGINE: 'gcp_app_engine';\n};\n\n/**\n * The constant map of values for CloudPlatformValues.\n * @deprecated Use the CLOUDPLATFORMVALUES_XXXXX constants rather than the CloudPlatformValues.XXXXX for bundle minification.\n */\nexport const CloudPlatformValues: CloudPlatformValues =\n  /*#__PURE__*/ createConstMap<CloudPlatformValues>([\n    TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS,\n    TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC,\n    TMP_CLOUDPLATFORMVALUES_AWS_EC2,\n    TMP_CLOUDPLATFORMVALUES_AWS_ECS,\n    TMP_CLOUDPLATFORMVALUES_AWS_EKS,\n    TMP_CLOUDPLATFORMVALUES_AWS_LAMBDA,\n    TMP_CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK,\n    TMP_CLOUDPLATFORMVALUES_AZURE_VM,\n    TMP_CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES,\n    TMP_CLOUDPLATFORMVALUES_AZURE_AKS,\n    TMP_CLOUDPLATFORMVALUES_AZURE_FUNCTIONS,\n    TMP_CLOUDPLATFORMVALUES_AZURE_APP_SERVICE,\n    TMP_CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE,\n    TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_RUN,\n    TMP_CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE,\n    TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS,\n    TMP_CLOUDPLATFORMVALUES_GCP_APP_ENGINE,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for AwsEcsLaunchtypeValues enum definition\n *\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_AWSECSLAUNCHTYPEVALUES_EC2 = 'ec2';\nconst TMP_AWSECSLAUNCHTYPEVALUES_FARGATE = 'fargate';\n\n/**\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n *\n * @deprecated Use AWS_ECS_LAUNCHTYPE_VALUE_EC2 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const AWSECSLAUNCHTYPEVALUES_EC2 = TMP_AWSECSLAUNCHTYPEVALUES_EC2;\n\n/**\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n *\n * @deprecated Use AWS_ECS_LAUNCHTYPE_VALUE_FARGATE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const AWSECSLAUNCHTYPEVALUES_FARGATE =\n  TMP_AWSECSLAUNCHTYPEVALUES_FARGATE;\n\n/**\n * Identifies the Values for AwsEcsLaunchtypeValues enum definition\n *\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n * @deprecated Use the AWSECSLAUNCHTYPEVALUES_XXXXX constants rather than the AwsEcsLaunchtypeValues.XXXXX for bundle minification.\n */\nexport type AwsEcsLaunchtypeValues = {\n  /** ec2. */\n  EC2: 'ec2';\n\n  /** fargate. */\n  FARGATE: 'fargate';\n};\n\n/**\n * The constant map of values for AwsEcsLaunchtypeValues.\n * @deprecated Use the AWSECSLAUNCHTYPEVALUES_XXXXX constants rather than the AwsEcsLaunchtypeValues.XXXXX for bundle minification.\n */\nexport const AwsEcsLaunchtypeValues: AwsEcsLaunchtypeValues =\n  /*#__PURE__*/ createConstMap<AwsEcsLaunchtypeValues>([\n    TMP_AWSECSLAUNCHTYPEVALUES_EC2,\n    TMP_AWSECSLAUNCHTYPEVALUES_FARGATE,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for HostArchValues enum definition\n *\n * The CPU architecture the host system is running on.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_HOSTARCHVALUES_AMD64 = 'amd64';\nconst TMP_HOSTARCHVALUES_ARM32 = 'arm32';\nconst TMP_HOSTARCHVALUES_ARM64 = 'arm64';\nconst TMP_HOSTARCHVALUES_IA64 = 'ia64';\nconst TMP_HOSTARCHVALUES_PPC32 = 'ppc32';\nconst TMP_HOSTARCHVALUES_PPC64 = 'ppc64';\nconst TMP_HOSTARCHVALUES_X86 = 'x86';\n\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_AMD64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HOSTARCHVALUES_AMD64 = TMP_HOSTARCHVALUES_AMD64;\n\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_ARM32 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HOSTARCHVALUES_ARM32 = TMP_HOSTARCHVALUES_ARM32;\n\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_ARM64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HOSTARCHVALUES_ARM64 = TMP_HOSTARCHVALUES_ARM64;\n\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_IA64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HOSTARCHVALUES_IA64 = TMP_HOSTARCHVALUES_IA64;\n\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_PPC32 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HOSTARCHVALUES_PPC32 = TMP_HOSTARCHVALUES_PPC32;\n\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_PPC64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HOSTARCHVALUES_PPC64 = TMP_HOSTARCHVALUES_PPC64;\n\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_X86 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HOSTARCHVALUES_X86 = TMP_HOSTARCHVALUES_X86;\n\n/**\n * Identifies the Values for HostArchValues enum definition\n *\n * The CPU architecture the host system is running on.\n * @deprecated Use the HOSTARCHVALUES_XXXXX constants rather than the HostArchValues.XXXXX for bundle minification.\n */\nexport type HostArchValues = {\n  /** AMD64. */\n  AMD64: 'amd64';\n\n  /** ARM32. */\n  ARM32: 'arm32';\n\n  /** ARM64. */\n  ARM64: 'arm64';\n\n  /** Itanium. */\n  IA64: 'ia64';\n\n  /** 32-bit PowerPC. */\n  PPC32: 'ppc32';\n\n  /** 64-bit PowerPC. */\n  PPC64: 'ppc64';\n\n  /** 32-bit x86. */\n  X86: 'x86';\n};\n\n/**\n * The constant map of values for HostArchValues.\n * @deprecated Use the HOSTARCHVALUES_XXXXX constants rather than the HostArchValues.XXXXX for bundle minification.\n */\nexport const HostArchValues: HostArchValues =\n  /*#__PURE__*/ createConstMap<HostArchValues>([\n    TMP_HOSTARCHVALUES_AMD64,\n    TMP_HOSTARCHVALUES_ARM32,\n    TMP_HOSTARCHVALUES_ARM64,\n    TMP_HOSTARCHVALUES_IA64,\n    TMP_HOSTARCHVALUES_PPC32,\n    TMP_HOSTARCHVALUES_PPC64,\n    TMP_HOSTARCHVALUES_X86,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for OsTypeValues enum definition\n *\n * The operating system type.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_OSTYPEVALUES_WINDOWS = 'windows';\nconst TMP_OSTYPEVALUES_LINUX = 'linux';\nconst TMP_OSTYPEVALUES_DARWIN = 'darwin';\nconst TMP_OSTYPEVALUES_FREEBSD = 'freebsd';\nconst TMP_OSTYPEVALUES_NETBSD = 'netbsd';\nconst TMP_OSTYPEVALUES_OPENBSD = 'openbsd';\nconst TMP_OSTYPEVALUES_DRAGONFLYBSD = 'dragonflybsd';\nconst TMP_OSTYPEVALUES_HPUX = 'hpux';\nconst TMP_OSTYPEVALUES_AIX = 'aix';\nconst TMP_OSTYPEVALUES_SOLARIS = 'solaris';\nconst TMP_OSTYPEVALUES_Z_OS = 'z_os';\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_WINDOWS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_WINDOWS = TMP_OSTYPEVALUES_WINDOWS;\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_LINUX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_LINUX = TMP_OSTYPEVALUES_LINUX;\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_DARWIN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_DARWIN = TMP_OSTYPEVALUES_DARWIN;\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_FREEBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_FREEBSD = TMP_OSTYPEVALUES_FREEBSD;\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_NETBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_NETBSD = TMP_OSTYPEVALUES_NETBSD;\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_OPENBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_OPENBSD = TMP_OSTYPEVALUES_OPENBSD;\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_DRAGONFLYBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_DRAGONFLYBSD = TMP_OSTYPEVALUES_DRAGONFLYBSD;\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_HPUX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_HPUX = TMP_OSTYPEVALUES_HPUX;\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_AIX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_AIX = TMP_OSTYPEVALUES_AIX;\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_SOLARIS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_SOLARIS = TMP_OSTYPEVALUES_SOLARIS;\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_Z_OS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_Z_OS = TMP_OSTYPEVALUES_Z_OS;\n\n/**\n * Identifies the Values for OsTypeValues enum definition\n *\n * The operating system type.\n * @deprecated Use the OSTYPEVALUES_XXXXX constants rather than the OsTypeValues.XXXXX for bundle minification.\n */\nexport type OsTypeValues = {\n  /** Microsoft Windows. */\n  WINDOWS: 'windows';\n\n  /** Linux. */\n  LINUX: 'linux';\n\n  /** Apple Darwin. */\n  DARWIN: 'darwin';\n\n  /** FreeBSD. */\n  FREEBSD: 'freebsd';\n\n  /** NetBSD. */\n  NETBSD: 'netbsd';\n\n  /** OpenBSD. */\n  OPENBSD: 'openbsd';\n\n  /** DragonFly BSD. */\n  DRAGONFLYBSD: 'dragonflybsd';\n\n  /** HP-UX (Hewlett Packard Unix). */\n  HPUX: 'hpux';\n\n  /** AIX (Advanced Interactive eXecutive). */\n  AIX: 'aix';\n\n  /** Oracle Solaris. */\n  SOLARIS: 'solaris';\n\n  /** IBM z/OS. */\n  Z_OS: 'z_os';\n};\n\n/**\n * The constant map of values for OsTypeValues.\n * @deprecated Use the OSTYPEVALUES_XXXXX constants rather than the OsTypeValues.XXXXX for bundle minification.\n */\nexport const OsTypeValues: OsTypeValues =\n  /*#__PURE__*/ createConstMap<OsTypeValues>([\n    TMP_OSTYPEVALUES_WINDOWS,\n    TMP_OSTYPEVALUES_LINUX,\n    TMP_OSTYPEVALUES_DARWIN,\n    TMP_OSTYPEVALUES_FREEBSD,\n    TMP_OSTYPEVALUES_NETBSD,\n    TMP_OSTYPEVALUES_OPENBSD,\n    TMP_OSTYPEVALUES_DRAGONFLYBSD,\n    TMP_OSTYPEVALUES_HPUX,\n    TMP_OSTYPEVALUES_AIX,\n    TMP_OSTYPEVALUES_SOLARIS,\n    TMP_OSTYPEVALUES_Z_OS,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for TelemetrySdkLanguageValues enum definition\n *\n * The language of the telemetry SDK.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_CPP = 'cpp';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_DOTNET = 'dotnet';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_ERLANG = 'erlang';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_GO = 'go';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_JAVA = 'java';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_NODEJS = 'nodejs';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_PHP = 'php';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_PYTHON = 'python';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_RUBY = 'ruby';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_WEBJS = 'webjs';\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_CPP.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_CPP =\n  TMP_TELEMETRYSDKLANGUAGEVALUES_CPP;\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_DOTNET.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_DOTNET =\n  TMP_TELEMETRYSDKLANGUAGEVALUES_DOTNET;\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_ERLANG.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_ERLANG =\n  TMP_TELEMETRYSDKLANGUAGEVALUES_ERLANG;\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_GO.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_GO = TMP_TELEMETRYSDKLANGUAGEVALUES_GO;\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_JAVA.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_JAVA =\n  TMP_TELEMETRYSDKLANGUAGEVALUES_JAVA;\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_NODEJS.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_NODEJS =\n  TMP_TELEMETRYSDKLANGUAGEVALUES_NODEJS;\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_PHP.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_PHP =\n  TMP_TELEMETRYSDKLANGUAGEVALUES_PHP;\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_PYTHON.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_PYTHON =\n  TMP_TELEMETRYSDKLANGUAGEVALUES_PYTHON;\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_RUBY.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_RUBY =\n  TMP_TELEMETRYSDKLANGUAGEVALUES_RUBY;\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_WEBJS.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_WEBJS =\n  TMP_TELEMETRYSDKLANGUAGEVALUES_WEBJS;\n\n/**\n * Identifies the Values for TelemetrySdkLanguageValues enum definition\n *\n * The language of the telemetry SDK.\n * @deprecated Use the TELEMETRYSDKLANGUAGEVALUES_XXXXX constants rather than the TelemetrySdkLanguageValues.XXXXX for bundle minification.\n */\nexport type TelemetrySdkLanguageValues = {\n  /** cpp. */\n  CPP: 'cpp';\n\n  /** dotnet. */\n  DOTNET: 'dotnet';\n\n  /** erlang. */\n  ERLANG: 'erlang';\n\n  /** go. */\n  GO: 'go';\n\n  /** java. */\n  JAVA: 'java';\n\n  /** nodejs. */\n  NODEJS: 'nodejs';\n\n  /** php. */\n  PHP: 'php';\n\n  /** python. */\n  PYTHON: 'python';\n\n  /** ruby. */\n  RUBY: 'ruby';\n\n  /** webjs. */\n  WEBJS: 'webjs';\n};\n\n/**\n * The constant map of values for TelemetrySdkLanguageValues.\n * @deprecated Use the TELEMETRYSDKLANGUAGEVALUES_XXXXX constants rather than the TelemetrySdkLanguageValues.XXXXX for bundle minification.\n */\nexport const TelemetrySdkLanguageValues: TelemetrySdkLanguageValues =\n  /*#__PURE__*/ createConstMap<TelemetrySdkLanguageValues>([\n    TMP_TELEMETRYSDKLANGUAGEVALUES_CPP,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_DOTNET,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_ERLANG,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_GO,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_JAVA,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_NODEJS,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_PHP,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_PYTHON,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_RUBY,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_WEBJS,\n  ]);\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 14993, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14999, "column": 0}, "map": {"version":3,"file":"default-service-name.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/resources/src/platform/browser/default-service-name.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function defaultServiceName(): string {\n  return 'unknown_service';\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAEG,SAAU,kBAAkB;IAChC,OAAO,iBAAiB,CAAC;AAC3B,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15019, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15025, "column": 0}, "map": {"version":3,"file":"version.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/core/src/version.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '1.30.1';\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG,CAEH,4DAA4D;;;;AACrD,IAAM,OAAO,GAAG,QAAQ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15044, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15050, "column": 0}, "map": {"version":3,"file":"sdk-info.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/core/src/platform/browser/sdk-info.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VERSION } from '../../version';\nimport {\n  SEMRESATTRS_TELEMETRY_SDK_NAME,\n  SEMRESATTRS_PROCESS_RUNTIME_NAME,\n  SEMRESATTRS_TELEMETRY_SDK_LANGUAGE,\n  TELEMETRYSDKLANGUAGEVALUES_WEBJS,\n  SEMRESATTRS_TELEMETRY_SDK_VERSION,\n} from '@opentelemetry/semantic-conventions';\n\n/** Constants describing the SDK in use */\nexport const SDK_INFO = {\n  [SEMRESATTRS_TELEMETRY_SDK_NAME]: 'opentelemetry',\n  [SEMRESATTRS_PROCESS_RUNTIME_NAME]: 'browser',\n  [SEMRESATTRS_TELEMETRY_SDK_LANGUAGE]: TELEMETRYSDKLANGUAGEVALUES_WEBJS,\n  [SEMRESATTRS_TELEMETRY_SDK_VERSION]: VERSION,\n};\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAGH,OAAO,EACL,8BAA8B,EAC9B,gCAAgC,EAChC,kCAAkC,EAClC,gCAAgC,EAChC,iCAAiC,GAClC,MAAM,qCAAqC,CAAC;AAP7C,OAAO,EAAE,OAAO,EAAE,MAAM,eAAe,CAAC;;;;AAUjC,IAAM,QAAQ,GAAA,CAAA,KAAA,CAAA,GACnB,EAAA,sRAAC,iCAA8B,CAAA,GAAG,eAAe,EACjD,EAAA,CAAC,wTAAgC,CAAA,GAAG,SAAS,EAC7C,EAAA,sRAAC,qCAAkC,CAAA,wRAAG,mCAAgC,EACtE,EAAA,sRAAC,oCAAiC,CAAA,sOAAG,UAAO,KAC7C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15073, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15079, "column": 0}, "map": {"version":3,"file":"Resource.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/resources/src/Resource.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport {\n  SEMRESATTRS_SERVICE_NAME,\n  SEMRESATTRS_TELEMETRY_SDK_LANGUAGE,\n  SEMRESATTRS_TELEMETRY_SDK_NAME,\n  SEMRESATTRS_TELEMETRY_SDK_VERSION,\n} from '@opentelemetry/semantic-conventions';\nimport { SDK_INFO } from '@opentelemetry/core';\nimport { ResourceAttributes } from './types';\nimport { defaultServiceName } from './platform';\nimport { IResource } from './IResource';\n\n/**\n * A Resource describes the entity for which a signals (metrics or trace) are\n * collected.\n */\nexport class Resource implements IResource {\n  static readonly EMPTY = new Resource({});\n  private _syncAttributes?: ResourceAttributes;\n  private _asyncAttributesPromise?: Promise<ResourceAttributes>;\n  private _attributes?: ResourceAttributes;\n\n  /**\n   * Check if async attributes have resolved. This is useful to avoid awaiting\n   * waitForAsyncAttributes (which will introduce asynchronous behavior) when not necessary.\n   *\n   * @returns true if the resource \"attributes\" property is not yet settled to its final value\n   */\n  public asyncAttributesPending?: boolean;\n\n  /**\n   * Returns an empty Resource\n   */\n  static empty(): IResource {\n    return Resource.EMPTY;\n  }\n\n  /**\n   * Returns a Resource that identifies the SDK in use.\n   */\n  static default(): IResource {\n    return new Resource({\n      [SEMRESATTRS_SERVICE_NAME]: defaultServiceName(),\n      [SEMRESATTRS_TELEMETRY_SDK_LANGUAGE]:\n        SDK_INFO[SEMRESATTRS_TELEMETRY_SDK_LANGUAGE],\n      [SEMRESATTRS_TELEMETRY_SDK_NAME]:\n        SDK_INFO[SEMRESATTRS_TELEMETRY_SDK_NAME],\n      [SEMRESATTRS_TELEMETRY_SDK_VERSION]:\n        SDK_INFO[SEMRESATTRS_TELEMETRY_SDK_VERSION],\n    });\n  }\n\n  constructor(\n    /**\n     * A dictionary of attributes with string keys and values that provide\n     * information about the entity as numbers, strings or booleans\n     * TODO: Consider to add check/validation on attributes.\n     */\n    attributes: ResourceAttributes,\n    asyncAttributesPromise?: Promise<ResourceAttributes>\n  ) {\n    this._attributes = attributes;\n    this.asyncAttributesPending = asyncAttributesPromise != null;\n    this._syncAttributes = this._attributes ?? {};\n    this._asyncAttributesPromise = asyncAttributesPromise?.then(\n      asyncAttributes => {\n        this._attributes = Object.assign({}, this._attributes, asyncAttributes);\n        this.asyncAttributesPending = false;\n        return asyncAttributes;\n      },\n      err => {\n        diag.debug(\"a resource's async attributes promise rejected: %s\", err);\n        this.asyncAttributesPending = false;\n        return {};\n      }\n    );\n  }\n\n  get attributes(): ResourceAttributes {\n    if (this.asyncAttributesPending) {\n      diag.error(\n        'Accessing resource attributes before async attributes settled'\n      );\n    }\n\n    return this._attributes ?? {};\n  }\n\n  /**\n   * Returns a promise that will never be rejected. Resolves when all async attributes have finished being added to\n   * this Resource's attributes. This is useful in exporters to block until resource detection\n   * has finished.\n   */\n  async waitForAsyncAttributes?(): Promise<void> {\n    if (this.asyncAttributesPending) {\n      await this._asyncAttributesPromise;\n    }\n  }\n\n  /**\n   * Returns a new, merged {@link Resource} by merging the current Resource\n   * with the other Resource. In case of a collision, other Resource takes\n   * precedence.\n   *\n   * @param other the Resource that will be merged with this.\n   * @returns the newly merged Resource.\n   */\n  merge(other: IResource | null): IResource {\n    if (!other) return this;\n\n    // SpanAttributes from other resource overwrite attributes from this resource.\n    const mergedSyncAttributes = {\n      ...this._syncAttributes,\n      //Support for old resource implementation where _syncAttributes is not defined\n      ...((other as Resource)._syncAttributes ?? other.attributes),\n    };\n\n    if (\n      !this._asyncAttributesPromise &&\n      !(other as Resource)._asyncAttributesPromise\n    ) {\n      return new Resource(mergedSyncAttributes);\n    }\n\n    const mergedAttributesPromise = Promise.all([\n      this._asyncAttributesPromise,\n      (other as Resource)._asyncAttributesPromise,\n    ]).then(([thisAsyncAttributes, otherAsyncAttributes]) => {\n      return {\n        ...this._syncAttributes,\n        ...thisAsyncAttributes,\n        //Support for old resource implementation where _syncAttributes is not defined\n        ...((other as Resource)._syncAttributes ?? other.attributes),\n        ...otherAsyncAttributes,\n      };\n    });\n\n    return new Resource(mergedSyncAttributes, mergedAttributesPromise);\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 15361, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15367, "column": 0}, "map": {"version":3,"file":"NoopSpanProcessor.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/sdk-trace-base/src/export/NoopSpanProcessor.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '@opentelemetry/api';\nimport { ReadableSpan } from './ReadableSpan';\nimport { Span } from '../Span';\nimport { SpanProcessor } from '../SpanProcessor';\n\n/** No-op implementation of SpanProcessor */\nexport class NoopSpanProcessor implements SpanProcessor {\n  onStart(_span: Span, _context: Context): void {}\n  onEnd(_span: ReadableSpan): void {}\n  shutdown(): Promise<void> {\n    return Promise.resolve();\n  }\n  forceFlush(): Promise<void> {\n    return Promise.resolve();\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG,CAOH,0CAAA,EAA4C;;;AAC5C,IAAA,oBAAA;IAAA,SAAA,qBASA,CAAC;IARC,kBAAA,SAAA,CAAA,OAAO,GAAP,SAAQ,KAAW,EAAE,QAAiB,GAAS,CAAC;IAChD,kBAAA,SAAA,CAAA,KAAK,GAAL,SAAM,KAAmB,GAAS,CAAC;IACnC,kBAAA,SAAA,CAAA,QAAQ,GAAR;QACE,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IACD,kBAAA,SAAA,CAAA,UAAU,GAAV;QACE,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IACH,OAAA,iBAAC;AAAD,CAAC,AATD,IASC","ignoreList":[0]}},
    {"offset": {"line": 15398, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15404, "column": 0}, "map": {"version":3,"file":"ExportResult.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/core/src/ExportResult.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface ExportResult {\n  code: ExportResultCode;\n  error?: Error;\n}\n\nexport enum ExportResultCode {\n  SUCCESS,\n  FAILED,\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAOH,IAAY,gBAGX;AAHD,CAAA,SAAY,gBAAgB;IAC1B,gBAAA,CAAA,gBAAA,CAAA,UAAA,GAAA,EAAA,GAAA,SAAO,CAAA;IACP,gBAAA,CAAA,gBAAA,CAAA,SAAA,GAAA,EAAA,GAAA,QAAM,CAAA;AACR,CAAC,EAHW,gBAAgB,IAAA,CAAhB,gBAAgB,GAAA,CAAA,CAAA,GAG3B","ignoreList":[0]}},
    {"offset": {"line": 15426, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15432, "column": 0}, "map": {"version":3,"file":"timer-util.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/core/src/platform/browser/timer-util.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function unrefTimer(_timer: number): void {}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AACG,SAAU,UAAU,CAAC,MAAc,GAAS,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15450, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15456, "column": 0}, "map": {"version":3,"file":"promise.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/core/src/utils/promise.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<T> {\n  private _promise: Promise<T>;\n  private _resolve!: (val: T) => void;\n  private _reject!: (error: unknown) => void;\n  constructor() {\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  get promise() {\n    return this._promise;\n  }\n\n  resolve(val: T) {\n    this._resolve(val);\n  }\n\n  reject(err: unknown) {\n    this._reject(err);\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAEH,IAAA,WAAA;IAIE,SAAA;QAAA,IAAA,QAAA,IAAA,CAKC;QAJC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,SAAC,OAAO,EAAE,MAAM;YAC1C,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAA,cAAA,CAAI,SAAA,SAAA,EAAA,SAAO,EAAA;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;;;OAAA;IAED,SAAA,SAAA,CAAA,OAAO,GAAP,SAAQ,GAAM;QACZ,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IAED,SAAA,SAAA,CAAA,MAAM,GAAN,SAAO,GAAY;QACjB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACpB,CAAC;IACH,OAAA,QAAC;AAAD,CAAC,AAtBD,IAsBC","ignoreList":[0]}},
    {"offset": {"line": 15498, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15504, "column": 0}, "map": {"version":3,"file":"callback.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/core/src/utils/callback.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from './promise';\n\n/**\n * Bind the callback and only invoke the callback once regardless how many times `BindOnceFuture.call` is invoked.\n */\nexport class BindOnceFuture<\n  R,\n  This = unknown,\n  T extends (this: This, ...args: unknown[]) => R = () => R,\n> {\n  private _isCalled = false;\n  private _deferred = new Deferred<R>();\n  constructor(\n    private _callback: T,\n    private _that: This\n  ) {}\n\n  get isCalled() {\n    return this._isCalled;\n  }\n\n  get promise() {\n    return this._deferred.promise;\n  }\n\n  call(...args: Parameters<T>): Promise<R> {\n    if (!this._isCalled) {\n      this._isCalled = true;\n      try {\n        Promise.resolve(this._callback.call(this._that, ...args)).then(\n          val => this._deferred.resolve(val),\n          err => this._deferred.reject(err)\n        );\n      } catch (err) {\n        this._deferred.reject(err);\n      }\n    }\n    return this._deferred.promise;\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAEH,OAAO,EAAE,QAAQ,EAAE,MAAM,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAErC;;GAEG,CACH,IAAA,iBAAA;IAOE,SAAA,eACU,SAAY,EACZ,KAAW;QADX,IAAA,CAAA,SAAS,GAAT,SAAS,CAAG;QACZ,IAAA,CAAA,KAAK,GAAL,KAAK,CAAM;QAJb,IAAA,CAAA,SAAS,GAAG,KAAK,CAAC;QAClB,IAAA,CAAA,SAAS,GAAG,IAAI,uPAAQ,EAAK,CAAC;IAInC,CAAC;IAEJ,OAAA,cAAA,CAAI,eAAA,SAAA,EAAA,UAAQ,EAAA;aAAZ;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;;;OAAA;IAED,OAAA,cAAA,CAAI,eAAA,SAAA,EAAA,SAAO,EAAA;aAAX;YACE,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;QAChC,CAAC;;;OAAA;IAED,eAAA,SAAA,CAAA,IAAI,GAAJ;;QAAA,IAAA,QAAA,IAAA,CAaC;QAbI,IAAA,OAAA,EAAA,CAAsB;YAAtB,IAAA,KAAA,CAAsB,EAAtB,KAAA,UAAA,MAAsB,EAAtB,IAAsB,CAAA;YAAtB,IAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAAsB;;QACzB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI;gBACF,OAAO,CAAC,OAAO,CAAC,CAAA,KAAA,IAAI,CAAC,SAAS,CAAA,CAAC,IAAI,CAAA,KAAA,CAAA,IAAA,cAAA;oBAAC,IAAI,CAAC,KAAK;iBAAA,EAAA,OAAK,IAAI,GAAA,QAAE,CAAC,IAAI,CAC5D,SAAA,GAAG;oBAAI,OAAA,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC;gBAA3B,CAA2B,EAClC,SAAA,GAAG;oBAAI,OAAA,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC;gBAA1B,CAA0B,CAClC,CAAC;aACH,CAAC,OAAO,GAAG,EAAE;gBACZ,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aAC5B;SACF;QACD,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;IAChC,CAAC;IACH,OAAA,cAAC;AAAD,CAAC,AAlCD,IAkCC","ignoreList":[0]}},
    {"offset": {"line": 15601, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15607, "column": 0}, "map": {"version":3,"file":"BatchSpanProcessorBase.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/sdk-trace-base/src/export/BatchSpanProcessorBase.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { context, Context, diag, TraceFlags } from '@opentelemetry/api';\nimport {\n  BindOnceFuture,\n  ExportResultCode,\n  getEnv,\n  globalErrorHandler,\n  suppressTracing,\n  unrefTimer,\n} from '@opentelemetry/core';\nimport { Span } from '../Span';\nimport { SpanProcessor } from '../SpanProcessor';\nimport { BufferConfig } from '../types';\nimport { ReadableSpan } from './ReadableSpan';\nimport { SpanExporter } from './SpanExporter';\n\n/**\n * Implementation of the {@link SpanProcessor} that batches spans exported by\n * the SDK then pushes them to the exporter pipeline.\n */\nexport abstract class BatchSpanProcessorBase<T extends BufferConfig>\n  implements SpanProcessor\n{\n  private readonly _maxExportBatchSize: number;\n  private readonly _maxQueueSize: number;\n  private readonly _scheduledDelayMillis: number;\n  private readonly _exportTimeoutMillis: number;\n\n  private _isExporting = false;\n  private _finishedSpans: ReadableSpan[] = [];\n  private _timer: NodeJS.Timeout | undefined;\n  private _shutdownOnce: BindOnceFuture<void>;\n  private _droppedSpansCount: number = 0;\n\n  constructor(\n    private readonly _exporter: SpanExporter,\n    config?: T\n  ) {\n    const env = getEnv();\n    this._maxExportBatchSize =\n      typeof config?.maxExportBatchSize === 'number'\n        ? config.maxExportBatchSize\n        : env.OTEL_BSP_MAX_EXPORT_BATCH_SIZE;\n    this._maxQueueSize =\n      typeof config?.maxQueueSize === 'number'\n        ? config.maxQueueSize\n        : env.OTEL_BSP_MAX_QUEUE_SIZE;\n    this._scheduledDelayMillis =\n      typeof config?.scheduledDelayMillis === 'number'\n        ? config.scheduledDelayMillis\n        : env.OTEL_BSP_SCHEDULE_DELAY;\n    this._exportTimeoutMillis =\n      typeof config?.exportTimeoutMillis === 'number'\n        ? config.exportTimeoutMillis\n        : env.OTEL_BSP_EXPORT_TIMEOUT;\n\n    this._shutdownOnce = new BindOnceFuture(this._shutdown, this);\n\n    if (this._maxExportBatchSize > this._maxQueueSize) {\n      diag.warn(\n        'BatchSpanProcessor: maxExportBatchSize must be smaller or equal to maxQueueSize, setting maxExportBatchSize to match maxQueueSize'\n      );\n      this._maxExportBatchSize = this._maxQueueSize;\n    }\n  }\n\n  forceFlush(): Promise<void> {\n    if (this._shutdownOnce.isCalled) {\n      return this._shutdownOnce.promise;\n    }\n    return this._flushAll();\n  }\n\n  // does nothing.\n  onStart(_span: Span, _parentContext: Context): void {}\n\n  onEnd(span: ReadableSpan): void {\n    if (this._shutdownOnce.isCalled) {\n      return;\n    }\n\n    if ((span.spanContext().traceFlags & TraceFlags.SAMPLED) === 0) {\n      return;\n    }\n\n    this._addToBuffer(span);\n  }\n\n  shutdown(): Promise<void> {\n    return this._shutdownOnce.call();\n  }\n\n  private _shutdown() {\n    return Promise.resolve()\n      .then(() => {\n        return this.onShutdown();\n      })\n      .then(() => {\n        return this._flushAll();\n      })\n      .then(() => {\n        return this._exporter.shutdown();\n      });\n  }\n\n  /** Add a span in the buffer. */\n  private _addToBuffer(span: ReadableSpan) {\n    if (this._finishedSpans.length >= this._maxQueueSize) {\n      // limit reached, drop span\n\n      if (this._droppedSpansCount === 0) {\n        diag.debug('maxQueueSize reached, dropping spans');\n      }\n      this._droppedSpansCount++;\n\n      return;\n    }\n\n    if (this._droppedSpansCount > 0) {\n      // some spans were dropped, log once with count of spans dropped\n      diag.warn(\n        `Dropped ${this._droppedSpansCount} spans because maxQueueSize reached`\n      );\n      this._droppedSpansCount = 0;\n    }\n\n    this._finishedSpans.push(span);\n    this._maybeStartTimer();\n  }\n\n  /**\n   * Send all spans to the exporter respecting the batch size limit\n   * This function is used only on forceFlush or shutdown,\n   * for all other cases _flush should be used\n   * */\n  private _flushAll(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const promises = [];\n      // calculate number of batches\n      const count = Math.ceil(\n        this._finishedSpans.length / this._maxExportBatchSize\n      );\n      for (let i = 0, j = count; i < j; i++) {\n        promises.push(this._flushOneBatch());\n      }\n      Promise.all(promises)\n        .then(() => {\n          resolve();\n        })\n        .catch(reject);\n    });\n  }\n\n  private _flushOneBatch(): Promise<void> {\n    this._clearTimer();\n    if (this._finishedSpans.length === 0) {\n      return Promise.resolve();\n    }\n    return new Promise((resolve, reject) => {\n      const timer = setTimeout(() => {\n        // don't wait anymore for export, this way the next batch can start\n        reject(new Error('Timeout'));\n      }, this._exportTimeoutMillis);\n      // prevent downstream exporter calls from generating spans\n      context.with(suppressTracing(context.active()), () => {\n        // Reset the finished spans buffer here because the next invocations of the _flush method\n        // could pass the same finished spans to the exporter if the buffer is cleared\n        // outside the execution of this callback.\n        let spans: ReadableSpan[];\n        if (this._finishedSpans.length <= this._maxExportBatchSize) {\n          spans = this._finishedSpans;\n          this._finishedSpans = [];\n        } else {\n          spans = this._finishedSpans.splice(0, this._maxExportBatchSize);\n        }\n\n        const doExport = () =>\n          this._exporter.export(spans, result => {\n            clearTimeout(timer);\n            if (result.code === ExportResultCode.SUCCESS) {\n              resolve();\n            } else {\n              reject(\n                result.error ??\n                  new Error('BatchSpanProcessor: span export failed')\n              );\n            }\n          });\n\n        let pendingResources: Array<Promise<void>> | null = null;\n        for (let i = 0, len = spans.length; i < len; i++) {\n          const span = spans[i];\n          if (\n            span.resource.asyncAttributesPending &&\n            span.resource.waitForAsyncAttributes\n          ) {\n            pendingResources ??= [];\n            pendingResources.push(span.resource.waitForAsyncAttributes());\n          }\n        }\n\n        // Avoid scheduling a promise to make the behavior more predictable and easier to test\n        if (pendingResources === null) {\n          doExport();\n        } else {\n          Promise.all(pendingResources).then(doExport, err => {\n            globalErrorHandler(err);\n            reject(err);\n          });\n        }\n      });\n    });\n  }\n\n  private _maybeStartTimer() {\n    if (this._isExporting) return;\n    const flush = () => {\n      this._isExporting = true;\n      this._flushOneBatch()\n        .finally(() => {\n          this._isExporting = false;\n          if (this._finishedSpans.length > 0) {\n            this._clearTimer();\n            this._maybeStartTimer();\n          }\n        })\n        .catch(e => {\n          this._isExporting = false;\n          globalErrorHandler(e);\n        });\n    };\n    // we only wait if the queue doesn't have enough elements yet\n    if (this._finishedSpans.length >= this._maxExportBatchSize) {\n      return flush();\n    }\n    if (this._timer !== undefined) return;\n    this._timer = setTimeout(() => flush(), this._scheduledDelayMillis);\n    unrefTimer(this._timer);\n  }\n\n  private _clearTimer() {\n    if (this._timer !== undefined) {\n      clearTimeout(this._timer);\n      this._timer = undefined;\n    }\n  }\n\n  protected abstract onShutdown(): void;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 15808, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15814, "column": 0}, "map": {"version":3,"file":"BatchSpanProcessor.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/sdk-trace-base/src/platform/browser/export/BatchSpanProcessor.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BatchSpanProcessorBase } from '../../../export/BatchSpanProcessorBase';\nimport { SpanExporter } from '../../../export/SpanExporter';\nimport { BatchSpanProcessorBrowserConfig } from '../../../types';\nimport { globalErrorHandler } from '@opentelemetry/core';\n\nexport class BatchSpanProcessor extends BatchSpanProcessorBase<BatchSpanProcessorBrowserConfig> {\n  private _visibilityChangeListener?: () => void;\n  private _pageHideListener?: () => void;\n\n  constructor(\n    _exporter: SpanExporter,\n    config?: BatchSpanProcessorBrowserConfig\n  ) {\n    super(_exporter, config);\n    this.onInit(config);\n  }\n\n  private onInit(config?: BatchSpanProcessorBrowserConfig): void {\n    if (\n      config?.disableAutoFlushOnDocumentHide !== true &&\n      typeof document !== 'undefined'\n    ) {\n      this._visibilityChangeListener = () => {\n        if (document.visibilityState === 'hidden') {\n          this.forceFlush().catch(error => {\n            globalErrorHandler(error);\n          });\n        }\n      };\n      this._pageHideListener = () => {\n        this.forceFlush().catch(error => {\n          globalErrorHandler(error);\n        });\n      };\n      document.addEventListener(\n        'visibilitychange',\n        this._visibilityChangeListener\n      );\n\n      // use 'pagehide' event as a fallback for Safari; see https://bugs.webkit.org/show_bug.cgi?id=116769\n      document.addEventListener('pagehide', this._pageHideListener);\n    }\n  }\n\n  protected onShutdown(): void {\n    if (typeof document !== 'undefined') {\n      if (this._visibilityChangeListener) {\n        document.removeEventListener(\n          'visibilitychange',\n          this._visibilityChangeListener\n        );\n      }\n      if (this._pageHideListener) {\n        document.removeEventListener('pagehide', this._pageHideListener);\n      }\n    }\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAKH,OAAO,EAAE,kBAAkB,EAAE,MAAM,qBAAqB,CAAC;AAHzD,OAAO,EAAE,sBAAsB,EAAE,MAAM,wCAAwC,CAAC;;;;;;;;;;;;;;;;;;;;;;;AAKhF,IAAA,qBAAA,SAAA,MAAA;IAAwC,UAAA,oBAAA,QAAuD;IAI7F,SAAA,mBACE,SAAuB,EACvB,MAAwC;QAF1C,IAAA,QAIE,OAAA,IAAA,CAAA,IAAA,EAAM,SAAS,EAAE,MAAM,CAAC,IAAA,IAAA,CAEzB;QADC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;;IACtB,CAAC;IAEO,mBAAA,SAAA,CAAA,MAAM,GAAd,SAAe,MAAwC;QAAvD,IAAA,QAAA,IAAA,CAyBC;QAxBC,IACE,CAAA,MAAM,KAAA,QAAN,MAAM,KAAA,KAAA,IAAA,KAAA,IAAN,MAAM,CAAE,8BAA8B,MAAK,IAAI,IAC/C,OAAO,QAAQ,KAAK,WAAW,EAC/B;YACA,IAAI,CAAC,yBAAyB,GAAG;gBAC/B,IAAI,QAAQ,CAAC,eAAe,KAAK,QAAQ,EAAE;oBACzC,KAAI,CAAC,UAAU,EAAE,CAAC,KAAK,CAAC,SAAA,KAAK;4RAC3B,qBAAA,AAAkB,EAAC,KAAK,CAAC,CAAC;oBAC5B,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC;YACF,IAAI,CAAC,iBAAiB,GAAG;gBACvB,KAAI,CAAC,UAAU,EAAE,CAAC,KAAK,CAAC,SAAA,KAAK;oBAC3B,yRAAA,AAAkB,EAAC,KAAK,CAAC,CAAC;gBAC5B,CAAC,CAAC,CAAC;YACL,CAAC,CAAC;YACF,QAAQ,CAAC,gBAAgB,CACvB,kBAAkB,EAClB,IAAI,CAAC,yBAAyB,CAC/B,CAAC;YAEF,oGAAoG;YACpG,QAAQ,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;SAC/D;IACH,CAAC;IAES,mBAAA,SAAA,CAAA,UAAU,GAApB;QACE,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;YACnC,IAAI,IAAI,CAAC,yBAAyB,EAAE;gBAClC,QAAQ,CAAC,mBAAmB,CAC1B,kBAAkB,EAClB,IAAI,CAAC,yBAAyB,CAC/B,CAAC;aACH;YACD,IAAI,IAAI,CAAC,iBAAiB,EAAE;gBAC1B,QAAQ,CAAC,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;aAClE;SACF;IACH,CAAC;IACH,OAAA,kBAAC;AAAD,CAAC,AApDD,6QAAwC,yBAAsB,GAoD7D","ignoreList":[0]}},
    {"offset": {"line": 15896, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15902, "column": 0}, "map": {"version":3,"file":"BasicTracerProvider.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/sdk-trace-base/src/BasicTracerProvider.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  context,\n  diag,\n  propagation,\n  TextMapPropagator,\n  trace,\n  TracerProvider,\n} from '@opentelemetry/api';\nimport {\n  CompositePropagator,\n  W3CBaggagePropagator,\n  W3CTraceContextPropagator,\n  getEnv,\n  merge,\n} from '@opentelemetry/core';\nimport { IResource, Resource } from '@opentelemetry/resources';\nimport { SpanProcessor } from './SpanProcessor';\nimport { Tracer } from './Tracer';\nimport { loadDefaultConfig } from './config';\nimport { MultiSpanProcessor } from './MultiSpanProcessor';\nimport { NoopSpanProcessor } from './export/NoopSpanProcessor';\nimport { SDKRegistrationConfig, TracerConfig } from './types';\nimport { SpanExporter } from './export/SpanExporter';\nimport { BatchSpanProcessor } from './platform';\nimport { reconfigureLimits } from './utility';\n\nexport type PROPAGATOR_FACTORY = () => TextMapPropagator;\nexport type EXPORTER_FACTORY = () => SpanExporter;\n\nexport enum ForceFlushState {\n  'resolved',\n  'timeout',\n  'error',\n  'unresolved',\n}\n\n/**\n * This class represents a basic tracer provider which platform libraries can extend\n */\nexport class BasicTracerProvider implements TracerProvider {\n  protected static readonly _registeredPropagators = new Map<\n    string,\n    PROPAGATOR_FACTORY\n  >([\n    ['tracecontext', () => new W3CTraceContextPropagator()],\n    ['baggage', () => new W3CBaggagePropagator()],\n  ]);\n\n  protected static readonly _registeredExporters = new Map<\n    string,\n    EXPORTER_FACTORY\n  >();\n\n  private readonly _config: TracerConfig;\n  private readonly _registeredSpanProcessors: SpanProcessor[] = [];\n  private readonly _tracers: Map<string, Tracer> = new Map();\n\n  activeSpanProcessor: SpanProcessor;\n  readonly resource: IResource;\n\n  constructor(config: TracerConfig = {}) {\n    const mergedConfig = merge(\n      {},\n      loadDefaultConfig(),\n      reconfigureLimits(config)\n    );\n    this.resource = mergedConfig.resource ?? Resource.empty();\n\n    if (mergedConfig.mergeResourceWithDefaults) {\n      this.resource = Resource.default().merge(this.resource);\n    }\n\n    this._config = Object.assign({}, mergedConfig, {\n      resource: this.resource,\n    });\n\n    if (config.spanProcessors?.length) {\n      this._registeredSpanProcessors = [...config.spanProcessors];\n      this.activeSpanProcessor = new MultiSpanProcessor(\n        this._registeredSpanProcessors\n      );\n    } else {\n      const defaultExporter = this._buildExporterFromEnv();\n      if (defaultExporter !== undefined) {\n        const batchProcessor = new BatchSpanProcessor(defaultExporter);\n        this.activeSpanProcessor = batchProcessor;\n      } else {\n        this.activeSpanProcessor = new NoopSpanProcessor();\n      }\n    }\n  }\n\n  getTracer(\n    name: string,\n    version?: string,\n    options?: { schemaUrl?: string }\n  ): Tracer {\n    const key = `${name}@${version || ''}:${options?.schemaUrl || ''}`;\n    if (!this._tracers.has(key)) {\n      this._tracers.set(\n        key,\n        new Tracer(\n          { name, version, schemaUrl: options?.schemaUrl },\n          this._config,\n          this\n        )\n      );\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this._tracers.get(key)!;\n  }\n\n  /**\n   * @deprecated please use {@link TracerConfig} spanProcessors property\n   * Adds a new {@link SpanProcessor} to this tracer.\n   * @param spanProcessor the new SpanProcessor to be added.\n   */\n  addSpanProcessor(spanProcessor: SpanProcessor): void {\n    if (this._registeredSpanProcessors.length === 0) {\n      // since we might have enabled by default a batchProcessor, we disable it\n      // before adding the new one\n      this.activeSpanProcessor\n        .shutdown()\n        .catch(err =>\n          diag.error(\n            'Error while trying to shutdown current span processor',\n            err\n          )\n        );\n    }\n    this._registeredSpanProcessors.push(spanProcessor);\n    this.activeSpanProcessor = new MultiSpanProcessor(\n      this._registeredSpanProcessors\n    );\n  }\n\n  getActiveSpanProcessor(): SpanProcessor {\n    return this.activeSpanProcessor;\n  }\n\n  /**\n   * Register this TracerProvider for use with the OpenTelemetry API.\n   * Undefined values may be replaced with defaults, and\n   * null values will be skipped.\n   *\n   * @param config Configuration object for SDK registration\n   */\n  register(config: SDKRegistrationConfig = {}): void {\n    trace.setGlobalTracerProvider(this);\n    if (config.propagator === undefined) {\n      config.propagator = this._buildPropagatorFromEnv();\n    }\n\n    if (config.contextManager) {\n      context.setGlobalContextManager(config.contextManager);\n    }\n\n    if (config.propagator) {\n      propagation.setGlobalPropagator(config.propagator);\n    }\n  }\n\n  forceFlush(): Promise<void> {\n    const timeout = this._config.forceFlushTimeoutMillis;\n    const promises = this._registeredSpanProcessors.map(\n      (spanProcessor: SpanProcessor) => {\n        return new Promise(resolve => {\n          let state: ForceFlushState;\n          const timeoutInterval = setTimeout(() => {\n            resolve(\n              new Error(\n                `Span processor did not completed within timeout period of ${timeout} ms`\n              )\n            );\n            state = ForceFlushState.timeout;\n          }, timeout);\n\n          spanProcessor\n            .forceFlush()\n            .then(() => {\n              clearTimeout(timeoutInterval);\n              if (state !== ForceFlushState.timeout) {\n                state = ForceFlushState.resolved;\n                resolve(state);\n              }\n            })\n            .catch(error => {\n              clearTimeout(timeoutInterval);\n              state = ForceFlushState.error;\n              resolve(error);\n            });\n        });\n      }\n    );\n\n    return new Promise<void>((resolve, reject) => {\n      Promise.all(promises)\n        .then(results => {\n          const errors = results.filter(\n            result => result !== ForceFlushState.resolved\n          );\n          if (errors.length > 0) {\n            reject(errors);\n          } else {\n            resolve();\n          }\n        })\n        .catch(error => reject([error]));\n    });\n  }\n\n  shutdown(): Promise<void> {\n    return this.activeSpanProcessor.shutdown();\n  }\n\n  /**\n   * TS cannot yet infer the type of this.constructor:\n   * https://github.com/Microsoft/TypeScript/issues/3841#issuecomment-337560146\n   * There is no need to override either of the getters in your child class.\n   * The type of the registered component maps should be the same across all\n   * classes in the inheritance tree.\n   */\n  protected _getPropagator(name: string): TextMapPropagator | undefined {\n    return (\n      this.constructor as typeof BasicTracerProvider\n    )._registeredPropagators.get(name)?.();\n  }\n\n  protected _getSpanExporter(name: string): SpanExporter | undefined {\n    return (\n      this.constructor as typeof BasicTracerProvider\n    )._registeredExporters.get(name)?.();\n  }\n\n  protected _buildPropagatorFromEnv(): TextMapPropagator | undefined {\n    // per spec, propagators from env must be deduplicated\n    const uniquePropagatorNames = Array.from(\n      new Set(getEnv().OTEL_PROPAGATORS)\n    );\n\n    const propagators = uniquePropagatorNames.map(name => {\n      const propagator = this._getPropagator(name);\n      if (!propagator) {\n        diag.warn(\n          `Propagator \"${name}\" requested through environment variable is unavailable.`\n        );\n      }\n\n      return propagator;\n    });\n    const validPropagators = propagators.reduce<TextMapPropagator[]>(\n      (list, item) => {\n        if (item) {\n          list.push(item);\n        }\n        return list;\n      },\n      []\n    );\n\n    if (validPropagators.length === 0) {\n      return;\n    } else if (uniquePropagatorNames.length === 1) {\n      return validPropagators[0];\n    } else {\n      return new CompositePropagator({\n        propagators: validPropagators,\n      });\n    }\n  }\n\n  protected _buildExporterFromEnv(): SpanExporter | undefined {\n    const exporterName = getEnv().OTEL_TRACES_EXPORTER;\n    if (exporterName === 'none' || exporterName === '') return;\n    const exporter = this._getSpanExporter(exporterName);\n    if (!exporter) {\n      diag.error(\n        `Exporter \"${exporterName}\" requested through environment variable is unavailable.`\n      );\n    }\n    return exporter;\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 16170, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16176, "column": 0}, "map": {"version":3,"file":"ConsoleSpanExporter.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/sdk-trace-base/src/export/ConsoleSpanExporter.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SpanExporter } from './SpanExporter';\nimport { ReadableSpan } from './ReadableSpan';\nimport {\n  ExportResult,\n  ExportResultCode,\n  hrTimeToMicroseconds,\n} from '@opentelemetry/core';\n\n/**\n * This is implementation of {@link SpanExporter} that prints spans to the\n * console. This class can be used for diagnostic purposes.\n *\n * NOTE: This {@link SpanExporter} is intended for diagnostics use only, output rendered to the console may change at any time.\n */\n\n/* eslint-disable no-console */\nexport class ConsoleSpanExporter implements SpanExporter {\n  /**\n   * Export spans.\n   * @param spans\n   * @param resultCallback\n   */\n  export(\n    spans: ReadableSpan[],\n    resultCallback: (result: ExportResult) => void\n  ): void {\n    return this._sendSpans(spans, resultCallback);\n  }\n\n  /**\n   * Shutdown the exporter.\n   */\n  shutdown(): Promise<void> {\n    this._sendSpans([]);\n    return this.forceFlush();\n  }\n\n  /**\n   * Exports any pending spans in exporter\n   */\n  forceFlush(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  /**\n   * converts span info into more readable format\n   * @param span\n   */\n  private _exportInfo(span: ReadableSpan) {\n    return {\n      resource: {\n        attributes: span.resource.attributes,\n      },\n      instrumentationScope: span.instrumentationLibrary,\n      traceId: span.spanContext().traceId,\n      parentId: span.parentSpanId,\n      traceState: span.spanContext().traceState?.serialize(),\n      name: span.name,\n      id: span.spanContext().spanId,\n      kind: span.kind,\n      timestamp: hrTimeToMicroseconds(span.startTime),\n      duration: hrTimeToMicroseconds(span.duration),\n      attributes: span.attributes,\n      status: span.status,\n      events: span.events,\n      links: span.links,\n    };\n  }\n\n  /**\n   * Showing spans in console\n   * @param spans\n   * @param done\n   */\n  private _sendSpans(\n    spans: ReadableSpan[],\n    done?: (result: ExportResult) => void\n  ): void {\n    for (const span of spans) {\n      console.dir(this._exportInfo(span), { depth: 3 });\n    }\n    if (done) {\n      return done({ code: ExportResultCode.SUCCESS });\n    }\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAIH,OAAO,EAEL,gBAAgB,EAChB,oBAAoB,GACrB,MAAM,qBAAqB,CAAC;;;;;;;;;;;;;;;;;AAE7B;;;;;GAKG,CAEH,6BAAA,EAA+B,CAC/B,IAAA,sBAAA;IAAA,SAAA,uBAqEA,CAAC;IApEC;;;;OAIG,CACH,oBAAA,SAAA,CAAA,MAAM,GAAN,SACE,KAAqB,EACrB,cAA8C;QAE9C,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;IAChD,CAAC;IAED;;OAEG,CACH,oBAAA,SAAA,CAAA,QAAQ,GAAR;QACE,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QACpB,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;IAC3B,CAAC;IAED;;OAEG,CACH,oBAAA,SAAA,CAAA,UAAU,GAAV;QACE,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAED;;;OAGG,CACK,oBAAA,SAAA,CAAA,WAAW,GAAnB,SAAoB,IAAkB;;QACpC,OAAO;YACL,QAAQ,EAAE;gBACR,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU;aACrC;YACD,oBAAoB,EAAE,IAAI,CAAC,sBAAsB;YACjD,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO;YACnC,QAAQ,EAAE,IAAI,CAAC,YAAY;YAC3B,UAAU,EAAE,CAAA,KAAA,IAAI,CAAC,WAAW,EAAE,CAAC,UAAU,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,SAAS,EAAE;YACtD,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,EAAE,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM;YAC7B,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,SAAS,gPAAE,uBAAA,AAAoB,EAAC,IAAI,CAAC,SAAS,CAAC;YAC/C,QAAQ,MAAE,iQAAA,AAAoB,EAAC,IAAI,CAAC,QAAQ,CAAC;YAC7C,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC;IACJ,CAAC;IAED;;;;OAIG,CACK,oBAAA,SAAA,CAAA,UAAU,GAAlB,SACE,KAAqB,EACrB,IAAqC;;;YAErC,IAAmB,IAAA,UAAA,SAAA,KAAK,CAAA,EAAA,YAAA,QAAA,IAAA,EAAA,EAAA,CAAA,UAAA,IAAA,EAAA,YAAA,QAAA,IAAA,GAAE;gBAArB,IAAM,IAAI,GAAA,UAAA,KAAA;gBACb,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;oBAAE,KAAK,EAAE,CAAC;gBAAA,CAAE,CAAC,CAAC;aACnD;;;;;;;;;;;;QACD,IAAI,IAAI,EAAE;YACR,OAAO,IAAI,CAAC;gBAAE,IAAI,0OAAE,mBAAgB,CAAC,OAAO;YAAA,CAAE,CAAC,CAAC;SACjD;IACH,CAAC;IACH,OAAA,mBAAC;AAAD,CAAC,AArED,IAqEC","ignoreList":[0]}},
    {"offset": {"line": 16293, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16299, "column": 0}, "map": {"version":3,"file":"InMemorySpanExporter.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/sdk-trace-base/src/export/InMemorySpanExporter.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SpanExporter } from './SpanExporter';\nimport { ReadableSpan } from './ReadableSpan';\nimport { ExportResult, ExportResultCode } from '@opentelemetry/core';\n\n/**\n * This class can be used for testing purposes. It stores the exported spans\n * in a list in memory that can be retrieved using the `getFinishedSpans()`\n * method.\n */\nexport class InMemorySpanExporter implements SpanExporter {\n  private _finishedSpans: ReadableSpan[] = [];\n  /**\n   * Indicates if the exporter has been \"shutdown.\"\n   * When false, exported spans will not be stored in-memory.\n   */\n  protected _stopped = false;\n\n  export(\n    spans: ReadableSpan[],\n    resultCallback: (result: ExportResult) => void\n  ): void {\n    if (this._stopped)\n      return resultCallback({\n        code: ExportResultCode.FAILED,\n        error: new Error('Exporter has been stopped'),\n      });\n    this._finishedSpans.push(...spans);\n\n    setTimeout(() => resultCallback({ code: ExportResultCode.SUCCESS }), 0);\n  }\n\n  shutdown(): Promise<void> {\n    this._stopped = true;\n    this._finishedSpans = [];\n    return this.forceFlush();\n  }\n\n  /**\n   * Exports any pending spans in the exporter\n   */\n  forceFlush(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  reset(): void {\n    this._finishedSpans = [];\n  }\n\n  getFinishedSpans(): ReadableSpan[] {\n    return this._finishedSpans;\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAIH,OAAO,EAAgB,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAErE;;;;GAIG,CACH,IAAA,uBAAA;IAAA,SAAA;QACU,IAAA,CAAA,cAAc,GAAmB,EAAE,CAAC;QAC5C;;;WAGG,CACO,IAAA,CAAA,QAAQ,GAAG,KAAK,CAAC;IAoC7B,CAAC;IAlCC,qBAAA,SAAA,CAAA,MAAM,GAAN,SACE,KAAqB,EACrB,cAA8C;;QAE9C,IAAI,IAAI,CAAC,QAAQ,EACf,OAAO,cAAc,CAAC;YACpB,IAAI,0OAAE,mBAAgB,CAAC,MAAM;YAC7B,KAAK,EAAE,IAAI,KAAK,CAAC,2BAA2B,CAAC;SAC9C,CAAC,CAAC;QACL,CAAA,KAAA,IAAI,CAAC,cAAc,CAAA,CAAC,IAAI,CAAA,KAAA,CAAA,IAAA,cAAA,EAAA,EAAA,OAAI,KAAK,GAAA,QAAE;QAEnC,UAAU,CAAC;YAAM,OAAA,cAAc,CAAC;gBAAE,IAAI,0OAAE,mBAAgB,CAAC,OAAO;YAAA,CAAE,CAAC;QAAlD,CAAkD,EAAE,CAAC,CAAC,CAAC;IAC1E,CAAC;IAED,qBAAA,SAAA,CAAA,QAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;IAC3B,CAAC;IAED;;OAEG,CACH,qBAAA,SAAA,CAAA,UAAU,GAAV;QACE,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAED,qBAAA,SAAA,CAAA,KAAK,GAAL;QACE,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;IAC3B,CAAC;IAED,qBAAA,SAAA,CAAA,gBAAgB,GAAhB;QACE,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IACH,OAAA,oBAAC;AAAD,CAAC,AA1CD,IA0CC","ignoreList":[0]}},
    {"offset": {"line": 16391, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16397, "column": 0}, "map": {"version":3,"file":"exporter.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/core/src/internal/exporter.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { context } from '@opentelemetry/api';\nimport { ExportResult } from '../ExportResult';\nimport { suppressTracing } from '../trace/suppress-tracing';\n\nexport interface Exporter<T> {\n  export(arg: T, resultCallback: (result: ExportResult) => void): void;\n}\n\n/**\n * @internal\n * Shared functionality used by Exporters while exporting data, including suppression of Traces.\n */\nexport function _export<T>(\n  exporter: Exporter<T>,\n  arg: T\n): Promise<ExportResult> {\n  return new Promise(resolve => {\n    // prevent downstream exporter calls from generating spans\n    context.with(suppressTracing(context.active()), () => {\n      exporter.export(arg, (result: ExportResult) => {\n        resolve(result);\n      });\n    });\n  });\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAEH,OAAO,EAAE,OAAO,EAAE,MAAM,oBAAoB,CAAC;AAE7C,OAAO,EAAE,eAAe,EAAE,MAAM,2BAA2B,CAAC;;;AAUtD,SAAU,OAAO,CACrB,QAAqB,EACrB,GAAM;IAEN,OAAO,IAAI,OAAO,CAAC,SAAA,OAAO;QACxB,0DAA0D;yLAC1D,UAAO,CAAC,IAAI,6PAAC,kBAAA,AAAe,mLAAC,UAAO,CAAC,MAAM,EAAE,CAAC,EAAE;YAC9C,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,SAAC,MAAoB;gBACxC,OAAO,CAAC,MAAM,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16428, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16434, "column": 0}, "map": {"version":3,"file":"index.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/core/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { W3CBaggagePropagator } from './baggage/propagation/W3CBaggagePropagator';\nexport { AnchoredClock, Clock } from './common/anchored-clock';\nexport {\n  isAttributeKey,\n  isAttributeValue,\n  sanitizeAttributes,\n} from './common/attributes';\nexport {\n  globalErrorHandler,\n  setGlobalErrorHandler,\n} from './common/global-error-handler';\nexport { loggingErrorHandler } from './common/logging-error-handler';\nexport {\n  addHrTimes,\n  getTimeOrigin,\n  hrTime,\n  hrTimeDuration,\n  hrTimeToMicroseconds,\n  hrTimeToMilliseconds,\n  hrTimeToNanoseconds,\n  hrTimeToTimeStamp,\n  isTimeInput,\n  isTimeInputHrTime,\n  millisToHrTime,\n  timeInputToHrTime,\n} from './common/time';\nexport {\n  ErrorHandler,\n  InstrumentationLibrary,\n  InstrumentationScope,\n  ShimWrapped,\n  TimeOriginLegacy,\n} from './common/types';\nexport { hexToBinary } from './common/hex-to-binary';\nexport { ExportResult, ExportResultCode } from './ExportResult';\nimport {\n  getKeyPairs,\n  serializeKeyPairs,\n  parseKeyPairsIntoRecord,\n  parsePairKeyValue,\n} from './baggage/utils';\nexport const baggageUtils = {\n  getKeyPairs,\n  serializeKeyPairs,\n  parseKeyPairsIntoRecord,\n  parsePairKeyValue,\n};\nexport {\n  RandomIdGenerator,\n  SDK_INFO,\n  _globalThis,\n  getEnv,\n  getEnvWithoutDefaults,\n  hexToBase64,\n  otperformance,\n  unrefTimer,\n} from './platform';\nexport {\n  CompositePropagator,\n  CompositePropagatorConfig,\n} from './propagation/composite';\nexport {\n  TRACE_PARENT_HEADER,\n  TRACE_STATE_HEADER,\n  W3CTraceContextPropagator,\n  parseTraceParent,\n} from './trace/W3CTraceContextPropagator';\nexport { IdGenerator } from './trace/IdGenerator';\nexport {\n  RPCMetadata,\n  RPCType,\n  deleteRPCMetadata,\n  getRPCMetadata,\n  setRPCMetadata,\n} from './trace/rpc-metadata';\nexport { AlwaysOffSampler } from './trace/sampler/AlwaysOffSampler';\nexport { AlwaysOnSampler } from './trace/sampler/AlwaysOnSampler';\nexport { ParentBasedSampler } from './trace/sampler/ParentBasedSampler';\nexport { TraceIdRatioBasedSampler } from './trace/sampler/TraceIdRatioBasedSampler';\nexport {\n  isTracingSuppressed,\n  suppressTracing,\n  unsuppressTracing,\n} from './trace/suppress-tracing';\nexport { TraceState } from './trace/TraceState';\nexport {\n  DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  DEFAULT_ENVIRONMENT,\n  DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT,\n  DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT,\n  ENVIRONMENT,\n  RAW_ENVIRONMENT,\n  parseEnvironment,\n} from './utils/environment';\nexport { merge } from './utils/merge';\nexport { TracesSamplerValues } from './utils/sampling';\nexport { TimeoutError, callWithTimeout } from './utils/timeout';\nexport { isUrlIgnored, urlMatches } from './utils/url';\nexport { isWrapped } from './utils/wrap';\nexport { BindOnceFuture } from './utils/callback';\nexport { VERSION } from './version';\nimport { _export } from './internal/exporter';\nexport const internal = {\n  _export,\n};\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;;AAqCH,OAAO,EACL,WAAW,EACX,iBAAiB,EACjB,uBAAuB,EACvB,iBAAiB,GAClB,MAAM,iBAAiB,CAAC;AA8DzB,OAAO,EAAE,OAAO,EAAE,MAAM,qBAAqB,CAAC;;;;;;;;;;AA7DvC,IAAM,YAAY,GAAG;IAC1B,WAAW,EAAA,2OAAA,CAAA,cAAA;IACX,iBAAiB,EAAA,2OAAA,CAAA,oBAAA;IACjB,uBAAuB,EAAA,2OAAA,CAAA,0BAAA;IACvB,iBAAiB,EAAA,2OAAA,CAAA,oBAAA;CAClB,CAAC;;;;;;;;;;;;;;;;;;;;AAyDK,IAAM,QAAQ,GAAG;IACtB,OAAO,EAAA,+OAAA,CAAA,UAAA;CACR,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16491, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16497, "column": 0}, "map": {"version":3,"file":"SimpleSpanProcessor.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/sdk-trace-base/src/export/SimpleSpanProcessor.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, TraceFlags } from '@opentelemetry/api';\nimport {\n  internal,\n  ExportResultCode,\n  globalErrorHandler,\n  BindOnceFuture,\n  ExportResult,\n} from '@opentelemetry/core';\nimport { Span } from '../Span';\nimport { SpanProcessor } from '../SpanProcessor';\nimport { ReadableSpan } from './ReadableSpan';\nimport { SpanExporter } from './SpanExporter';\nimport { Resource } from '@opentelemetry/resources';\n\n/**\n * An implementation of the {@link SpanProcessor} that converts the {@link Span}\n * to {@link ReadableSpan} and passes it to the configured exporter.\n *\n * Only spans that are sampled are converted.\n *\n * NOTE: This {@link SpanProcessor} exports every ended span individually instead of batching spans together, which causes significant performance overhead with most exporters. For production use, please consider using the {@link BatchSpanProcessor} instead.\n */\nexport class SimpleSpanProcessor implements SpanProcessor {\n  private _shutdownOnce: BindOnceFuture<void>;\n  private _unresolvedExports: Set<Promise<void>>;\n\n  constructor(private readonly _exporter: SpanExporter) {\n    this._shutdownOnce = new BindOnceFuture(this._shutdown, this);\n    this._unresolvedExports = new Set<Promise<void>>();\n  }\n\n  async forceFlush(): Promise<void> {\n    // await unresolved resources before resolving\n    await Promise.all(Array.from(this._unresolvedExports));\n    if (this._exporter.forceFlush) {\n      await this._exporter.forceFlush();\n    }\n  }\n\n  onStart(_span: Span, _parentContext: Context): void {}\n\n  onEnd(span: ReadableSpan): void {\n    if (this._shutdownOnce.isCalled) {\n      return;\n    }\n\n    if ((span.spanContext().traceFlags & TraceFlags.SAMPLED) === 0) {\n      return;\n    }\n\n    const doExport = () =>\n      internal\n        ._export(this._exporter, [span])\n        .then((result: ExportResult) => {\n          if (result.code !== ExportResultCode.SUCCESS) {\n            globalErrorHandler(\n              result.error ??\n                new Error(\n                  `SimpleSpanProcessor: span export failed (status ${result})`\n                )\n            );\n          }\n        })\n        .catch(error => {\n          globalErrorHandler(error);\n        });\n\n    // Avoid scheduling a promise to make the behavior more predictable and easier to test\n    if (span.resource.asyncAttributesPending) {\n      const exportPromise = (span.resource as Resource)\n        .waitForAsyncAttributes?.()\n        .then(\n          () => {\n            if (exportPromise != null) {\n              this._unresolvedExports.delete(exportPromise);\n            }\n            return doExport();\n          },\n          err => globalErrorHandler(err)\n        );\n\n      // store the unresolved exports\n      if (exportPromise != null) {\n        this._unresolvedExports.add(exportPromise);\n      }\n    } else {\n      void doExport();\n    }\n  }\n\n  shutdown(): Promise<void> {\n    return this._shutdownOnce.call();\n  }\n\n  private _shutdown(): Promise<void> {\n    return this._exporter.shutdown();\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 16739, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16807, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/internal/constants.js"],"sourcesContent":["// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n"],"names":[],"mappings":"AAAA,sEAAsE;AACtE,oDAAoD;AACpD,MAAM,sBAAsB;AAE5B,MAAM,aAAa;AACnB,MAAM,mBAAmB,OAAO,gBAAgB,IAChD,wBAAwB,GAAG;AAE3B,wCAAwC;AACxC,MAAM,4BAA4B;AAElC,gFAAgF;AAChF,iDAAiD;AACjD,MAAM,wBAAwB,aAAa;AAE3C,MAAM,gBAAgB;IACpB;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,OAAO,OAAO,GAAG;IACf;IACA;IACA;IACA;IACA;IACA;IACA,yBAAyB;IACzB,YAAY;AACd","ignoreList":[0]}},
    {"offset": {"line": 16836, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16841, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/internal/debug.js"],"sourcesContent":["const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n"],"names":[],"mappings":"AAAA,MAAM,QAAQ,AACZ,OAAO,YAAY,YACnB,QAAQ,GAAG,IACX,QAAQ,GAAG,CAAC,UAAU,IACtB,cAAc,IAAI,CAAC,QAAQ,GAAG,CAAC,UAAU,IACvC,CAAC,GAAG,OAAS,QAAQ,KAAK,CAAC,aAAa,QACxC,KAAO;AAEX,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 16843, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16848, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/internal/re.js"],"sourcesContent":["const {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst safeSrc = exports.safeSrc = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  safeSrc[index] = safe\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCEPLAIN', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`)\ncreateToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`)\ncreateToken('COERCEFULL', src[t.COERCEPLAIN] +\n              `(?:${src[t.PRERELEASE]})?` +\n              `(?:${src[t.BUILD]})?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\ncreateToken('COERCERTLFULL', src[t.COERCEFULL], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 16988, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16993, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/internal/parse-options.js"],"sourcesContent":["// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n"],"names":[],"mappings":"AAAA,2CAA2C;AAC3C,MAAM,cAAc,OAAO,MAAM,CAAC;IAAE,OAAO;AAAK;AAChD,MAAM,YAAY,OAAO,MAAM,CAAC,CAAE;AAClC,MAAM,eAAe,CAAA;IACnB,IAAI,CAAC,SAAS;QACZ,OAAO;IACT;IAEA,IAAI,OAAO,YAAY,UAAU;QAC/B,OAAO;IACT;IAEA,OAAO;AACT;AACA,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 17008, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17013, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/internal/identifiers.js"],"sourcesContent":["const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n"],"names":[],"mappings":"AAAA,MAAM,UAAU;AAChB,MAAM,qBAAqB,CAAC,GAAG;IAC7B,MAAM,OAAO,QAAQ,IAAI,CAAC;IAC1B,MAAM,OAAO,QAAQ,IAAI,CAAC;IAE1B,IAAI,QAAQ,MAAM;QAChB,IAAI,CAAC;QACL,IAAI,CAAC;IACP;IAEA,OAAO,MAAM,IAAI,IACb,AAAC,QAAQ,CAAC,OAAQ,CAAC,IACnB,AAAC,QAAQ,CAAC,OAAQ,IAClB,IAAI,IAAI,CAAC,IACT;AACN;AAEA,MAAM,sBAAsB,CAAC,GAAG,IAAM,mBAAmB,GAAG;AAE5D,OAAO,OAAO,GAAG;IACf;IACA;AACF","ignoreList":[0]}},
    {"offset": {"line": 17028, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17033, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/classes/semver.js"],"sourcesContent":["const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, safeSrc: src, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n        version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('build compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    if (release.startsWith('pre')) {\n      if (!identifier && identifierBase === false) {\n        throw new Error('invalid increment argument: identifier is empty')\n      }\n      // Avoid an invalid semver results\n      if (identifier) {\n        const r = new RegExp(`^${this.options.loose ? src[t.PRERELEASELOOSE] : src[t.PRERELEASE]}$`)\n        const match = `-${identifier}`.match(r)\n        if (!match || match[1] !== identifier) {\n          throw new Error(`invalid identifier: ${identifier}`)\n        }\n      }\n    }\n\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'release':\n        if (this.prerelease.length === 0) {\n          throw new Error(`version ${this.raw} is not a prerelease`)\n        }\n        this.prerelease.length = 0\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 17318, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17323, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/functions/parse.js"],"sourcesContent":["const SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM,QAAQ,CAAC,SAAS,SAAS,cAAc,KAAK;IAClD,IAAI,mBAAmB,QAAQ;QAC7B,OAAO;IACT;IACA,IAAI;QACF,OAAO,IAAI,OAAO,SAAS;IAC7B,EAAE,OAAO,IAAI;QACX,IAAI,CAAC,aAAa;YAChB,OAAO;QACT;QACA,MAAM;IACR;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 17338, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17343, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/functions/valid.js"],"sourcesContent":["const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM,QAAQ,CAAC,SAAS;IACtB,MAAM,IAAI,MAAM,SAAS;IACzB,OAAO,IAAI,EAAE,OAAO,GAAG;AACzB;AACA,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 17349, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17354, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/functions/clean.js"],"sourcesContent":["const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM,QAAQ,CAAC,SAAS;IACtB,MAAM,IAAI,MAAM,QAAQ,IAAI,GAAG,OAAO,CAAC,UAAU,KAAK;IACtD,OAAO,IAAI,EAAE,OAAO,GAAG;AACzB;AACA,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 17360, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17365, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/functions/inc.js"],"sourcesContent":["const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n"],"names":[],"mappings":"AAAA,MAAM;AAEN,MAAM,MAAM,CAAC,SAAS,SAAS,SAAS,YAAY;IAClD,IAAI,OAAQ,YAAa,UAAU;QACjC,iBAAiB;QACjB,aAAa;QACb,UAAU;IACZ;IAEA,IAAI;QACF,OAAO,IAAI,OACT,mBAAmB,SAAS,QAAQ,OAAO,GAAG,SAC9C,SACA,GAAG,CAAC,SAAS,YAAY,gBAAgB,OAAO;IACpD,EAAE,OAAO,IAAI;QACX,OAAO;IACT;AACF;AACA,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 17379, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17384, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/functions/diff.js"],"sourcesContent":["const parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n  const lowHasPre = !!lowVersion.prerelease.length\n\n  if (lowHasPre && !highHasPre) {\n    // Going from prerelease -> no prerelease requires some special casing\n\n    // If the low version has only a major, then it will always be a major\n    // Some examples:\n    // 1.0.0-1 -> 1.0.0\n    // 1.0.0-1 -> 1.1.1\n    // 1.0.0-1 -> 2.0.0\n    if (!lowVersion.patch && !lowVersion.minor) {\n      return 'major'\n    }\n\n    // If the main part has no difference\n    if (lowVersion.compareMain(highVersion) === 0) {\n      if (lowVersion.minor && !lowVersion.patch) {\n        return 'minor'\n      }\n      return 'patch'\n    }\n  }\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // high and low are preleases\n  return 'prerelease'\n}\n\nmodule.exports = diff\n"],"names":[],"mappings":"AAAA,MAAM;AAEN,MAAM,OAAO,CAAC,UAAU;IACtB,MAAM,KAAK,MAAM,UAAU,MAAM;IACjC,MAAM,KAAK,MAAM,UAAU,MAAM;IACjC,MAAM,aAAa,GAAG,OAAO,CAAC;IAE9B,IAAI,eAAe,GAAG;QACpB,OAAO;IACT;IAEA,MAAM,WAAW,aAAa;IAC9B,MAAM,cAAc,WAAW,KAAK;IACpC,MAAM,aAAa,WAAW,KAAK;IACnC,MAAM,aAAa,CAAC,CAAC,YAAY,UAAU,CAAC,MAAM;IAClD,MAAM,YAAY,CAAC,CAAC,WAAW,UAAU,CAAC,MAAM;IAEhD,IAAI,aAAa,CAAC,YAAY;QAC5B,sEAAsE;QAEtE,sEAAsE;QACtE,iBAAiB;QACjB,mBAAmB;QACnB,mBAAmB;QACnB,mBAAmB;QACnB,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,WAAW,KAAK,EAAE;YAC1C,OAAO;QACT;QAEA,qCAAqC;QACrC,IAAI,WAAW,WAAW,CAAC,iBAAiB,GAAG;YAC7C,IAAI,WAAW,KAAK,IAAI,CAAC,WAAW,KAAK,EAAE;gBACzC,OAAO;YACT;YACA,OAAO;QACT;IACF;IAEA,+DAA+D;IAC/D,MAAM,SAAS,aAAa,QAAQ;IAEpC,IAAI,GAAG,KAAK,KAAK,GAAG,KAAK,EAAE;QACzB,OAAO,SAAS;IAClB;IAEA,IAAI,GAAG,KAAK,KAAK,GAAG,KAAK,EAAE;QACzB,OAAO,SAAS;IAClB;IAEA,IAAI,GAAG,KAAK,KAAK,GAAG,KAAK,EAAE;QACzB,OAAO,SAAS;IAClB;IAEA,6BAA6B;IAC7B,OAAO;AACT;AAEA,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 17430, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17435, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/functions/major.js"],"sourcesContent":["const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM,QAAQ,CAAC,GAAG,QAAU,IAAI,OAAO,GAAG,OAAO,KAAK;AACtD,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 17438, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17443, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/functions/minor.js"],"sourcesContent":["const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM,QAAQ,CAAC,GAAG,QAAU,IAAI,OAAO,GAAG,OAAO,KAAK;AACtD,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 17446, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17451, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/functions/patch.js"],"sourcesContent":["const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM,QAAQ,CAAC,GAAG,QAAU,IAAI,OAAO,GAAG,OAAO,KAAK;AACtD,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 17454, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17459, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/functions/prerelease.js"],"sourcesContent":["const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM,aAAa,CAAC,SAAS;IAC3B,MAAM,SAAS,MAAM,SAAS;IAC9B,OAAO,AAAC,UAAU,OAAO,UAAU,CAAC,MAAM,GAAI,OAAO,UAAU,GAAG;AACpE;AACA,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 17465, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17470, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/functions/compare.js"],"sourcesContent":["const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM,UAAU,CAAC,GAAG,GAAG,QACrB,IAAI,OAAO,GAAG,OAAO,OAAO,CAAC,IAAI,OAAO,GAAG;AAE7C,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 17473, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17478, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/functions/rcompare.js"],"sourcesContent":["const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM,WAAW,CAAC,GAAG,GAAG,QAAU,QAAQ,GAAG,GAAG;AAChD,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 17481, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17486, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/functions/compare-loose.js"],"sourcesContent":["const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM,eAAe,CAAC,GAAG,IAAM,QAAQ,GAAG,GAAG;AAC7C,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 17489, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17494, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/functions/compare-build.js"],"sourcesContent":["const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM,eAAe,CAAC,GAAG,GAAG;IAC1B,MAAM,WAAW,IAAI,OAAO,GAAG;IAC/B,MAAM,WAAW,IAAI,OAAO,GAAG;IAC/B,OAAO,SAAS,OAAO,CAAC,aAAa,SAAS,YAAY,CAAC;AAC7D;AACA,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 17501, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17506, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/functions/sort.js"],"sourcesContent":["const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM,OAAO,CAAC,MAAM,QAAU,KAAK,IAAI,CAAC,CAAC,GAAG,IAAM,aAAa,GAAG,GAAG;AACrE,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 17509, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17514, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/functions/rsort.js"],"sourcesContent":["const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM,QAAQ,CAAC,MAAM,QAAU,KAAK,IAAI,CAAC,CAAC,GAAG,IAAM,aAAa,GAAG,GAAG;AACtE,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 17517, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17522, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/functions/gt.js"],"sourcesContent":["const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM,KAAK,CAAC,GAAG,GAAG,QAAU,QAAQ,GAAG,GAAG,SAAS;AACnD,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 17525, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17530, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/functions/lt.js"],"sourcesContent":["const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM,KAAK,CAAC,GAAG,GAAG,QAAU,QAAQ,GAAG,GAAG,SAAS;AACnD,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 17533, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17538, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/functions/eq.js"],"sourcesContent":["const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM,KAAK,CAAC,GAAG,GAAG,QAAU,QAAQ,GAAG,GAAG,WAAW;AACrD,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 17541, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17546, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/functions/neq.js"],"sourcesContent":["const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM,MAAM,CAAC,GAAG,GAAG,QAAU,QAAQ,GAAG,GAAG,WAAW;AACtD,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 17549, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17554, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/functions/gte.js"],"sourcesContent":["const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM,MAAM,CAAC,GAAG,GAAG,QAAU,QAAQ,GAAG,GAAG,UAAU;AACrD,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 17557, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17562, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/functions/lte.js"],"sourcesContent":["const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM,MAAM,CAAC,GAAG,GAAG,QAAU,QAAQ,GAAG,GAAG,UAAU;AACrD,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 17565, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17570, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/functions/cmp.js"],"sourcesContent":["const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AAEN,MAAM,MAAM,CAAC,GAAG,IAAI,GAAG;IACrB,OAAQ;QACN,KAAK;YACH,IAAI,OAAO,MAAM,UAAU;gBACzB,IAAI,EAAE,OAAO;YACf;YACA,IAAI,OAAO,MAAM,UAAU;gBACzB,IAAI,EAAE,OAAO;YACf;YACA,OAAO,MAAM;QAEf,KAAK;YACH,IAAI,OAAO,MAAM,UAAU;gBACzB,IAAI,EAAE,OAAO;YACf;YACA,IAAI,OAAO,MAAM,UAAU;gBACzB,IAAI,EAAE,OAAO;YACf;YACA,OAAO,MAAM;QAEf,KAAK;QACL,KAAK;QACL,KAAK;YACH,OAAO,GAAG,GAAG,GAAG;QAElB,KAAK;YACH,OAAO,IAAI,GAAG,GAAG;QAEnB,KAAK;YACH,OAAO,GAAG,GAAG,GAAG;QAElB,KAAK;YACH,OAAO,IAAI,GAAG,GAAG;QAEnB,KAAK;YACH,OAAO,GAAG,GAAG,GAAG;QAElB,KAAK;YACH,OAAO,IAAI,GAAG,GAAG;QAEnB;YACE,MAAM,IAAI,UAAU,CAAC,kBAAkB,EAAE,IAAI;IACjD;AACF;AACA,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 17613, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17618, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/functions/coerce.js"],"sourcesContent":["const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    // With includePrerelease option set, '1.2.3.4-rc' wants to coerce '2.3.4-rc', not '2.3.4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL]\n    let next\n    while ((next = coerceRtlRegex.exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    coerceRtlRegex.lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  const major = match[2]\n  const minor = match[3] || '0'\n  const patch = match[4] || '0'\n  const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : ''\n  const build = options.includePrerelease && match[6] ? `+${match[6]}` : ''\n\n  return parse(`${major}.${minor}.${patch}${prerelease}${build}`, options)\n}\nmodule.exports = coerce\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AACN,MAAM,EAAE,QAAQ,EAAE,EAAE,CAAC,EAAE;AAEvB,MAAM,SAAS,CAAC,SAAS;IACvB,IAAI,mBAAmB,QAAQ;QAC7B,OAAO;IACT;IAEA,IAAI,OAAO,YAAY,UAAU;QAC/B,UAAU,OAAO;IACnB;IAEA,IAAI,OAAO,YAAY,UAAU;QAC/B,OAAO;IACT;IAEA,UAAU,WAAW,CAAC;IAEtB,IAAI,QAAQ;IACZ,IAAI,CAAC,QAAQ,GAAG,EAAE;QAChB,QAAQ,QAAQ,KAAK,CAAC,QAAQ,iBAAiB,GAAG,EAAE,CAAC,EAAE,UAAU,CAAC,GAAG,EAAE,CAAC,EAAE,MAAM,CAAC;IACnF,OAAO;QACL,2DAA2D;QAC3D,qDAAqD;QACrD,0DAA0D;QAC1D,0FAA0F;QAC1F,EAAE;QACF,oDAAoD;QACpD,+DAA+D;QAC/D,iEAAiE;QACjE,qEAAqE;QACrE,MAAM,iBAAiB,QAAQ,iBAAiB,GAAG,EAAE,CAAC,EAAE,aAAa,CAAC,GAAG,EAAE,CAAC,EAAE,SAAS,CAAC;QACxF,IAAI;QACJ,MAAO,CAAC,OAAO,eAAe,IAAI,CAAC,QAAQ,KACvC,CAAC,CAAC,SAAS,MAAM,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC,MAAM,KAAK,QAAQ,MAAM,EAC7D;YACA,IAAI,CAAC,SACC,KAAK,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,KAAK,MAAM,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC,MAAM,EAAE;gBACnE,QAAQ;YACV;YACA,eAAe,SAAS,GAAG,KAAK,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM;QACzE;QACA,4BAA4B;QAC5B,eAAe,SAAS,GAAG,CAAC;IAC9B;IAEA,IAAI,UAAU,MAAM;QAClB,OAAO;IACT;IAEA,MAAM,QAAQ,KAAK,CAAC,EAAE;IACtB,MAAM,QAAQ,KAAK,CAAC,EAAE,IAAI;IAC1B,MAAM,QAAQ,KAAK,CAAC,EAAE,IAAI;IAC1B,MAAM,aAAa,QAAQ,iBAAiB,IAAI,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,EAAE,GAAG;IAC5E,MAAM,QAAQ,QAAQ,iBAAiB,IAAI,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,EAAE,GAAG;IAEvE,OAAO,MAAM,GAAG,MAAM,CAAC,EAAE,MAAM,CAAC,EAAE,QAAQ,aAAa,OAAO,EAAE;AAClE;AACA,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 17667, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17672, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/internal/lrucache.js"],"sourcesContent":["class LRUCache {\n  constructor () {\n    this.max = 1000\n    this.map = new Map()\n  }\n\n  get (key) {\n    const value = this.map.get(key)\n    if (value === undefined) {\n      return undefined\n    } else {\n      // Remove the key from the map and add it to the end\n      this.map.delete(key)\n      this.map.set(key, value)\n      return value\n    }\n  }\n\n  delete (key) {\n    return this.map.delete(key)\n  }\n\n  set (key, value) {\n    const deleted = this.delete(key)\n\n    if (!deleted && value !== undefined) {\n      // If cache is full, delete the least recently used item\n      if (this.map.size >= this.max) {\n        const firstKey = this.map.keys().next().value\n        this.delete(firstKey)\n      }\n\n      this.map.set(key, value)\n    }\n\n    return this\n  }\n}\n\nmodule.exports = LRUCache\n"],"names":[],"mappings":"AAAA,MAAM;IACJ,aAAe;QACb,IAAI,CAAC,GAAG,GAAG;QACX,IAAI,CAAC,GAAG,GAAG,IAAI;IACjB;IAEA,IAAK,GAAG,EAAE;QACR,MAAM,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;QAC3B,IAAI,UAAU,WAAW;YACvB,OAAO;QACT,OAAO;YACL,oDAAoD;YACpD,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;YAChB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK;YAClB,OAAO;QACT;IACF;IAEA,OAAQ,GAAG,EAAE;QACX,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;IACzB;IAEA,IAAK,GAAG,EAAE,KAAK,EAAE;QACf,MAAM,UAAU,IAAI,CAAC,MAAM,CAAC;QAE5B,IAAI,CAAC,WAAW,UAAU,WAAW;YACnC,wDAAwD;YACxD,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,EAAE;gBAC7B,MAAM,WAAW,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,GAAG,KAAK;gBAC7C,IAAI,CAAC,MAAM,CAAC;YACd;YAEA,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK;QACpB;QAEA,OAAO,IAAI;IACb;AACF;AAEA,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 17705, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17710, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/classes/range.js"],"sourcesContent":["const SPACE_CHARACTERS = /\\s+/g\n\n// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.formatted = undefined\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range.trim().replace(SPACE_CHARACTERS, ' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.formatted = undefined\n  }\n\n  get range () {\n    if (this.formatted === undefined) {\n      this.formatted = ''\n      for (let i = 0; i < this.set.length; i++) {\n        if (i > 0) {\n          this.formatted += '||'\n        }\n        const comps = this.set[i]\n        for (let k = 0; k < comps.length; k++) {\n          if (k > 0) {\n            this.formatted += ' '\n          }\n          this.formatted += comps[k].toString().trim()\n        }\n      }\n    }\n    return this.formatted\n  }\n\n  format () {\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('../internal/lrucache')\nconst cache = new LRU()\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\n// TODO build?\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 18158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18163, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/classes/comparator.js"],"sourcesContent":["const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 18277, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18282, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/functions/satisfies.js"],"sourcesContent":["const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM,YAAY,CAAC,SAAS,OAAO;IACjC,IAAI;QACF,QAAQ,IAAI,MAAM,OAAO;IAC3B,EAAE,OAAO,IAAI;QACX,OAAO;IACT;IACA,OAAO,MAAM,IAAI,CAAC;AACpB;AACA,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 18292, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18297, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/ranges/to-comparators.js"],"sourcesContent":["const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n"],"names":[],"mappings":"AAAA,MAAM;AAEN,iDAAiD;AACjD,MAAM,gBAAgB,CAAC,OAAO,UAC5B,IAAI,MAAM,OAAO,SAAS,GAAG,CAC1B,GAAG,CAAC,CAAA,OAAQ,KAAK,GAAG,CAAC,CAAA,IAAK,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC;AAE/D,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 18301, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18306, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/ranges/max-satisfying.js"],"sourcesContent":["const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AAEN,MAAM,gBAAgB,CAAC,UAAU,OAAO;IACtC,IAAI,MAAM;IACV,IAAI,QAAQ;IACZ,IAAI,WAAW;IACf,IAAI;QACF,WAAW,IAAI,MAAM,OAAO;IAC9B,EAAE,OAAO,IAAI;QACX,OAAO;IACT;IACA,SAAS,OAAO,CAAC,CAAC;QAChB,IAAI,SAAS,IAAI,CAAC,IAAI;YACpB,+BAA+B;YAC/B,IAAI,CAAC,OAAO,MAAM,OAAO,CAAC,OAAO,CAAC,GAAG;gBACnC,wBAAwB;gBACxB,MAAM;gBACN,QAAQ,IAAI,OAAO,KAAK;YAC1B;QACF;IACF;IACA,OAAO;AACT;AACA,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 18330, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18335, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/ranges/min-satisfying.js"],"sourcesContent":["const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AACN,MAAM,gBAAgB,CAAC,UAAU,OAAO;IACtC,IAAI,MAAM;IACV,IAAI,QAAQ;IACZ,IAAI,WAAW;IACf,IAAI;QACF,WAAW,IAAI,MAAM,OAAO;IAC9B,EAAE,OAAO,IAAI;QACX,OAAO;IACT;IACA,SAAS,OAAO,CAAC,CAAC;QAChB,IAAI,SAAS,IAAI,CAAC,IAAI;YACpB,+BAA+B;YAC/B,IAAI,CAAC,OAAO,MAAM,OAAO,CAAC,OAAO,GAAG;gBAClC,wBAAwB;gBACxB,MAAM;gBACN,QAAQ,IAAI,OAAO,KAAK;YAC1B;QACF;IACF;IACA,OAAO;AACT;AACA,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 18359, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18364, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/ranges/min-version.js"],"sourcesContent":["const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AACN,MAAM;AAEN,MAAM,aAAa,CAAC,OAAO;IACzB,QAAQ,IAAI,MAAM,OAAO;IAEzB,IAAI,SAAS,IAAI,OAAO;IACxB,IAAI,MAAM,IAAI,CAAC,SAAS;QACtB,OAAO;IACT;IAEA,SAAS,IAAI,OAAO;IACpB,IAAI,MAAM,IAAI,CAAC,SAAS;QACtB,OAAO;IACT;IAEA,SAAS;IACT,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,GAAG,CAAC,MAAM,EAAE,EAAE,EAAG;QACzC,MAAM,cAAc,MAAM,GAAG,CAAC,EAAE;QAEhC,IAAI,SAAS;QACb,YAAY,OAAO,CAAC,CAAC;YACnB,8DAA8D;YAC9D,MAAM,UAAU,IAAI,OAAO,WAAW,MAAM,CAAC,OAAO;YACpD,OAAQ,WAAW,QAAQ;gBACzB,KAAK;oBACH,IAAI,QAAQ,UAAU,CAAC,MAAM,KAAK,GAAG;wBACnC,QAAQ,KAAK;oBACf,OAAO;wBACL,QAAQ,UAAU,CAAC,IAAI,CAAC;oBAC1B;oBACA,QAAQ,GAAG,GAAG,QAAQ,MAAM;gBAC5B,eAAe,GACjB,KAAK;gBACL,KAAK;oBACH,IAAI,CAAC,UAAU,GAAG,SAAS,SAAS;wBAClC,SAAS;oBACX;oBACA;gBACF,KAAK;gBACL,KAAK;oBAEH;gBACF,wBAAwB,GACxB;oBACE,MAAM,IAAI,MAAM,CAAC,sBAAsB,EAAE,WAAW,QAAQ,EAAE;YAClE;QACF;QACA,IAAI,UAAU,CAAC,CAAC,UAAU,GAAG,QAAQ,OAAO,GAAG;YAC7C,SAAS;QACX;IACF;IAEA,IAAI,UAAU,MAAM,IAAI,CAAC,SAAS;QAChC,OAAO;IACT;IAEA,OAAO;AACT;AACA,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 18415, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18420, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/ranges/valid.js"],"sourcesContent":["const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM,aAAa,CAAC,OAAO;IACzB,IAAI;QACF,qDAAqD;QACrD,yCAAyC;QACzC,OAAO,IAAI,MAAM,OAAO,SAAS,KAAK,IAAI;IAC5C,EAAE,OAAO,IAAI;QACX,OAAO;IACT;AACF;AACA,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 18431, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18436, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/ranges/outside.js"],"sourcesContent":["const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM;AACN,MAAM,EAAE,GAAG,EAAE,GAAG;AAChB,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AAEN,MAAM,UAAU,CAAC,SAAS,OAAO,MAAM;IACrC,UAAU,IAAI,OAAO,SAAS;IAC9B,QAAQ,IAAI,MAAM,OAAO;IAEzB,IAAI,MAAM,OAAO,MAAM,MAAM;IAC7B,OAAQ;QACN,KAAK;YACH,OAAO;YACP,QAAQ;YACR,OAAO;YACP,OAAO;YACP,QAAQ;YACR;QACF,KAAK;YACH,OAAO;YACP,QAAQ;YACR,OAAO;YACP,OAAO;YACP,QAAQ;YACR;QACF;YACE,MAAM,IAAI,UAAU;IACxB;IAEA,8CAA8C;IAC9C,IAAI,UAAU,SAAS,OAAO,UAAU;QACtC,OAAO;IACT;IAEA,6DAA6D;IAC7D,8DAA8D;IAE9D,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,GAAG,CAAC,MAAM,EAAE,EAAE,EAAG;QACzC,MAAM,cAAc,MAAM,GAAG,CAAC,EAAE;QAEhC,IAAI,OAAO;QACX,IAAI,MAAM;QAEV,YAAY,OAAO,CAAC,CAAC;YACnB,IAAI,WAAW,MAAM,KAAK,KAAK;gBAC7B,aAAa,IAAI,WAAW;YAC9B;YACA,OAAO,QAAQ;YACf,MAAM,OAAO;YACb,IAAI,KAAK,WAAW,MAAM,EAAE,KAAK,MAAM,EAAE,UAAU;gBACjD,OAAO;YACT,OAAO,IAAI,KAAK,WAAW,MAAM,EAAE,IAAI,MAAM,EAAE,UAAU;gBACvD,MAAM;YACR;QACF;QAEA,iEAAiE;QACjE,mBAAmB;QACnB,IAAI,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,OAAO;YACrD,OAAO;QACT;QAEA,mEAAmE;QACnE,sDAAsD;QACtD,IAAI,CAAC,CAAC,IAAI,QAAQ,IAAI,IAAI,QAAQ,KAAK,IAAI,KACvC,MAAM,SAAS,IAAI,MAAM,GAAG;YAC9B,OAAO;QACT,OAAO,IAAI,IAAI,QAAQ,KAAK,SAAS,KAAK,SAAS,IAAI,MAAM,GAAG;YAC9D,OAAO;QACT;IACF;IACA,OAAO;AACT;AAEA,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 18505, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18510, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/ranges/gtr.js"],"sourcesContent":["// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n"],"names":[],"mappings":"AAAA,+EAA+E;AAC/E,MAAM;AACN,MAAM,MAAM,CAAC,SAAS,OAAO,UAAY,QAAQ,SAAS,OAAO,KAAK;AACtE,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 18514, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18519, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/ranges/ltr.js"],"sourcesContent":["const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n"],"names":[],"mappings":"AAAA,MAAM;AACN,2EAA2E;AAC3E,MAAM,MAAM,CAAC,SAAS,OAAO,UAAY,QAAQ,SAAS,OAAO,KAAK;AACtE,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 18523, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18528, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/ranges/intersects.js"],"sourcesContent":["const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n"],"names":[],"mappings":"AAAA,MAAM;AACN,MAAM,aAAa,CAAC,IAAI,IAAI;IAC1B,KAAK,IAAI,MAAM,IAAI;IACnB,KAAK,IAAI,MAAM,IAAI;IACnB,OAAO,GAAG,UAAU,CAAC,IAAI;AAC3B;AACA,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 18535, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18540, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/ranges/simplify.js"],"sourcesContent":["// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n"],"names":[],"mappings":"AAAA,mEAAmE;AACnE,+DAA+D;AAC/D,yEAAyE;AACzE,MAAM;AACN,MAAM;AACN,OAAO,OAAO,GAAG,CAAC,UAAU,OAAO;IACjC,MAAM,MAAM,EAAE;IACd,IAAI,QAAQ;IACZ,IAAI,OAAO;IACX,MAAM,IAAI,SAAS,IAAI,CAAC,CAAC,GAAG,IAAM,QAAQ,GAAG,GAAG;IAChD,KAAK,MAAM,WAAW,EAAG;QACvB,MAAM,WAAW,UAAU,SAAS,OAAO;QAC3C,IAAI,UAAU;YACZ,OAAO;YACP,IAAI,CAAC,OAAO;gBACV,QAAQ;YACV;QACF,OAAO;YACL,IAAI,MAAM;gBACR,IAAI,IAAI,CAAC;oBAAC;oBAAO;iBAAK;YACxB;YACA,OAAO;YACP,QAAQ;QACV;IACF;IACA,IAAI,OAAO;QACT,IAAI,IAAI,CAAC;YAAC;YAAO;SAAK;IACxB;IAEA,MAAM,SAAS,EAAE;IACjB,KAAK,MAAM,CAAC,KAAK,IAAI,IAAI,IAAK;QAC5B,IAAI,QAAQ,KAAK;YACf,OAAO,IAAI,CAAC;QACd,OAAO,IAAI,CAAC,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE;YAC/B,OAAO,IAAI,CAAC;QACd,OAAO,IAAI,CAAC,KAAK;YACf,OAAO,IAAI,CAAC,CAAC,EAAE,EAAE,KAAK;QACxB,OAAO,IAAI,QAAQ,CAAC,CAAC,EAAE,EAAE;YACvB,OAAO,IAAI,CAAC,CAAC,EAAE,EAAE,KAAK;QACxB,OAAO;YACL,OAAO,IAAI,CAAC,GAAG,IAAI,GAAG,EAAE,KAAK;QAC/B;IACF;IACA,MAAM,aAAa,OAAO,IAAI,CAAC;IAC/B,MAAM,WAAW,OAAO,MAAM,GAAG,KAAK,WAAW,MAAM,GAAG,GAAG,OAAO;IACpE,OAAO,WAAW,MAAM,GAAG,SAAS,MAAM,GAAG,aAAa;AAC5D","ignoreList":[0]}},
    {"offset": {"line": 18592, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18597, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/ranges/subset.js"],"sourcesContent":["const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 18807, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18812, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/semver/index.js"],"sourcesContent":["// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n"],"names":[],"mappings":"AAAA,2DAA2D;AAC3D,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,OAAO,OAAO,GAAG;IACf;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,WAAW,EAAE;IACjB,KAAK,WAAW,GAAG;IACnB,QAAQ,WAAW,CAAC;IACpB,qBAAqB,UAAU,mBAAmB;IAClD,eAAe,UAAU,aAAa;IACtC,oBAAoB,YAAY,kBAAkB;IAClD,qBAAqB,YAAY,mBAAmB;AACtD","ignoreList":[0]}},
    {"offset": {"line": 18901, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18907, "column": 0}, "map": {"version":3,"file":"index.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/propagator-jaeger/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {\n  JaegerPropagator,\n  UBER_BAGGAGE_HEADER_PREFIX,\n  UBER_TRACE_ID_HEADER,\n} from './JaegerPropagator';\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG","ignoreList":[0]}},
    {"offset": {"line": 18924, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18938, "column": 0}, "map": {"version":3,"file":"JaegerPropagator.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/node_modules/@opentelemetry/propagator-jaeger/src/JaegerPropagator.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  SpanContext,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n  propagation,\n  trace,\n  TraceFlags,\n} from '@opentelemetry/api';\nimport { isTracingSuppressed } from '@opentelemetry/core';\nimport { JaegerPropagatorConfig } from './types';\n\nexport const UBER_TRACE_ID_HEADER = 'uber-trace-id';\nexport const UBER_BAGGAGE_HEADER_PREFIX = 'uberctx';\n\n/**\n * Propagates {@link SpanContext} through Trace Context format propagation.\n * {trace-id}:{span-id}:{parent-span-id}:{flags}\n * {trace-id}\n * 64-bit or 128-bit random number in base16 format.\n * Can be variable length, shorter values are 0-padded on the left.\n * Value of 0 is invalid.\n * {span-id}\n * 64-bit random number in base16 format.\n * {parent-span-id}\n * Set to 0 because this field is deprecated.\n * {flags}\n * One byte bitmap, as two hex digits.\n * Inspired by jaeger-client-node project.\n */\nexport class JaegerPropagator implements TextMapPropagator {\n  private readonly _jaegerTraceHeader: string;\n  private readonly _jaegerBaggageHeaderPrefix: string;\n\n  constructor(customTraceHeader?: string);\n  constructor(config?: JaegerPropagatorConfig);\n  constructor(config?: JaegerPropagatorConfig | string) {\n    if (typeof config === 'string') {\n      this._jaegerTraceHeader = config;\n      this._jaegerBaggageHeaderPrefix = UBER_BAGGAGE_HEADER_PREFIX;\n    } else {\n      this._jaegerTraceHeader =\n        config?.customTraceHeader || UBER_TRACE_ID_HEADER;\n      this._jaegerBaggageHeaderPrefix =\n        config?.customBaggageHeaderPrefix || UBER_BAGGAGE_HEADER_PREFIX;\n    }\n  }\n\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    const spanContext = trace.getSpanContext(context);\n    const baggage = propagation.getBaggage(context);\n    if (spanContext && isTracingSuppressed(context) === false) {\n      const traceFlags = `0${(\n        spanContext.traceFlags || TraceFlags.NONE\n      ).toString(16)}`;\n\n      setter.set(\n        carrier,\n        this._jaegerTraceHeader,\n        `${spanContext.traceId}:${spanContext.spanId}:0:${traceFlags}`\n      );\n    }\n\n    if (baggage) {\n      for (const [key, entry] of baggage.getAllEntries()) {\n        setter.set(\n          carrier,\n          `${this._jaegerBaggageHeaderPrefix}-${key}`,\n          encodeURIComponent(entry.value)\n        );\n      }\n    }\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const uberTraceIdHeader = getter.get(carrier, this._jaegerTraceHeader);\n    const uberTraceId = Array.isArray(uberTraceIdHeader)\n      ? uberTraceIdHeader[0]\n      : uberTraceIdHeader;\n    const baggageValues = getter\n      .keys(carrier)\n      .filter(key => key.startsWith(`${this._jaegerBaggageHeaderPrefix}-`))\n      .map(key => {\n        const value = getter.get(carrier, key);\n        return {\n          key: key.substring(this._jaegerBaggageHeaderPrefix.length + 1),\n          value: Array.isArray(value) ? value[0] : value,\n        };\n      });\n\n    let newContext = context;\n    // if the trace id header is present and valid, inject it into the context\n    if (typeof uberTraceId === 'string') {\n      const spanContext = deserializeSpanContext(uberTraceId);\n      if (spanContext) {\n        newContext = trace.setSpanContext(newContext, spanContext);\n      }\n    }\n    if (baggageValues.length === 0) return newContext;\n\n    // if baggage values are present, inject it into the current baggage\n    let currentBaggage =\n      propagation.getBaggage(context) ?? propagation.createBaggage();\n    for (const baggageEntry of baggageValues) {\n      if (baggageEntry.value === undefined) continue;\n      currentBaggage = currentBaggage.setEntry(baggageEntry.key, {\n        value: decodeURIComponent(baggageEntry.value),\n      });\n    }\n    newContext = propagation.setBaggage(newContext, currentBaggage);\n\n    return newContext;\n  }\n\n  fields(): string[] {\n    return [this._jaegerTraceHeader];\n  }\n}\n\nconst VALID_HEX_RE = /^[0-9a-f]{1,2}$/i;\n\n/**\n * @param {string} serializedString - a serialized span context.\n * @return {SpanContext} - returns a span context represented by the serializedString.\n **/\nfunction deserializeSpanContext(serializedString: string): SpanContext | null {\n  const headers = decodeURIComponent(serializedString).split(':');\n  if (headers.length !== 4) {\n    return null;\n  }\n\n  const [_traceId, _spanId, , flags] = headers;\n\n  const traceId = _traceId.padStart(32, '0');\n  const spanId = _spanId.padStart(16, '0');\n  const traceFlags = VALID_HEX_RE.test(flags) ? parseInt(flags, 16) & 1 : 1;\n\n  return { traceId, spanId, isRemote: true, traceFlags };\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 19123, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19154, "column": 0}, "map": {"version":3,"file":"NodeTracerProvider.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/src/NodeTracerProvider.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  AsyncHooksContextManager,\n  AsyncLocalStorageContextManager,\n} from '@opentelemetry/context-async-hooks';\nimport { B3Propagator, B3InjectEncoding } from '@opentelemetry/propagator-b3';\nimport {\n  BasicTracerProvider,\n  PROPAGATOR_FACTORY,\n  SDKRegistrationConfig,\n} from '@opentelemetry/sdk-trace-base';\nimport * as semver from 'semver';\nimport { NodeTracerConfig } from './config';\nimport { JaegerPropagator } from '@opentelemetry/propagator-jaeger';\n\n/**\n * Register this TracerProvider for use with the OpenTelemetry API.\n * Undefined values may be replaced with defaults, and\n * null values will be skipped.\n *\n * @param config Configuration object for SDK registration\n */\nexport class NodeTracerProvider extends BasicTracerProvider {\n  protected static override readonly _registeredPropagators = new Map<\n    string,\n    PROPAGATOR_FACTORY\n  >([\n    ...BasicTracerProvider._registeredPropagators,\n    [\n      'b3',\n      () =>\n        new B3Propagator({ injectEncoding: B3InjectEncoding.SINGLE_HEADER }),\n    ],\n    [\n      'b3multi',\n      () => new B3Propagator({ injectEncoding: B3InjectEncoding.MULTI_HEADER }),\n    ],\n    ['jaeger', () => new JaegerPropagator()],\n  ]);\n\n  constructor(config: NodeTracerConfig = {}) {\n    super(config);\n  }\n\n  override register(config: SDKRegistrationConfig = {}): void {\n    if (config.contextManager === undefined) {\n      const ContextManager = semver.gte(process.version, '14.8.0')\n        ? AsyncLocalStorageContextManager\n        : AsyncHooksContextManager;\n      config.contextManager = new ContextManager();\n      config.contextManager.enable();\n    }\n\n    super.register(config);\n  }\n}\n"],"names":[],"mappings":";;;;;AAAA;;;;;;;;;;;;;;GAcG,CACH,MAAA,sEAG4C;AAC5C,MAAA,0DAA8E;AAC9E,MAAA,4DAIuC;AACvC,MAAA,2BAAiC;AAEjC,MAAA,kEAAoE;AAEpE;;;;;;GAMG,CACH,MAAa,kBAAmB,SAAQ,iBAAA,mBAAmB;IAkBzD,YAAY,SAA2B,CAAA,CAAE,CAAA;QACvC,KAAK,CAAC,MAAM,CAAC,CAAC;IAChB,CAAC;IAEQ,QAAQ,CAAC,SAAgC,CAAA,CAAE,EAAA;QAClD,IAAI,MAAM,CAAC,cAAc,KAAK,SAAS,EAAE;YACvC,MAAM,cAAc,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,GACxD,sBAAA,+BAA+B,GAC/B,sBAAA,wBAAwB,CAAC;YAC7B,MAAM,CAAC,cAAc,GAAG,IAAI,cAAc,EAAE,CAAC;YAC7C,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;SAChC;QAED,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IACzB,CAAC;;AAhCH,QAAA,kBAAA,GAAA,mBAiCC;AAhCoC,mBAAA,sBAAsB,GAAG,IAAI,GAAG,CAGjE;OACG,iBAAA,mBAAmB,CAAC,sBAAsB;IAC7C;QACE,IAAI;QACJ,GAAG,CACD,CADG,GACC,gBAAA,YAAY,CAAC;gBAAE,cAAc,EAAE,gBAAA,gBAAgB,CAAC,aAAa;YAAA,CAAE,CAAC;KACvE;IACD;QACE,SAAS;QACT,GAAG,CAAG,CAAD,GAAK,gBAAA,YAAY,CAAC;gBAAE,cAAc,EAAE,gBAAA,gBAAgB,CAAC,YAAY;YAAA,CAAE,CAAC;KAC1E;IACD;QAAC,QAAQ;QAAE,GAAG,CAAG,CAAD,GAAK,oBAAA,gBAAgB,EAAE;KAAC;CACzC,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19217, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19222, "column": 0}, "map": {"version":3,"file":"index.js","sources":["turbopack://[project]/node_modules/@opentelemetry/sdk-trace-node/src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { NodeTracerConfig } from './config';\nexport { NodeTracerProvider } from './NodeTracerProvider';\nexport {\n  AlwaysOffSampler,\n  AlwaysOnSampler,\n  BasicTracerProvider,\n  BatchSpanProcessor,\n  BatchSpanProcessorBrowserConfig,\n  BufferConfig,\n  ConsoleSpanExporter,\n  EXPORTER_FACTORY,\n  ForceFlushState,\n  GeneralLimits,\n  IdGenerator,\n  InMemorySpanExporter,\n  NoopSpanProcessor,\n  ParentBasedSampler,\n  PROPAGATOR_FACTORY,\n  RandomIdGenerator,\n  ReadableSpan,\n  Sampler,\n  SamplingDecision,\n  SamplingResult,\n  SDKRegistrationConfig,\n  SimpleSpanProcessor,\n  Span,\n  SpanExporter,\n  SpanLimits,\n  SpanProcessor,\n  TimedEvent,\n  TraceIdRatioBasedSampler,\n  Tracer,\n  TracerConfig,\n} from '@opentelemetry/sdk-trace-base';\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;AAGH,IAAA,uDAA0D;AAAjD,OAAA,cAAA,CAAA,SAAA,sBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,qBAAA,kBAAkB;IAAA;AAAA,GAAA;AAC3B,IAAA,4DA+BuC;AA9BrC,OAAA,cAAA,CAAA,SAAA,oBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,iBAAA,gBAAgB;IAAA;AAAA,GAAA;AAChB,OAAA,cAAA,CAAA,SAAA,mBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,iBAAA,eAAe;IAAA;AAAA,GAAA;AACf,OAAA,cAAA,CAAA,SAAA,uBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,iBAAA,mBAAmB;IAAA;AAAA,GAAA;AACnB,OAAA,cAAA,CAAA,SAAA,sBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,iBAAA,kBAAkB;IAAA;AAAA,GAAA;AAGlB,OAAA,cAAA,CAAA,SAAA,uBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,iBAAA,mBAAmB;IAAA;AAAA,GAAA;AAEnB,OAAA,cAAA,CAAA,SAAA,mBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,iBAAA,eAAe;IAAA;AAAA,GAAA;AAGf,OAAA,cAAA,CAAA,SAAA,wBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,iBAAA,oBAAoB;IAAA;AAAA,GAAA;AACpB,OAAA,cAAA,CAAA,SAAA,qBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,iBAAA,iBAAiB;IAAA;AAAA,GAAA;AACjB,OAAA,cAAA,CAAA,SAAA,sBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,iBAAA,kBAAkB;IAAA;AAAA,GAAA;AAElB,OAAA,cAAA,CAAA,SAAA,qBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,iBAAA,iBAAiB;IAAA;AAAA,GAAA;AAGjB,OAAA,cAAA,CAAA,SAAA,oBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,iBAAA,gBAAgB;IAAA;AAAA,GAAA;AAGhB,OAAA,cAAA,CAAA,SAAA,uBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,iBAAA,mBAAmB;IAAA;AAAA,GAAA;AACnB,OAAA,cAAA,CAAA,SAAA,QAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,iBAAA,IAAI;IAAA;AAAA,GAAA;AAKJ,OAAA,cAAA,CAAA,SAAA,4BAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,iBAAA,wBAAwB;IAAA;AAAA,GAAA;AACxB,OAAA,cAAA,CAAA,SAAA,UAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,iBAAA,MAAM;IAAA;AAAA,GAAA","ignoreList":[0]}},
    {"offset": {"line": 19339, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}