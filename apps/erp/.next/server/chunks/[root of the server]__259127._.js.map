{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///Users/ridho/Documents/go/github.com/red-ant-colony/web-monorepo/apps/erp/apps/erp/src/shared/config/next-auth.ts"],"sourcesContent":["import NextAuth, { NextAuthOptions } from 'next-auth';\nimport CredentialsProvider from 'next-auth/providers/credentials';\n\nexport const authOptions: NextAuthOptions = {\n    providers: [\n        CredentialsProvider({\n            name: 'Credentials',\n            credentials: {\n                username: { label: 'Username', type: 'text' },\n                password: { label: 'Password', type: 'password' }\n            },\n            async authorize(credentials) {\n                const res = await fetch('https://dummyjson.com/auth/login', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({\n                        username: credentials?.username,\n                        password: credentials?.password,\n                        expiresInMins: 30\n                    })\n                });\n\n                const user = await res.json();\n                if (res.ok && user) {\n                    return user;\n                }\n\n                console.log('ssini', user);\n\n                return null;\n            }\n        })\n    ],\n    session: {\n        strategy: 'jwt'\n    },\n    callbacks: {\n        async jwt({ token, user }) {\n            if (user) {\n                token.id = user.id;\n                token.email = user.email;\n            }\n\n            return token;\n        },\n        async session({ session, token }) {\n            console.log('ngecek', session);\n            session.user.id = token.id as string;\n            session.user.email = token.email as string;\n\n            return session;\n        }\n    },\n    pages: {\n        signIn: '/auth'\n    }\n};\n\nexport default NextAuth(authOptions);\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,MAAM,cAA+B;IACxC,WAAW;QACP,CAAA,GAAA,0JAAA,CAAA,UAAmB,AAAD,EAAE;YAChB,MAAM;YACN,aAAa;gBACT,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAO;gBAC5C,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YACpD;YACA,MAAM,WAAU,WAAW;gBACvB,MAAM,MAAM,MAAM,MAAM,oCAAoC;oBACxD,QAAQ;oBACR,SAAS;wBAAE,gBAAgB;oBAAmB;oBAC9C,MAAM,KAAK,SAAS,CAAC;wBACjB,UAAU,aAAa;wBACvB,UAAU,aAAa;wBACvB,eAAe;oBACnB;gBACJ;gBAEA,MAAM,OAAO,MAAM,IAAI,IAAI;gBAC3B,IAAI,IAAI,EAAE,IAAI,MAAM;oBAChB,OAAO;gBACX;gBAEA,QAAQ,GAAG,CAAC,SAAS;gBAErB,OAAO;YACX;QACJ;KACH;IACD,SAAS;QACL,UAAU;IACd;IACA,WAAW;QACP,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACrB,IAAI,MAAM;gBACN,MAAM,EAAE,GAAG,KAAK,EAAE;gBAClB,MAAM,KAAK,GAAG,KAAK,KAAK;YAC5B;YAEA,OAAO;QACX;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC5B,QAAQ,GAAG,CAAC,UAAU;YACtB,QAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,EAAE;YAC1B,QAAQ,IAAI,CAAC,KAAK,GAAG,MAAM,KAAK;YAEhC,OAAO;QACX;IACJ;IACA,OAAO;QACH,QAAQ;IACZ;AACJ;uCAEe,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE"}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///Users/ridho/Documents/go/github.com/red-ant-colony/web-monorepo/apps/erp/apps/erp/src/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["import { authOptions } from '../../../../shared/config/next-auth';\nimport NextAuth from 'next-auth';\n\nconst handler = NextAuth(authOptions);\n\nexport { handler as GET, handler as POST };\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,MAAM,UAAU,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE,wJAAA,CAAA,cAAW"}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}