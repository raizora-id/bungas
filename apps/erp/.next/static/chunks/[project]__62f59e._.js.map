{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/ridho/Documents/go/github.com/red-ant-colony/web-monorepo/apps/erp/apps/erp/src/shared/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n    return twMerge(clsx(inputs));\n}\n\n\ninterface CurrencyParams {\n    number: number\n    maxFractionDigits?: number\n    currency?: string\n  }\n  \n  interface PercentageParams {\n    number: number\n    decimals?: number\n  }\n  \n  interface MillionParams {\n    number: number\n    decimals?: number\n  }\n  \n  type FormatterFunctions = {\n    currency: (params: CurrencyParams) => string\n    unit: (number: number) => string\n    percentage: (params: PercentageParams) => string\n    million: (params: MillionParams) => string\n  }\n  \nexport const formatters: FormatterFunctions = {\n    currency: ({\n      number,\n      maxFractionDigits = 2,\n      currency = \"USD\",\n    }: CurrencyParams): string => {\n      return new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency,\n        maximumFractionDigits: maxFractionDigits,\n      }).format(number)\n    },\n  \n    unit: (number: number): string => {\n      return new Intl.NumberFormat(\"en-US\", {\n        style: \"decimal\",\n      }).format(number)\n    },\n  \n    percentage: ({ number, decimals = 1 }: PercentageParams): string => {\n      return new Intl.NumberFormat(\"en-US\", {\n        style: \"percent\",\n        minimumFractionDigits: decimals,\n        maximumFractionDigits: decimals,\n      }).format(number)\n    },\n  \n    million: ({ number, decimals = 1 }: MillionParams): string => {\n      return `${new Intl.NumberFormat(\"en-US\", {\n        style: \"decimal\",\n        minimumFractionDigits: decimals,\n        maximumFractionDigits: decimals,\n      }).format(number)}M`\n    },\n  }\n  "],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACtC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACxB;AA0BO,MAAM,aAAiC;IAC1C,UAAU,CAAC,EACT,MAAM,EACN,oBAAoB,CAAC,EACrB,WAAW,KAAK,EACD;QACf,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;YACpC,OAAO;YACP;YACA,uBAAuB;QACzB,GAAG,MAAM,CAAC;IACZ;IAEA,MAAM,CAAC;QACL,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;YACpC,OAAO;QACT,GAAG,MAAM,CAAC;IACZ;IAEA,YAAY,CAAC,EAAE,MAAM,EAAE,WAAW,CAAC,EAAoB;QACrD,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;YACpC,OAAO;YACP,uBAAuB;YACvB,uBAAuB;QACzB,GAAG,MAAM,CAAC;IACZ;IAEA,SAAS,CAAC,EAAE,MAAM,EAAE,WAAW,CAAC,EAAiB;QAC/C,OAAO,GAAG,IAAI,KAAK,YAAY,CAAC,SAAS;YACvC,OAAO;YACP,uBAAuB;YACvB,uBAAuB;QACzB,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;IACtB;AACF"}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/ridho/Documents/go/github.com/red-ant-colony/web-monorepo/apps/erp/packages/ui/src/components/base/button/index.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { cn } from '../../../lib/utils';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport { type VariantProps, cva } from 'class-variance-authority';\n\nconst buttonVariants = cva(\n    'inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0',\n    {\n        variants: {\n            variant: {\n                default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n                destructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n                outline: 'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n                secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n                ghost: 'hover:bg-accent hover:text-accent-foreground',\n                link: 'text-primary underline-offset-4 hover:underline'\n            },\n            size: {\n                default: 'h-10 px-4 py-2',\n                sm: 'h-9 rounded-md px-3',\n                lg: 'h-11 rounded-md px-8',\n                icon: 'size-10'\n            }\n        },\n        defaultVariants: {\n            variant: 'default',\n            size: 'default'\n        }\n    }\n);\n\nexport interface ButtonProps\n    extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n        VariantProps<typeof buttonVariants> {\n    asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n    ({ className, variant, size, asChild = false, ...props }, ref) => {\n        const Comp = asChild ? Slot : 'button';\n\n        return <Comp className={cn(buttonVariants({ variant, size, className }))} ref={ref} {...props} />;\n    }\n);\nButton.displayName = 'Button';\n\nexport { Button, buttonVariants };"],"names":[],"mappings":";;;;;AAAA;AAEA;AAGA;AAFA;;;;;;AAIA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACrB,4VACA;IACI,UAAU;QACN,SAAS;YACL,SAAS;YACT,aAAa;YACb,SAAS;YACT,WAAW;YACX,OAAO;YACP,MAAM;QACV;QACA,MAAM;YACF,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACV;IACJ;IACA,iBAAiB;QACb,SAAS;QACT,MAAM;IACV;AACJ;AASJ,MAAM,uBAAS,8JAAM,UAAU,MAC3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACtD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBAAO,6LAAC;QAAK,WAAW,CAAA,GAAA,wIAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QAAK,KAAK;QAAM,GAAG,KAAK;;;;;;AACjG;;AAEJ,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///Users/ridho/Documents/go/github.com/red-ant-colony/web-monorepo/apps/erp/packages/ui/src/components/base/input/index.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { cn } from '../../../lib/utils';\n\nexport interface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(({ className, type, ...props }, ref) => {\n    return (\n        <input\n            type={type}\n            className={cn(\n                'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n                className\n            )}\n            ref={ref}\n            {...props}\n        />\n    );\n});\nInput.displayName = 'Input';\n\nexport { Input };"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAIA,MAAM,sBAAQ,8JAAM,UAAU,MAA+B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IACzF,qBACI,6LAAC;QACG,MAAM;QACN,WAAW,CAAA,GAAA,wIAAA,CAAA,KAAE,AAAD,EACR,qXACA;QAEJ,KAAK;QACJ,GAAG,KAAK;;;;;;AAGrB;;AACA,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file:///Users/ridho/Documents/go/github.com/red-ant-colony/web-monorepo/apps/erp/packages/ui/src/components/base/label/index.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport { cn } from '../../../lib/utils';\nimport * as LabelPrimitive from '@radix-ui/react-label';\n\nimport { type VariantProps, cva } from 'class-variance-authority';\n\nconst labelVariants = cva('text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70');\n\nconst Label = React.forwardRef<\n    React.ElementRef<typeof LabelPrimitive.Root>,\n    React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> & VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n    <LabelPrimitive.Root ref={ref} className={cn(labelVariants(), className)} {...props} />\n));\nLabel.displayName = LabelPrimitive.Root.displayName;\n\nexport { Label };\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAGA;AAFA;AALA;;;;;;AASA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EAAE;AAE1B,MAAM,sBAAQ,8JAAM,UAAU,MAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,6LAAC,qKAAe,IAAI;QAAC,KAAK;QAAK,WAAW,CAAA,GAAA,wIAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAAa,GAAG,KAAK;;;;;;;AAEvF,MAAM,WAAW,GAAG,qKAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file:///Users/ridho/Documents/go/github.com/red-ant-colony/web-monorepo/apps/erp/apps/erp/src/shared/components/auth/auth-form.tsx"],"sourcesContent":["'use client';\n\nimport type React from 'react';\nimport { type FormEvent, useState } from 'react'\n\nimport { cn } from '@/shared/lib/utils';\nimport { Button } from '@ui/components/base/button';\nimport { Input } from '@ui/components/base/input';\nimport { Label } from '@ui/components/base/label';\n\nimport { signIn } from 'next-auth/react';\n\nexport function LoginForm({ className, ...props }: React.ComponentProps<'form'>) {\n    const [userName, setUsername] = useState<undefined | string>('emilys');\n    const [password, setPassword] = useState<undefined | string>('emilyspass');\n\n    function HandleSubmit(e: FormEvent) {\n        e.preventDefault();\n        signIn('credentials', {\n            username: userName,\n            password,\n            callbackUrl: '/dashboard'\n        });\n    }\n\n    return (\n        <form className={cn('flex flex-col gap-6', className)} {...props} onSubmit={HandleSubmit}>\n            <div className='flex flex-col items-center gap-2 text-center'>\n                <h1 className='text-2xl font-bold'>Login to your account</h1>\n                <p className='text-muted-foreground text-sm text-balance'>\n                    Enter your email below to login to your account\n                </p>\n            </div>\n            <div className='grid gap-6'>\n                <div className='grid gap-2'>\n                    <Label htmlFor='username'>Email</Label>\n                    <Input\n                        onChange={(e) => setUsername(e.target.value)}\n                        value={userName}\n                        id='username'\n                        type='text'\n                        placeholder=''\n                    />\n                </div>\n                <div className='grid gap-2'>\n                    <div className='flex items-center'>\n                        <Label htmlFor='password'>Password</Label>\n                        <a href='#' className='ml-auto text-sm underline-offset-4 hover:underline'>\n                            Forgot your password?\n                        </a>\n                    </div>\n                    <Input\n                        onChange={(e) => setPassword(e.target.value)}\n                        id='password'\n                        type='password'\n                        value={password}\n                    />\n                </div>\n                <Button type='submit' className='w-full'>\n                    Sign In\n                </Button>\n                <div className='after:border-border relative text-center text-sm after:absolute after:inset-0 after:top-1/2 after:z-0 after:flex after:items-center after:border-t'>\n                    <span className='bg-background text-muted-foreground relative z-10 px-2'>Or continue with</span>\n                </div>\n            </div>\n        </form>\n    );\n}\n"],"names":[],"mappings":";;;;AAGA;AAEA;AACA;AACA;AACA;AAEA;;;AAVA;;;;;;;AAYO,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAqC;;IAC3E,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAsB;IAC7D,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAsB;IAE7D,SAAS,aAAa,CAAY;QAC9B,EAAE,cAAc;QAChB,CAAA,GAAA,iJAAA,CAAA,SAAM,AAAD,EAAE,eAAe;YAClB,UAAU;YACV;YACA,aAAa;QACjB;IACJ;IAEA,qBACI,6LAAC;QAAK,WAAW,CAAA,GAAA,+IAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QAAa,GAAG,KAAK;QAAE,UAAU;;0BACxE,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAG,WAAU;kCAAqB;;;;;;kCACnC,6LAAC;wBAAE,WAAU;kCAA6C;;;;;;;;;;;;0BAI9D,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAI,WAAU;;0CACX,6LAAC,iKAAA,CAAA,QAAK;gCAAC,SAAQ;0CAAW;;;;;;0CAC1B,6LAAC,iKAAA,CAAA,QAAK;gCACF,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;gCAC3C,OAAO;gCACP,IAAG;gCACH,MAAK;gCACL,aAAY;;;;;;;;;;;;kCAGpB,6LAAC;wBAAI,WAAU;;0CACX,6LAAC;gCAAI,WAAU;;kDACX,6LAAC,iKAAA,CAAA,QAAK;wCAAC,SAAQ;kDAAW;;;;;;kDAC1B,6LAAC;wCAAE,MAAK;wCAAI,WAAU;kDAAqD;;;;;;;;;;;;0CAI/E,6LAAC,iKAAA,CAAA,QAAK;gCACF,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;gCAC3C,IAAG;gCACH,MAAK;gCACL,OAAO;;;;;;;;;;;;kCAGf,6LAAC,kKAAA,CAAA,SAAM;wBAAC,MAAK;wBAAS,WAAU;kCAAS;;;;;;kCAGzC,6LAAC;wBAAI,WAAU;kCACX,cAAA,6LAAC;4BAAK,WAAU;sCAAyD;;;;;;;;;;;;;;;;;;;;;;;AAK7F;GAvDgB;KAAA"}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}