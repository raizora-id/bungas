{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/ridho/Documents/go/github.com/red-ant-colony/web-monorepo/apps/erp/apps/erp/src/shared/api/queryClient.ts"],"sourcesContent":["import {\n  MutationCache,\n  QueryCache,\n  QueryClient,\n  type QueryKey,\n} from \"@tanstack/react-query\";\n\ninterface QueryMeta {\n  successMessage?: string;\n  errorMessage?: string;\n  invalidateQueries?: QueryKey | QueryKey[];\n  mutationId?: string;\n}\n\n/**\n * Configure and create the React Query client\n * Includes global configuration for queries and mutations\n */\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      retry: 1, // Retry failed requests once\n      refetchOnWindowFocus: false, // Disable automatic refetch on window focus\n      staleTime: 30000, // Consider data fresh for 30 seconds\n    },\n  },\n\n  /**\n   * Global query cache configuration\n   * Handles success and error states for all queries\n   */\n  queryCache: new QueryCache({\n    onSuccess: (_data: any, query: any) => {\n      // Handle successful queries\n      const meta = query.meta as QueryMeta | undefined;\n      if (meta?.successMessage) {\n        console.log(\"success >> \", meta.successMessage);\n      }\n    },\n    onError: (error: any, query: any) => {\n      // Handle query errors\n      const meta = query.meta as QueryMeta | undefined;\n      const errorMessage = meta?.errorMessage || (error as Error).message;\n\n      // Log error for debugging\n      console.error(\"Query Error:\", {\n        queryKey: query.queryKey,\n        error,\n        meta: query.meta,\n      });\n    },\n  }),\n\n  /**\n   * Global mutation cache configuration\n   * Handles success and error states for all mutations\n   */\n  mutationCache: new MutationCache({\n    onSuccess: (_data: any, _variables: any, _context: any, mutation: any) => {\n      // Handle successful mutations\n      const meta = mutation.meta as QueryMeta | undefined;\n      if (meta?.successMessage) {\n        console.log(\"success >> \", meta.successMessage);\n      }\n\n      // Invalidate relevant queries if specified\n      if (meta?.invalidateQueries) {\n        const queriesToInvalidate = Array.isArray(meta.invalidateQueries)\n          ? meta.invalidateQueries\n          : [meta.invalidateQueries];\n\n        queriesToInvalidate.forEach((queryKey) => {\n          queryClient.invalidateQueries({ queryKey });\n        });\n      }\n    },\n    onError: (error, _variables, _context, mutation) => {\n      // Handle mutation errors\n      const meta = mutation.meta as QueryMeta | undefined;\n\n      // Log error for debugging\n      console.error(\"Mutation Error:\", {\n        mutation: meta?.mutationId,\n        error,\n      });\n    },\n  }),\n});\n\n/**\n * Query key factory\n * Provides consistent query keys across the application\n */\nexport const queryKeys = {\n  products: {\n    all: [\"products\"] as const,\n    byId: (id: string) => [\"products\", id] as const,\n    byCategory: (category: string) =>\n      [\"products\", \"category\", category] as const,\n  },\n  orders: {\n    all: [\"orders\"] as const,\n    byId: (id: string) => [\"orders\", id] as const,\n    byUser: (userId: string) => [\"orders\", \"user\", userId] as const,\n  },\n  users: {\n    all: [\"users\"] as const,\n    byId: (id: string) => [\"users\", id] as const,\n  },\n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;;AAkBO,MAAM,cAAc,IAAI,+LAAA,CAAA,cAAW,CAAC;IACzC,gBAAgB;QACd,SAAS;YACP,OAAO;YACP,sBAAsB;YACtB,WAAW;QACb;IACF;IAEA;;;GAGC,GACD,YAAY,IAAI,8LAAA,CAAA,aAAU,CAAC;QACzB,WAAW,CAAC,OAAY;YACtB,4BAA4B;YAC5B,MAAM,OAAO,MAAM,IAAI;YACvB,IAAI,MAAM,gBAAgB;gBACxB,QAAQ,GAAG,CAAC,eAAe,KAAK,cAAc;YAChD;QACF;QACA,SAAS,CAAC,OAAY;YACpB,sBAAsB;YACtB,MAAM,OAAO,MAAM,IAAI;YACvB,MAAM,eAAe,MAAM,gBAAgB,AAAC,MAAgB,OAAO;YAEnE,0BAA0B;YAC1B,QAAQ,KAAK,CAAC,gBAAgB;gBAC5B,UAAU,MAAM,QAAQ;gBACxB;gBACA,MAAM,MAAM,IAAI;YAClB;QACF;IACF;IAEA;;;GAGC,GACD,eAAe,IAAI,iMAAA,CAAA,gBAAa,CAAC;QAC/B,WAAW,CAAC,OAAY,YAAiB,UAAe;YACtD,8BAA8B;YAC9B,MAAM,OAAO,SAAS,IAAI;YAC1B,IAAI,MAAM,gBAAgB;gBACxB,QAAQ,GAAG,CAAC,eAAe,KAAK,cAAc;YAChD;YAEA,2CAA2C;YAC3C,IAAI,MAAM,mBAAmB;gBAC3B,MAAM,sBAAsB,MAAM,OAAO,CAAC,KAAK,iBAAiB,IAC5D,KAAK,iBAAiB,GACtB;oBAAC,KAAK,iBAAiB;iBAAC;gBAE5B,oBAAoB,OAAO,CAAC,CAAC;oBAC3B,YAAY,iBAAiB,CAAC;wBAAE;oBAAS;gBAC3C;YACF;QACF;QACA,SAAS,CAAC,OAAO,YAAY,UAAU;YACrC,yBAAyB;YACzB,MAAM,OAAO,SAAS,IAAI;YAE1B,0BAA0B;YAC1B,QAAQ,KAAK,CAAC,mBAAmB;gBAC/B,UAAU,MAAM;gBAChB;YACF;QACF;IACF;AACF;AAMO,MAAM,YAAY;IACvB,UAAU;QACR,KAAK;YAAC;SAAW;QACjB,MAAM,CAAC,KAAe;gBAAC;gBAAY;aAAG;QACtC,YAAY,CAAC,WACX;gBAAC;gBAAY;gBAAY;aAAS;IACtC;IACA,QAAQ;QACN,KAAK;YAAC;SAAS;QACf,MAAM,CAAC,KAAe;gBAAC;gBAAU;aAAG;QACpC,QAAQ,CAAC,SAAmB;gBAAC;gBAAU;gBAAQ;aAAO;IACxD;IACA,OAAO;QACL,KAAK;YAAC;SAAQ;QACd,MAAM,CAAC,KAAe;gBAAC;gBAAS;aAAG;IACrC;AACF"}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///Users/ridho/Documents/go/github.com/red-ant-colony/web-monorepo/apps/erp/apps/erp/src/shared/providers/react-query-provider.tsx"],"sourcesContent":["'use client';\n\nimport { queryClient } from '@/shared/api/queryClient';\nimport { QueryClientProvider } from '@tanstack/react-query';\n\nconst ReactQueryProvider = ({ children }: { children: React.ReactNode }) => {\n    return <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>;\n};\n\nexport default ReactQueryProvider;\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKA,MAAM,qBAAqB,CAAC,EAAE,QAAQ,EAAiC;IACnE,qBAAO,6LAAC,wMAAA,CAAA,sBAAmB;QAAC,QAAQ,qJAAA,CAAA,cAAW;kBAAG;;;;;;AACtD;KAFM;uCAIS"}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["file:///Users/ridho/Documents/go/github.com/red-ant-colony/web-monorepo/apps/erp/apps/erp/src/shared/providers/session-provider.tsx"],"sourcesContent":["'use client';\n\nimport { SessionProvider } from 'next-auth/react';\n\nexport default function AuthProvider({ children }: { children: React.ReactNode }) {\n    return <SessionProvider>{children}</SessionProvider>;\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS,aAAa,EAAE,QAAQ,EAAiC;IAC5E,qBAAO,6LAAC,iJAAA,CAAA,kBAAe;kBAAE;;;;;;AAC7B;KAFwB"}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":["file:///Users/ridho/Documents/go/github.com/red-ant-colony/web-monorepo/apps/erp/packages/ui/src/hooks/use-toast.ts"],"sourcesContent":["\"use client\";\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\";\n\nimport type {\n\tToastActionElement,\n\tToastProps,\n} from \"../components/base/toast/index\";\n\nconst TOAST_LIMIT = 1;\nconst TOAST_REMOVE_DELAY = 1000000;\n\ntype ToasterToast = ToastProps & {\n\tid: string;\n\ttitle?: React.ReactNode;\n\tdescription?: React.ReactNode;\n\taction?: ToastActionElement;\n};\n\nconst actionTypes = {\n\tADD_TOAST: \"ADD_TOAST\",\n\tUPDATE_TOAST: \"UPDATE_TOAST\",\n\tDISMISS_TOAST: \"DISMISS_TOAST\",\n\tREMOVE_TOAST: \"REMOVE_TOAST\",\n} as const;\n\nlet count = 0;\n\nfunction genId() {\n\tcount = (count + 1) % Number.MAX_SAFE_INTEGER;\n\treturn count.toString();\n}\n\ntype ActionType = typeof actionTypes;\n\ntype Action =\n\t| {\n\t\t\ttype: ActionType[\"ADD_TOAST\"];\n\t\t\ttoast: ToasterToast;\n\t  }\n\t| {\n\t\t\ttype: ActionType[\"UPDATE_TOAST\"];\n\t\t\ttoast: Partial<ToasterToast>;\n\t  }\n\t| {\n\t\t\ttype: ActionType[\"DISMISS_TOAST\"];\n\t\t\ttoastId?: ToasterToast[\"id\"];\n\t  }\n\t| {\n\t\t\ttype: ActionType[\"REMOVE_TOAST\"];\n\t\t\ttoastId?: ToasterToast[\"id\"];\n\t  };\n\ninterface State {\n\ttoasts: ToasterToast[];\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>();\n\nconst addToRemoveQueue = (toastId: string) => {\n\tif (toastTimeouts.has(toastId)) {\n\t\treturn;\n\t}\n\n\tconst timeout = setTimeout(() => {\n\t\ttoastTimeouts.delete(toastId);\n\t\tdispatch({\n\t\t\ttype: \"REMOVE_TOAST\",\n\t\t\ttoastId: toastId,\n\t\t});\n\t}, TOAST_REMOVE_DELAY);\n\n\ttoastTimeouts.set(toastId, timeout);\n};\n\nexport const reducer = (state: State, action: Action): State => {\n\tswitch (action.type) {\n\t\tcase \"ADD_TOAST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttoasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n\t\t\t};\n\n\t\tcase \"UPDATE_TOAST\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttoasts: state.toasts.map((t) =>\n\t\t\t\t\tt.id === action.toast.id ? { ...t, ...action.toast } : t\n\t\t\t\t),\n\t\t\t};\n\n\t\tcase \"DISMISS_TOAST\": {\n\t\t\tconst { toastId } = action;\n\n\t\t\t// ! Side effects ! - This could be extracted into a dismissToast() action,\n\t\t\t// but I'll keep it here for simplicity\n\t\t\tif (toastId) {\n\t\t\t\taddToRemoveQueue(toastId);\n\t\t\t} else {\n\t\t\t\t// biome-ignore lint/complexity/noForEach: <explanation>\n\t\t\t\tstate.toasts.forEach((toast) => {\n\t\t\t\t\taddToRemoveQueue(toast.id);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttoasts: state.toasts.map((t) =>\n\t\t\t\t\tt.id === toastId || toastId === undefined\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t...t,\n\t\t\t\t\t\t\t\topen: false,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t: t\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\t\tcase \"REMOVE_TOAST\":\n\t\t\tif (action.toastId === undefined) {\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\ttoasts: [],\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttoasts: state.toasts.filter((t) => t.id !== action.toastId),\n\t\t\t};\n\t}\n};\n\nconst listeners: Array<(state: State) => void> = [];\n\nlet memoryState: State = { toasts: [] };\n\nfunction dispatch(action: Action) {\n\tmemoryState = reducer(memoryState, action);\n\t// biome-ignore lint/complexity/noForEach: <explanation>\n\tlisteners.forEach((listener) => {\n\t\tlistener(memoryState);\n\t});\n}\n\ntype Toast = Omit<ToasterToast, \"id\">;\n\nfunction toast({ ...props }: Toast) {\n\tconst id = genId();\n\n\tconst update = (props: ToasterToast) =>\n\t\tdispatch({\n\t\t\ttype: \"UPDATE_TOAST\",\n\t\t\ttoast: { ...props, id },\n\t\t});\n\tconst dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id });\n\n\tdispatch({\n\t\ttype: \"ADD_TOAST\",\n\t\ttoast: {\n\t\t\t...props,\n\t\t\tid,\n\t\t\topen: true,\n\t\t\tonOpenChange: (open) => {\n\t\t\t\tif (!open) {\n\t\t\t\t\tdismiss();\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t});\n\n\treturn {\n\t\tid: id,\n\t\tdismiss,\n\t\tupdate,\n\t};\n}\n\nfunction useToast() {\n\tconst [state, setState] = React.useState<State>(memoryState);\n\n\t// biome-ignore lint/correctness/useExhaustiveDependencies: <explanation>\n\tReact.useEffect(() => {\n\t\tlisteners.push(setState);\n\t\treturn () => {\n\t\t\tconst index = listeners.indexOf(setState);\n\t\t\tif (index > -1) {\n\t\t\t\tlisteners.splice(index, 1);\n\t\t\t}\n\t\t};\n\t}, [state]);\n\n\treturn {\n\t\t...state,\n\t\ttoast,\n\t\tdismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n\t};\n}\n\nexport { useToast, toast };\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 354, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 360, "column": 0}, "map": {"version":3,"sources":["file:///Users/ridho/Documents/go/github.com/red-ant-colony/web-monorepo/apps/erp/packages/ui/src/lib/utils.ts"],"sourcesContent":["import { clsx } from \"clsx\";\n\nimport { twMerge } from \"tailwind-merge\";\n\n// @ts-ignore\nexport function cn(...inputs) {\n\treturn twMerge(clsx(inputs));\n}\n\nexport function formatDate(date: Date | string | number, opts: Intl.DateTimeFormatOptions = {}) {\n\treturn new Intl.DateTimeFormat(\"en-US\", {\n\t  month: opts.month ?? \"long\",\n\t  day: opts.day ?? \"numeric\",\n\t  year: opts.year ?? \"numeric\",\n\t  ...opts,\n\t}).format(new Date(date));\n  }\n  \n  \n  export function toSentenceCase(str: string) {\n\treturn str\n\t  .replace(/_/g, \" \")\n\t  .replace(/([A-Z])/g, \" $1\")\n\t  .toLowerCase()\n\t  .replace(/^\\w/, (c) => c.toUpperCase())\n\t  .replace(/\\s+/g, \" \")\n\t  .trim();\n  }\n\n\n// Tremor Raw focusInput [v0.0.1]\n\nexport const focusInput = [\n\t// base\n\t\"focus:ring-2\",\n\t// ring color\n\t\"focus:ring-blue-200 focus:dark:ring-blue-700/30\",\n\t// border color\n\t\"focus:border-blue-500 focus:dark:border-blue-700\",\n  ]\n  \n  // Tremor Raw focusRing [v0.0.1]\n  \n  export const focusRing = [\n\t// base\n\t\"outline outline-offset-2 outline-0 focus-visible:outline-2\",\n\t// outline color\n\t\"outline-blue-500 dark:outline-blue-500\",\n  ]\n  \n  // Tremor Raw hasErrorInput [v0.0.1]\n  \n  export const hasErrorInput = [\n\t// base\n\t\"ring-2\",\n\t// border color\n\t\"border-red-500 dark:border-red-700\",\n\t// ring color\n\t\"ring-red-200 dark:ring-red-700/30\",\n  ]\n  \n  interface CurrencyParams {\n\tnumber: number\n\tmaxFractionDigits?: number\n\tcurrency?: string\n  }\n  \n  interface PercentageParams {\n\tnumber: number\n\tdecimals?: number\n  }\n  \n  interface MillionParams {\n\tnumber: number\n\tdecimals?: number\n  }\n  \n  type FormatterFunctions = {\n\tcurrency: (params: CurrencyParams) => string\n\tunit: (number: number) => string\n\tpercentage: (params: PercentageParams) => string\n\tmillion: (params: MillionParams) => string\n  }\n  \n  export const formatters: FormatterFunctions = {\n\tcurrency: ({\n\t  number,\n\t  maxFractionDigits = 2,\n\t  currency = \"USD\",\n\t}: CurrencyParams): string => {\n\t  return new Intl.NumberFormat(\"en-US\", {\n\t\tstyle: \"currency\",\n\t\tcurrency,\n\t\tmaximumFractionDigits: maxFractionDigits,\n\t  }).format(number)\n\t},\n  \n\tunit: (number: number): string => {\n\t  return new Intl.NumberFormat(\"en-US\", {\n\t\tstyle: \"decimal\",\n\t  }).format(number)\n\t},\n  \n\tpercentage: ({ number, decimals = 1 }: PercentageParams): string => {\n\t  return new Intl.NumberFormat(\"en-US\", {\n\t\tstyle: \"percent\",\n\t\tminimumFractionDigits: decimals,\n\t\tmaximumFractionDigits: decimals,\n\t  }).format(number)\n\t},\n  \n\tmillion: ({ number, decimals = 1 }: MillionParams): string => {\n\t  return `${new Intl.NumberFormat(\"en-US\", {\n\t\tstyle: \"decimal\",\n\t\tminimumFractionDigits: decimals,\n\t\tmaximumFractionDigits: decimals,\n\t  }).format(number)}M`\n\t},\n  }\n  \n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;AAGO,SAAS,GAAG,GAAG,MAAM;IAC3B,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACrB;AAEO,SAAS,WAAW,IAA4B,EAAE,OAAmC,CAAC,CAAC;IAC7F,OAAO,IAAI,KAAK,cAAc,CAAC,SAAS;QACtC,OAAO,KAAK,KAAK,IAAI;QACrB,KAAK,KAAK,GAAG,IAAI;QACjB,MAAM,KAAK,IAAI,IAAI;QACnB,GAAG,IAAI;IACT,GAAG,MAAM,CAAC,IAAI,KAAK;AAClB;AAGO,SAAS,eAAe,GAAW;IAC3C,OAAO,IACJ,OAAO,CAAC,MAAM,KACd,OAAO,CAAC,YAAY,OACpB,WAAW,GACX,OAAO,CAAC,OAAO,CAAC,IAAM,EAAE,WAAW,IACnC,OAAO,CAAC,QAAQ,KAChB,IAAI;AACN;AAKK,MAAM,aAAa;IACzB,OAAO;IACP;IACA,aAAa;IACb;IACA,eAAe;IACf;CACE;AAIM,MAAM,YAAY;IAC1B,OAAO;IACP;IACA,gBAAgB;IAChB;CACE;AAIM,MAAM,gBAAgB;IAC9B,OAAO;IACP;IACA,eAAe;IACf;IACA,aAAa;IACb;CACE;AAyBM,MAAM,aAAiC;IAC/C,UAAU,CAAC,EACT,MAAM,EACN,oBAAoB,CAAC,EACrB,WAAW,KAAK,EACD;QACf,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;YACvC,OAAO;YACP;YACA,uBAAuB;QACtB,GAAG,MAAM,CAAC;IACZ;IAEA,MAAM,CAAC;QACL,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;YACvC,OAAO;QACN,GAAG,MAAM,CAAC;IACZ;IAEA,YAAY,CAAC,EAAE,MAAM,EAAE,WAAW,CAAC,EAAoB;QACrD,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;YACvC,OAAO;YACP,uBAAuB;YACvB,uBAAuB;QACtB,GAAG,MAAM,CAAC;IACZ;IAEA,SAAS,CAAC,EAAE,MAAM,EAAE,WAAW,CAAC,EAAiB;QAC/C,OAAO,GAAG,IAAI,KAAK,YAAY,CAAC,SAAS;YAC1C,OAAO;YACP,uBAAuB;YACvB,uBAAuB;QACtB,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;IACtB;AACC"}},
    {"offset": {"line": 440, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 446, "column": 0}, "map": {"version":3,"sources":["file:///Users/ridho/Documents/go/github.com/red-ant-colony/web-monorepo/apps/erp/packages/ui/src/components/base/toast/index.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\n\nimport { cn } from '../../../lib/utils';\nimport * as ToastPrimitives from '@radix-ui/react-toast';\n\nimport { type VariantProps, cva } from 'class-variance-authority';\nimport { X } from 'lucide-react';\n\nconst ToastProvider = ToastPrimitives.Provider;\n\nconst ToastViewport = React.forwardRef<\n    React.ElementRef<typeof ToastPrimitives.Viewport>,\n    React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n    <ToastPrimitives.Viewport\n        ref={ref}\n        className={cn(\n            'fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]',\n            className\n        )}\n        {...props}\n    />\n));\nToastViewport.displayName = ToastPrimitives.Viewport.displayName;\n\nconst toastVariants = cva(\n    'group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full',\n    {\n        variants: {\n            variant: {\n                default: 'border bg-background text-foreground',\n                destructive: 'destructive group border-destructive bg-destructive text-destructive-foreground'\n            }\n        },\n        defaultVariants: {\n            variant: 'default'\n        }\n    }\n);\n\nconst Toast = React.forwardRef<\n    React.ElementRef<typeof ToastPrimitives.Root>,\n    React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> & VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n    return <ToastPrimitives.Root ref={ref} className={cn(toastVariants({ variant }), className)} {...props} />;\n});\nToast.displayName = ToastPrimitives.Root.displayName;\n\nconst ToastAction = React.forwardRef<\n    React.ElementRef<typeof ToastPrimitives.Action>,\n    React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n    <ToastPrimitives.Action\n        ref={ref}\n        className={cn(\n            'inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive',\n            className\n        )}\n        {...props}\n    />\n));\nToastAction.displayName = ToastPrimitives.Action.displayName;\n\nconst ToastClose = React.forwardRef<\n    React.ElementRef<typeof ToastPrimitives.Close>,\n    React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n    <ToastPrimitives.Close\n        ref={ref}\n        className={cn(\n            'absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600',\n            className\n        )}\n        toast-close=''\n        {...props}>\n        <X className='size-4' />\n    </ToastPrimitives.Close>\n));\nToastClose.displayName = ToastPrimitives.Close.displayName;\n\nconst ToastTitle = React.forwardRef<\n    React.ElementRef<typeof ToastPrimitives.Title>,\n    React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n    <ToastPrimitives.Title ref={ref} className={cn('text-sm font-semibold', className)} {...props} />\n));\nToastTitle.displayName = ToastPrimitives.Title.displayName;\n\nconst ToastDescription = React.forwardRef<\n    React.ElementRef<typeof ToastPrimitives.Description>,\n    React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n    <ToastPrimitives.Description ref={ref} className={cn('text-sm opacity-90', className)} {...props} />\n));\nToastDescription.displayName = ToastPrimitives.Description.displayName;\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>;\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>;\n\nexport {\n    type ToastProps,\n    type ToastActionElement,\n    ToastProvider,\n    ToastViewport,\n    Toast,\n    ToastTitle,\n    ToastDescription,\n    ToastClose,\n    ToastAction\n};\n"],"names":[],"mappings":";;;;;;;;;;AAEA;AAEA;AAGA;AAFA;AAGA;AARA;;;;;;;AAUA,MAAM,gBAAgB,qKAAgB,QAAQ;AAE9C,MAAM,8BAAgB,8JAAM,UAAU,MAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,6LAAC,qKAAgB,QAAQ;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,wIAAA,CAAA,KAAE,AAAD,EACR,qIACA;QAEH,GAAG,KAAK;;;;;;;AAGjB,cAAc,WAAW,GAAG,qKAAgB,QAAQ,CAAC,WAAW;AAEhE,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACpB,6lBACA;IACI,UAAU;QACN,SAAS;YACL,SAAS;YACT,aAAa;QACjB;IACJ;IACA,iBAAiB;QACb,SAAS;IACb;AACJ;AAGJ,MAAM,sBAAQ,8JAAM,UAAU,OAG5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE;IACjC,qBAAO,6LAAC,qKAAgB,IAAI;QAAC,KAAK;QAAK,WAAW,CAAA,GAAA,wIAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAC1G;;AACA,MAAM,WAAW,GAAG,qKAAgB,IAAI,CAAC,WAAW;AAEpD,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,6LAAC,qKAAgB,MAAM;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,wIAAA,CAAA,KAAE,AAAD,EACR,sgBACA;QAEH,GAAG,KAAK;;;;;;;AAGjB,YAAY,WAAW,GAAG,qKAAgB,MAAM,CAAC,WAAW;AAE5D,MAAM,2BAAa,8JAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,6LAAC,qKAAgB,KAAK;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,wIAAA,CAAA,KAAE,AAAD,EACR,yVACA;QAEJ,eAAY;QACX,GAAG,KAAK;kBACT,cAAA,6LAAC,+LAAA,CAAA,IAAC;YAAC,WAAU;;;;;;;;;;;;AAGrB,WAAW,WAAW,GAAG,qKAAgB,KAAK,CAAC,WAAW;AAE1D,MAAM,2BAAa,8JAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,6LAAC,qKAAgB,KAAK;QAAC,KAAK;QAAK,WAAW,CAAA,GAAA,wIAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QAAa,GAAG,KAAK;;;;;;;AAEjG,WAAW,WAAW,GAAG,qKAAgB,KAAK,CAAC,WAAW;AAE1D,MAAM,iCAAmB,8JAAM,UAAU,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,6LAAC,qKAAgB,WAAW;QAAC,KAAK;QAAK,WAAW,CAAA,GAAA,wIAAA,CAAA,KAAE,AAAD,EAAE,sBAAsB;QAAa,GAAG,KAAK;;;;;;;AAEpG,iBAAiB,WAAW,GAAG,qKAAgB,WAAW,CAAC,WAAW"}},
    {"offset": {"line": 575, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 581, "column": 0}, "map": {"version":3,"sources":["file:///Users/ridho/Documents/go/github.com/red-ant-colony/web-monorepo/apps/erp/packages/ui/src/components/base/toaster/index.tsx"],"sourcesContent":["'use client';\n\nimport { useToast } from '../../../hooks/use-toast';\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport\n} from '../toast';\n\n\nexport function Toaster() {\n  const { toasts } = useToast();\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className='grid gap-1'>\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && <ToastDescription>{description}</ToastDescription>}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        );\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAaO,SAAS;;IACd,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,iJAAA,CAAA,WAAQ,AAAD;IAE1B,qBACE,6LAAC,iKAAA,CAAA,gBAAa;;YACX,OAAO,GAAG,CAAC,SAAU,EAAE,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,OAAO;gBAChE,qBACE,6LAAC,iKAAA,CAAA,QAAK;oBAAW,GAAG,KAAK;;sCACvB,6LAAC;4BAAI,WAAU;;gCACZ,uBAAS,6LAAC,iKAAA,CAAA,aAAU;8CAAE;;;;;;gCACtB,6BAAe,6LAAC,iKAAA,CAAA,mBAAgB;8CAAE;;;;;;;;;;;;wBAEpC;sCACD,6LAAC,iKAAA,CAAA,aAAU;;;;;;mBAND;;;;;YAShB;0BACA,6LAAC,iKAAA,CAAA,gBAAa;;;;;;;;;;;AAGpB;GApBgB;;QACK,iJAAA,CAAA,WAAQ;;;KADb"}},
    {"offset": {"line": 660, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 666, "column": 0}, "map": {"version":3,"sources":["file:///Users/ridho/Documents/go/github.com/red-ant-colony/web-monorepo/apps/erp/apps/erp/src/shared/i18n/index.ts"],"sourcesContent":["\"use server\";\n\nimport { cookies } from \"next/headers\";\nimport { DEFAULT_LOCALE } from \"./config\";\nimport { I18N_COOKIE_NAME } from \"./config\";\n\nexport async function getUserLocale() {\n\n  return (await cookies()).get(I18N_COOKIE_NAME)?.value || DEFAULT_LOCALE;\n}\n\nexport async function setUserLocale(locale: string) {\n (await cookies()).set(I18N_COOKIE_NAME, locale);\n}"],"names":[],"mappings":";;;;;;IAMsB;IAKA"}},
    {"offset": {"line": 674, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 680, "column": 0}, "map": {"version":3,"sources":["file:///Users/ridho/Documents/go/github.com/red-ant-colony/web-monorepo/apps/erp/apps/erp/src/app/_refine_context.tsx"],"sourcesContent":["\"use client\";\n\n\nimport { GitHubBanner, type I18nProvider, Refine } from \"@refinedev/core\";\nimport routerProvider from \"@refinedev/nextjs-router\";\nimport React, { Suspense, type PropsWithChildren } from \"react\";\nimport { useLocale, useTranslations } from \"next-intl\";\nimport { setUserLocale } from \"@/shared/i18n\";\n\ntype Props = {\n  themeMode?: string;\n};\n\nexport const RefineContext = ({\n  themeMode,\n  children,\n}: PropsWithChildren<Props>) => {\n  const t = useTranslations();\n\n  const i18nProvider: I18nProvider = {\n    translate: (key: string, options: any) => t(key, options),\n    getLocale: useLocale,\n    changeLocale: setUserLocale,\n  };\n\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n            <Refine\n              i18nProvider={i18nProvider}\n              resources={[\n                {\n                  name: \"blog_posts\",\n                  list: \"/blog-posts\",\n                  create: \"/blog-posts/create\",\n                  edit: \"/blog-posts/edit/:id\",\n                  show: \"/blog-posts/show/:id\",\n                  meta: {\n                    canDelete: true,\n                  },\n                },\n                {\n                  name: \"categories\",\n                  list: \"/categories\",\n                  create: \"/categories/create\",\n                  edit: \"/categories/edit/:id\",\n                  show: \"/categories/show/:id\",\n                  meta: {\n                    canDelete: true,\n                  },\n                },\n              ]}\n              options={{\n                syncWithLocation: true,\n                warnWhenUnsavedChanges: true,\n                useNewQueryKeys: true,\n              }}\n            >\n              {children}\n            </Refine>\n    </Suspense>\n  );\n};"],"names":[],"mappings":";;;;AAKA;AAEA;AADA;AAHA;;;AAHA;;;;;AAaO,MAAM,gBAAgB,CAAC,EAC5B,SAAS,EACT,QAAQ,EACiB;;IACzB,MAAM,IAAI,CAAA,GAAA,mKAAA,CAAA,kBAAe,AAAD;IAExB,MAAM,eAA6B;QACjC,WAAW,CAAC,KAAa,UAAiB,EAAE,KAAK;QACjD,WAAW,mKAAA,CAAA,YAAS;QACpB,cAAc,gJAAA,CAAA,gBAAa;IAC7B;IAEA,qBACE,6LAAC,6JAAA,CAAA,WAAQ;QAAC,wBAAU,6LAAC;sBAAI;;;;;;kBACjB,cAAA,6LAAC,wJAAA,CAAA,SAAM;YACL,cAAc;YACd,WAAW;gBACT;oBACE,MAAM;oBACN,MAAM;oBACN,QAAQ;oBACR,MAAM;oBACN,MAAM;oBACN,MAAM;wBACJ,WAAW;oBACb;gBACF;gBACA;oBACE,MAAM;oBACN,MAAM;oBACN,QAAQ;oBACR,MAAM;oBACN,MAAM;oBACN,MAAM;wBACJ,WAAW;oBACb;gBACF;aACD;YACD,SAAS;gBACP,kBAAkB;gBAClB,wBAAwB;gBACxB,iBAAiB;YACnB;sBAEC;;;;;;;;;;;AAIf;GAhDa;;QAID,mKAAA,CAAA,kBAAe;;;KAJd"}},
    {"offset": {"line": 763, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}